{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///DateMonth.js","webpack:///webpack/bootstrap 281f44e4e08f7411ae8a","webpack:///./~/knockout/build/output/knockout-latest.debug.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/addStyles.js","webpack:///./src/index.js","webpack:///./src/DateMonth.js","webpack:///./src/DateMonth.css","webpack:///./src/bootstrap.css","webpack:///./~/fecha/fecha.js","webpack:///./src/DateMonth.html","webpack:///./~/knockout-punches/knockout.punches.js","webpack:///./~/lodash.range/index.js","webpack:///./src/DateMonth.css?3562","webpack:///./src/bootstrap.css?e8f4","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/module.js"],"names":["root","factory","exports","module","define","amd","DateMonth","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","DEBUG","undefined","window","eval","document","navigator","jQueryInstance","jQuery","JSON","a","apply","koExports","amdRequire","valuesArePrimitiveAndEqual","b","oldValueIsPrimitive","e","primitiveTypes","throttle","callback","timeout","timeoutInstance","ko","utils","setTimeout","debounce","clearTimeout","applyExtenders","requestedExtenders","target","objectForEach","key","value","extenderHandler","extenders","limitNotifySubscribers","event","defaultEvent","_limitBeforeChange","_origNotifySubscribers","_limitChange","computedDisposeDependencyCallback","id","entryToDispose","dispose","computedBeginDependencyDetectionCallback","subscribable","computedObservable","state","computedState","isDisposed","disposalCount","disposalCandidates","addDependencyTracking","dependencyTracking","isSleeping","_target","subscribeToDependency","makeEventHandlerShortcut","eventName","bindingHandlers","init","element","valueAccessor","allBindings","viewModel","bindingContext","newValueAccessor","result","makeWithIfBinding","bindingKey","isWith","isNot","makeContextCallback","didDisplayOnLastUpdate","savedNodes","computed","dataValue","unwrapObservable","shouldDisplay","isFirstRender","needsRefresh","computedContext","getDependenciesCount","cloneNodes","virtualElements","childNodes","setDomNodeChildren","applyBindingsToDescendants","emptyNode","disposeWhenNodeIsRemoved","controlsDescendantBindings","expressionRewriting","bindingRewriteValidators","allowedBindings","exportSymbol","koPath","object","tokens","split","length","exportProperty","owner","publicName","version","options","deferUpdates","useOnlyNativeEvents","obj","action","prop","hasOwnProperty","extend","source","setPrototypeOf","proto","__proto__","isClickOnCheckableElement","eventType","tagNameLower","type","toLowerCase","inputType","toggleDomNodeCssClass","node","classNames","shouldHaveClass","addOrRemoveFn","classList","arrayForEach","match","cssClassNameRegex","className","baseVal","toggleObjectClassPropertyString","currentClassNames","addOrRemoveItem","join","canSetPrototype","Array","canUseSymbols","Symbol","knownEvents","knownEventTypesByEventName","keyEventTypeName","test","userAgent","MouseEvents","knownEventsForType","j","eventsThatMustBeRegisteredUsingAttachEvent","propertychange","ieVersion","div","createElement","iElems","getElementsByTagName","innerHTML","isIe6","isIe7","fieldsIncludedWithJsonPost","array","arrayIndexOf","item","prototype","indexOf","arrayFirst","predicate","predicateOwner","arrayRemoveItem","itemToRemove","index","splice","shift","arrayGetDistinctValues","push","arrayMap","mapping","arrayFilter","arrayPushAll","valuesToPush","included","existingEntryIndex","peekObservable","setPrototypeOfOrExtend","objectMap","emptyDomNode","domNode","firstChild","removeNode","moveCleanedNodesToContainerElement","nodes","nodesArray","makeArray","templateDocument","ownerDocument","container","appendChild","cleanNode","shouldCleanNodes","newNodesArray","clonedNode","cloneNode","replaceDomNodes","nodeToReplaceOrNodeArray","nodesToReplaceArray","nodeType","insertionPoint","parent","parentNode","insertBefore","fixUpContinuousNodeArray","continuousNodeArray","current","last","nextSibling","setOptionNodeSelectionState","optionNode","isSelected","setAttribute","selected","stringTrim","string","trim","toString","replace","stringStartsWith","startsWith","substring","domNodeIsContainedBy","containedByNode","contains","compareDocumentPosition","domNodeIsAttachedToDocument","documentElement","anyDomNodeIsAttachedToDocument","tagName","catchFunctionErrors","delegate","onError","arguments","handler","deferError","error","registerEventHandler","wrappedHandler","mustUseAttachEvent","addEventListener","attachEvent","Error","attachEventHandler","attachEventName","domNodeDisposal","addDisposeCallback","detachEvent","bind","triggerEvent","useClickWorkaround","createEvent","dispatchEvent","eventCategory","initEvent","click","fireEvent","trigger","isObservable","peek","setTextContent","textContent","innerTextNode","createTextNode","data","forceRefresh","setElementName","name","mergeAttributes","elem","style","zoom","ensureSelectElementIsRenderedCorrectly","selectElement","originalWidth","width","range","min","max","arrayLikeObject","createSymbolOrString","identifier","getFormFields","form","fieldName","fields","concat","isMatchingField","field","matches","parseJson","jsonString","parse","Function","stringifyJson","replacer","space","stringify","postJson","urlOrForm","params","includeFields","url","originalForm","display","method","input","body","submitter","submit","removeChild","originalFunction","partialArgs","slice","args","domData","getAll","createIfNotFound","dataStoreKey","dataStoreKeyExpandoPropertyName","hasExistingDataStore","dataStore","uniqueId","Date","getTime","get","allDataForNode","set","clear","nextKey","getDisposeCallbacksCollection","allDisposeCallbacks","domDataKey","destroyCallbacksCollection","cleanSingleNode","callbacks","cleanExternalData","cleanableNodeTypesWithDescendants","cleanImmediateCommentTypeChildren","nodeWithChildren","child","nextChild","cleanableNodeTypes","1","8","9","removeDisposeCallback","callbacksCollection","descendants","cleanData","getWrap","tags","lookup","none","simpleHtmlParse","html","documentContext","windowContext","parentWindow","defaultView","wrap","depth","markup","innerShiv","mayRequireCreateElementHack","lastChild","jQueryHtmlParse","parseHTML","elems","clean","table","tbody","tr","select","thead","tfoot","td","th","option","optgroup","parseHtmlFragment","setHtml","parsedNodes","memoization","randomMax8HexChars","Math","random","generateRandomId","findMemoNodes","rootNode","appendToArray","memoId","parseMemoText","nodeValue","memos","memoize","unmemoize","callbackParams","unmemoizeDomNodeAndDescendants","extraCallbackParamsArray","combinedParams","memoText","tasks","processTasks","taskQueueLength","task","mark","countMarks","nextIndexToProcess","taskQueue","ex","scheduledProcess","scheduleTaskProcessing","scheduler","nextHandle","MutationObserver","observe","attributes","toggle","script","onreadystatechange","schedule","func","cancel","handle","resetForTesting","runEarly","throttleEvaluation","writeTimeoutInstance","dependentObservable","read","write","rateLimit","limitFunction","_deferUpdates","limit","deferred","notifySubscribers","notify","notifyWhen","equalityComparer","boolean","number","subscription","disposeCallback","ko_subscribable_fn","instance","_subscriptions","_versionNumber","subscribe","callbackTarget","self","boundCallback","afterSubscriptionRemove","beforeSubscriptionAdd","valueToNotify","updateVersion","hasSubscriptionsForEvent","dependencyDetection","begin","end","getVersion","hasChanged","versionToCheck","ignoreBeforeChange","previousValue","pendingValue","selfIsObservable","beforeChange","finish","_notificationIsPending","isDifferent","getSubscriptionsCount","total","subscriptions","oldValue","newValue","fn","isSubscribable","getId","lastId","outerFrames","currentFrame","pop","registerDependency","_id","ignore","callbackArgs","isInitial","ignoreDependencies","observableLatestValue","observable","initialValue","valueWillMutate","valueHasMutated","observableFn","protoProperty","hasPrototype","isWriteableObservable","hasWriteFunction","observableArray","initialValues","trackArrayChanges","remove","valueOrPredicate","underlyingArray","removedValues","removeAll","arrayOfValues","allValues","destroy","_destroy","destroyAll","oldItem","newItem","methodName","cacheDiffForKnownOperation","methodCallResult","arrayChangeEventName","trackChanges","trackingChanges","underlyingNotifySubscribersFunction","pendingNotifications","previousContents","cachedDiff","arrayChangeSubscription","currentContents","changes","getChanges","compareArrays","compareArrayOptions","sparse","underlyingBeforeSubscriptionAddFunction","underlyingAfterSubscriptionRemoveFunction","rawArray","operationName","pushDiff","status","diff","arrayLength","argsLength","offset","startIndex","endDeleteIndex","endAddIndex","endIndex","additions","deletions","argsIndex","findMovesInArrayComparison","evaluatorFunctionOrOptions","evaluatorFunctionTarget","writeFunction","isStale","haveDependenciesChanged","evaluateImmediate","latestValue","isBeingEvaluated","suppressDisposalUntilDisposeWhenReturnsFalse","pure","readFunction","disposeWhen","domNodeDisposalCallback","dependenciesCount","evaluationTimeoutInstance","computedFn","pureComputedOverrides","deferEvaluation","deferEvaluationOverrides","_options","isActive","trackingObj","_order","_version","dependency","markDirty","_evalDelayed","respondToChange","evaluatePossiblyAsync","dirtySub","changeSub","throttleEvaluationTimeout","notifyChange","evaluateImmediate_CallReadWithDependencyDetection","dependencyDetectionContext","evaluateImmediate_CallReadThenEndDependencyDetection","dependeciesOrder","order","protoProp","isComputed","isPureComputed","pureComputed","mapJsObjectGraph","rootObject","mapInputCallback","visitedObjects","objectLookup","canHaveProperties","RegExp","String","Number","Boolean","outputProperties","save","visitPropertiesOrArrayEntries","indexer","propertyValue","previouslyMappedValue","visitorCallback","toJSON","propertyName","keys","values","maxNestedObservableDepth","toJS","valueToMap","plainJavaScriptObject","constructor","existingIndex","hasDomDataExpandoProperty","selectExtensions","readValue","optionValueDomDataKey","getAttributeNode","specified","text","selectedIndex","writeValue","allowUnset","optionValue","selection","n","size","getWriteableValue","expression","javaScriptReservedWords","javaScriptAssignmentTarget","parseObjectLiteral","objectLiteralString","str","charCodeAt","toks","bindingToken","tok","unknown","divisionLookBehind","keywordRegexLookBehind","substr","preProcessBindings","bindingsStringOrKeyValueArray","bindingOptions","processKeyValue","val","callPreprocessHook","preprocess","writableVal","bindingParams","getBindingHandler","twoWayBindings","propertyAccessorResultStrings","makeValueAccessors","resultStrings","valueAccessors","keyValueArray","keyValue","stringDouble","stringSingle","stringRegexp","specials","everyThingElse","oneNotSpace","in","return","typeof","keyValueArrayContainsKey","writeValueToProperty","property","checkIfDifferent","propWriters","isStartComment","startCommentRegex","commentNodesHaveTextProperty","isEndComment","endCommentRegex","getVirtualChildren","startComment","allowUnbalanced","currentNode","children","getMatchingEndComment","allVirtualChildren","getUnbalancedChildTags","childNode","captureRemaining","matchingEndComment","createComment","htmlTagsWithOptionallyClosingChildren","ul","ol","virtualChildren","endCommentNode","prepend","containerNode","nodeToPrepend","insertAfter","nodeToInsert","insertAfterNode","hasBindingValue","virtualNodeBindingValue","regexMatch","normaliseVirtualElementDomStructure","elementVerified","unbalancedTags","nodeToInsertBefore","createBindingsStringEvaluatorViaCache","bindingsString","cache","cacheKey","createBindingsStringEvaluator","rewrittenBindings","functionBody","defaultBindingAttributeName","bindingProvider","bindingCache","nodeHasBindings","getAttribute","components","getComponentNameForNode","getBindings","getBindingsString","parsedBindings","parseBindingsString","addBindingsForCustomElement","getBindingAccessors","bindingFunction","message","makeValueAccessor","evaluateValueAccessor","makeAccessorsFromFunction","makeBindingAccessors","bindings","context","getBindingsAndMakeAccessors","validateThatBindingIsAllowedForVirtualElements","bindingName","validator","applyBindingsToDescendantsInternal","elementOrVirtualElement","bindingContextsMayDifferFromDomParentElement","currentChild","nextInQueue","provider","preprocessNode","applyBindingsToNodeAndDescendantsInternal","nodeVerified","bindingContextMayDifferFromDomParentElement","shouldBindDescendants","isElement","shouldApplyBindings","applyBindingsToNodeInternal","bindingDoesNotRecurseIntoElementTypes","topologicalSortBindings","bindingsConsidered","cyclicDependencyStack","pushBinding","binding","after","bindingDependencyKey","sourceBindings","bindingsUpdater","alreadyBound","boundElementDomDataKey","storedBindingContextForNode","_subscribable","bindingHandlerThatControlsDescendantBindings","getValueAccessor","has","orderedBindings","bindingKeyAndHandler","handlerInitFn","handlerUpdateFn","update","initResult","$data","getBindingContext","viewModelOrBindingContext","textarea","template","dataItemOrAccessor","parentContext","dataItemAlias","extendCallback","updateContext","dataItemOrObservable","isFunc","dataItem","$parents","$root","$rawData","_addNode","createChildContext","$parentContext","$parent","unshift","properties","storedBindingContextDomDataKey","applyBindingAccessorsToNode","applyBindingsToNode","applyBindings","contextFor","dataFor","getObjectOwnProperty","propName","loadComponentAndNotify","componentName","completedAsync","loadingSubscribablesCache","beginLoadingComponent","definition","config","isSynchronousComponent","synchronous","loadedDefinitionsCache","getFirstResultFromLoaders","argsExceptCallback","candidateLoaders","loaders","currentCandidateLoader","methodInstance","wasAborted","synchronousReturnValue","suppressLoaderExceptions","cachedDefinition","clearCachedDefinition","_getFirstResultFromLoaders","resolveConfig","errorCallback","makeCallBackWhenZero","tryIssueCallback","templateConfig","viewModelConfig","possiblyGetConfigFromAmd","loadedConfig","resolvedTemplate","resolvedViewModel","createViewModelKey","resolveTemplate","isDocumentFragment","isDomElement","cloneNodesFromTemplateSourceElement","elemInstance","getElementById","resolveViewModel","fixedInstance","componentInfo","content","HTMLElement","DocumentFragment","require","makeErrorCallback","defaultConfigRegistry","register","isRegistered","unregister","defaultLoader","getConfig","loadComponent","loadTemplate","loadViewModel","_allRegisteredComponents","getComponentParamsFromCustomElement","paramsAttribute","nativeBindingProviderInstance","rawParamComputedValues","paramValue","paramName","paramValueComputed","$raw","component","componentBindingValue","createDocumentFragment","newDocFrag","allComponents","cloneTemplateIntoElement","componentDefinition","clonedNodesArray","createViewModel","originalChildNodes","componentParams","componentViewModelFactory","templateNodes","componentLoadingOperationUniqueId","ignored1","ignored2","currentViewModel","currentLoadingOperationId","disposeAssociatedComponentViewModel","currentViewModelDispose","loadingOperationId","componentViewModel","childBindingContext","ctx","$component","$componentTemplateNodes","attrHtmlToJavascriptMap","class","for","attr","attrName","attrValue","toRemove","removeAttribute","checked","updateModel","isChecked","elemValue","useCheckedValue","checkedValue","isRadio","modelValue","valueIsArray","writableValue","rawValueIsNonArrayObservable","oldElemValue","updateView","isCheckbox","rawValue","uniqueName","classesWrittenByBindingKey","css","enable","disabled","disable","eventsToHandle","handlerReturnValue","handlerFunction","argsForHandler","preventDefault","returnValue","bubble","cancelBubble","stopPropagation","foreach","makeTemplateValueAccessor","unwrappedValue","as","includeDestroyed","afterAdd","beforeRemove","afterRender","beforeMove","afterMove","templateEngine","nativeTemplateEngine","hasfocusUpdatingProperty","hasfocusLastValue","hasfocus","handleElementFocusChange","isFocused","ownerDoc","active","activeElement","handleElementFocusIn","handleElementFocusOut","focus","blur","hasFocus","captionPlaceholder","selectedOptions","applyToObject","defaultValue","predicateType","optionForArrayItem","arrayEntry","oldOptions","previousSelectedValues","valueAllowUnset","itemUpdate","optionText","setSelectionCallback","newOptions","captionValue","filteredArray","selectWasPreviouslyEmpty","multiple","previousScrollTop","scrollTop","unwrappedArray","arrayToDomNodeChildrenOptions","setDomNodeChildrenFromArrayMapping","selectionChanged","abs","valueToWrite","styleName","styleValue","parseVersion","parseFloat","operaVersion","opera","parseInt","safariVersion","firefoxVersion","selectionChangeRegisteredName","selectionChangeHandlerName","selectionChangeHandler","registerForSelectionChangeEvent","textInput","timeoutHandle","elementValueBeforeEvent","previousElementValue","elementValue","_ko_textInputProcessedEvent","deferUpdateModel","ieUpdateModel","onEvent","_forceUpdateOn","textinput","addBinding","currentIndex","eventsToCatch","requestedEventsToCatch","propertyChangedFired","valueUpdateHandler","ieAutoCompleteHackNeeded","autocomplete","updateFromModel","valueHasChanged","applyValueAction","visible","isCurrentlyVisible","renderTemplateSource","templateSource","createJavaScriptEvaluatorBlock","makeTemplateSource","templateSources","domElement","anonymousTemplate","renderTemplate","isTemplateRewritten","allowTemplateRewriting","rewriteTemplate","rewriterCallback","rewritten","templateRewriting","validateDataBindValuesForRewriting","allValidators","possibleErrorMessage","constructMemoizedTagReplacement","dataBindAttributeValue","tagToRetain","nodeName","dataBindKeyValueArray","rewrittenDataBindAttributeValue","applyBindingsToNextSiblingScript","memoizeDataBindingAttributeSyntaxRegex","memoizeVirtualContainerBindingSyntaxRegex","ensureTemplateIsRewritten","htmlString","memoizeBindingAttributeSyntax","applyMemoizedBindingsToNextSibling","nodeToBind","getTemplateDomData","templatesDomDataKey","setTemplateDomData","templateScript","templateTextArea","templateTemplate","templateElement","templateType","elemContentsProperty","dataDomDataPrefix","templateData","containerData","textData","invokeForEachNodeInContinuousRange","firstNode","lastNode","firstOutOfRangeNode","activateBindingsOnContinuousNodeArray","nextNodeInRange","nodePreviousSibling","previousSibling","newNodes","getFirstNodeFromPossibleArray","nodeOrNodeArray","executeTemplate","targetNodeOrNodeArray","renderMode","firstTargetNode","templateEngineToUse","_templateEngine","renderedNodesArray","haveAddedNodesToParent","resolveTemplateName","disposeOldComputedAndStoreNewOne","newComputed","oldComputed","templateComputedDomDataKey","setTemplateEngine","dataOrBindingContext","whenToDispose","activelyDisposeWhenNodeIsRemoved","templateName","renderTemplateForEach","arrayOrObservableArray","targetNode","parentBindingContext","arrayItemContext","executeTemplateForArrayItem","arrayValue","$index","activateBindingsCallback","addedNodesArray","bindingValue","templateComputed","ifnot","dataArray","innerBindingContext","parsedBindingValue","left","right","limitFailedCompares","failedCompares","r","leftItem","rightItem","moved","oldArray","newArray","dontLimitMoves","compareSmallArrayToBigArray","statusNotInOld","statusNotInNew","smlArray","bigArray","statusNotInSml","statusNotInBig","smlIndex","bigIndex","thisRow","lastRow","bigIndexMaxForRow","bigIndexMinForRow","myMin","myMax","editDistanceMatrix","smlIndexMax","bigIndexMax","compareRange","maxDistance","northDistance","westDistance","meMinusOne","editScript","notInSml","notInBig","reverse","mapNodeAndRefreshWhenChanged","callbackAfterAddingNodes","mappedNodes","newMappedNodes","lastMappingResultDomDataKey","deletedItemDummyValue","itemMovedOrRetained","editScriptIndex","oldPosition","mapData","lastMappingResult","newMappingResultIndex","itemsForMoveCallbacks","indexObservable","newMappingResult","itemsToProcess","callCallback","items","editScriptItem","movedIndex","isFirstExecution","lastArray","x","lastMappingResultIndex","nodesToDelete","itemsForBeforeRemoveCallbacks","itemsForAfterAddCallbacks","nextNode","initialized","useNodesIfAvailable","templateNodesFunc","templateText","jqueryTmplTemplateEngine","ensureHasReferencedJQueryTemplates","jQueryTmplVersion","compiledTemplate","jQueryTemplateOptions","tmpl","tag","open","precompiled","koBindingContext","templateOptions","resultNodes","appendTo","fragments","addTemplate","templateMarkup","ko_code","ko_with","close","jqueryTmplTemplateEngineInstance","list","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","createLinkElement","linkElement","rel","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","unescape","encodeURIComponent","blob","oldSrc","memo","isOldIE","newList","mayRemove","textStore","replacement","filter","_interopRequireDefault","__esModule","default","_knockout","_knockout2","_fecha","_fecha2","_DateMonth","_DateMonth2","_DateMonth3","_DateMonth4","punches","enableAll","date","initial_date","model","_classCallCheck","Constructor","TypeError","Object","defineProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_lodash","_lodash2","DateModel","_this","now","day","month","getMonth","year","getFullYear","undo","visible_months","visible_years","start","month_year","can_advance_year","main","shorten","arr","sLen","newArr","len","monthUpdate","arrName","d","v","i18n","charAt","toUpperCase","pad","fecha","token","twoDigits","threeDigits","fourDigits","word","noop","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","MM","MMM","MMMM","YY","YYYY","h","getHours","hh","H","HH","getMinutes","mm","getSeconds","ss","S","round","getMilliseconds","SS","SSS","A","ZZ","o","getTimezoneOffset","floor","parseFlags","da","cent","hour","minute","second","millisecond","isPm","minutes","timezoneOffset","masks","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","isNaN","$0","dateStr","isValid","dateInfo","info","search","today","UTC","addBindingPreprocessor","bindingKeyOrHandler","preprocessFn","chainPreprocessor","getOrCreateHandler","previousFn","addNodePreprocessor","previousPreprocessFn","addBindingHandlerCreator","matchRegex","callbackFn","oldGetHandler","filterPreprocessor","lastToken","inFilters","nextIsFilter","enableTextFilter","defaultGetNamespacedHandler","namespace","namespacedName","setHandlerFunction","funcName","subValueAccessor","addDefaultNamespacedBindingPreprocessor","previousHandlerFn","getNamespacedHandler","autoNamespacedPreprocessor","subBindings","namespaceDivider","enableAutoNamespacedSyntax","wrappedCallbackPreprocessor","enableWrappedCallback","addBindingPropertyPreprocessor","_propertyPreprocessors","propertyPreprocessor","propertyPreprocessors","propVal","makeExpressionCallbackPreprocessor","enableExpressionCallback","parseInterpolationMarkup","textToParse","outerTextCallback","expressionCallback","innerParse","innerMatch","outerMatch","interpolationMarkupPreprocessor","addTextNode","wrapExpr","expressionText","ko_punches_interpolationMarkup","wrapExpression","closeComment","firstChar","lastChar","enableInterpolationMarkup","attributeInterpolationMarkerPreprocessor","addText","addExpr","dataBindAttribute","dataBind","attrs","attrBinding","ko_punches_attributeInterpolationMarkup","attributeBinding","enableAttributeInterpolationMarkup","ko_unwrap","unwrap","ko_punches","setBindingPreprocessor","setNodePreprocessor","filters","uppercase","lowercase","fit","trimWhere","leftLen","ceil","json","toLocaleString","textFilter","preprocessor","enableForBinding","namespacedBindingMatch","namespaceHandler","handlerFn","namespacedBinding","defaultGetHandler","setDefaultBindingPreprocessor","addDefaultBindingPreprocessor","wrappedCallback","preprocessBindingProperty","setPreprocessor","addPreprocessor","eventExpressionPreprocessor","makePreprocessor","eventPreprocessor","on","overridden","interpolationMarkup","attributeInterpolationMarkup","baseProperty","baseRange","step","fromRight","nativeMax","nativeCeil","createRange","isIterateeCall","toNumber","isIndex","MAX_SAFE_INTEGER","reIsUint","isObject","isArrayLike","eq","other","isLength","getLength","isFunction","objectToString","funcTag","genTag","isObjectLike","isSymbol","symbolTag","NAN","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","NaN","objectProto","locals","webpackPolyfill","deprecate","paths"],"mappings":"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","file":"DateMonth.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DateMonth\"] = factory();\n\telse\n\t\troot[\"DateMonth\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DateMonth\"] = factory();\n\telse\n\t\troot[\"DateMonth\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 15);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * Knockout JavaScript library v3.4.0\n\t * (c) Steven Sanderson - http://knockoutjs.com/\n\t * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n\t */\n\t\n\t(function(){\n\tvar DEBUG=true;\n\t(function(undefined){\n\t    // (0, eval)('this') is a robust way of getting a reference to the global object\n\t    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n\t    var window = this || (0, eval)('this'),\n\t        document = window['document'],\n\t        navigator = window['navigator'],\n\t        jQueryInstance = window[\"jQuery\"],\n\t        JSON = window[\"JSON\"];\n\t(function(factory) {\n\t    // Support three module loading scenarios\n\t    if (\"function\" === 'function' && __webpack_require__(13)['amd']) {\n\t        // [1] AMD anonymous module\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (true) {\n\t        // [2] CommonJS/Node.js\n\t        factory(module['exports'] || exports);  // module.exports is for Node.js\n\t    } else {\n\t        // [3] No module loader (plain <script> tag) - put directly in global namespace\n\t        factory(window['ko'] = {});\n\t    }\n\t}(function(koExports, amdRequire){\n\t// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n\t// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\n\tvar ko = typeof koExports !== 'undefined' ? koExports : {};\n\t// Google Closure Compiler helpers (used only to make the minified file smaller)\n\tko.exportSymbol = function(koPath, object) {\n\t    var tokens = koPath.split(\".\");\n\t\n\t    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n\t    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n\t    var target = ko;\n\t\n\t    for (var i = 0; i < tokens.length - 1; i++)\n\t        target = target[tokens[i]];\n\t    target[tokens[tokens.length - 1]] = object;\n\t};\n\tko.exportProperty = function(owner, publicName, object) {\n\t    owner[publicName] = object;\n\t};\n\tko.version = \"3.4.0\";\n\t\n\tko.exportSymbol('version', ko.version);\n\t// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\n\tko.options = {\n\t    'deferUpdates': false,\n\t    'useOnlyNativeEvents': false\n\t};\n\t\n\t//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\n\tko.utils = (function () {\n\t    function objectForEach(obj, action) {\n\t        for (var prop in obj) {\n\t            if (obj.hasOwnProperty(prop)) {\n\t                action(prop, obj[prop]);\n\t            }\n\t        }\n\t    }\n\t\n\t    function extend(target, source) {\n\t        if (source) {\n\t            for(var prop in source) {\n\t                if(source.hasOwnProperty(prop)) {\n\t                    target[prop] = source[prop];\n\t                }\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t\n\t    function setPrototypeOf(obj, proto) {\n\t        obj.__proto__ = proto;\n\t        return obj;\n\t    }\n\t\n\t    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n\t    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\n\t\n\t    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n\t    var knownEvents = {}, knownEventTypesByEventName = {};\n\t    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n\t    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n\t    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n\t    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n\t        if (knownEventsForType.length) {\n\t            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n\t                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n\t        }\n\t    });\n\t    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\t\n\t    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n\t    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n\t    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n\t    // If there is a future need to detect specific versions of IE10+, we will amend this.\n\t    var ieVersion = document && (function() {\n\t        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\t\n\t        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n\t        while (\n\t            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n\t            iElems[0]\n\t        ) {}\n\t        return version > 4 ? version : undefined;\n\t    }());\n\t    var isIe6 = ieVersion === 6,\n\t        isIe7 = ieVersion === 7;\n\t\n\t    function isClickOnCheckableElement(element, eventType) {\n\t        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n\t        if (eventType.toLowerCase() != \"click\") return false;\n\t        var inputType = element.type;\n\t        return (inputType == \"checkbox\") || (inputType == \"radio\");\n\t    }\n\t\n\t    // For details on the pattern for changing node classes\n\t    // see: https://github.com/knockout/knockout/issues/1597\n\t    var cssClassNameRegex = /\\S+/g;\n\t\n\t    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n\t        var addOrRemoveFn;\n\t        if (classNames) {\n\t            if (typeof node.classList === 'object') {\n\t                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n\t                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n\t                    addOrRemoveFn.call(node.classList, className);\n\t                });\n\t            } else if (typeof node.className['baseVal'] === 'string') {\n\t                // SVG tag .classNames is an SVGAnimatedString instance\n\t                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n\t            } else {\n\t                // node.className ought to be a string.\n\t                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n\t            }\n\t        }\n\t    }\n\t\n\t    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n\t        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n\t        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n\t        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n\t            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n\t        });\n\t        obj[prop] = currentClassNames.join(\" \");\n\t    }\n\t\n\t    return {\n\t        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\t\n\t        arrayForEach: function (array, action) {\n\t            for (var i = 0, j = array.length; i < j; i++)\n\t                action(array[i], i);\n\t        },\n\t\n\t        arrayIndexOf: function (array, item) {\n\t            if (typeof Array.prototype.indexOf == \"function\")\n\t                return Array.prototype.indexOf.call(array, item);\n\t            for (var i = 0, j = array.length; i < j; i++)\n\t                if (array[i] === item)\n\t                    return i;\n\t            return -1;\n\t        },\n\t\n\t        arrayFirst: function (array, predicate, predicateOwner) {\n\t            for (var i = 0, j = array.length; i < j; i++)\n\t                if (predicate.call(predicateOwner, array[i], i))\n\t                    return array[i];\n\t            return null;\n\t        },\n\t\n\t        arrayRemoveItem: function (array, itemToRemove) {\n\t            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n\t            if (index > 0) {\n\t                array.splice(index, 1);\n\t            }\n\t            else if (index === 0) {\n\t                array.shift();\n\t            }\n\t        },\n\t\n\t        arrayGetDistinctValues: function (array) {\n\t            array = array || [];\n\t            var result = [];\n\t            for (var i = 0, j = array.length; i < j; i++) {\n\t                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\n\t                    result.push(array[i]);\n\t            }\n\t            return result;\n\t        },\n\t\n\t        arrayMap: function (array, mapping) {\n\t            array = array || [];\n\t            var result = [];\n\t            for (var i = 0, j = array.length; i < j; i++)\n\t                result.push(mapping(array[i], i));\n\t            return result;\n\t        },\n\t\n\t        arrayFilter: function (array, predicate) {\n\t            array = array || [];\n\t            var result = [];\n\t            for (var i = 0, j = array.length; i < j; i++)\n\t                if (predicate(array[i], i))\n\t                    result.push(array[i]);\n\t            return result;\n\t        },\n\t\n\t        arrayPushAll: function (array, valuesToPush) {\n\t            if (valuesToPush instanceof Array)\n\t                array.push.apply(array, valuesToPush);\n\t            else\n\t                for (var i = 0, j = valuesToPush.length; i < j; i++)\n\t                    array.push(valuesToPush[i]);\n\t            return array;\n\t        },\n\t\n\t        addOrRemoveItem: function(array, value, included) {\n\t            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n\t            if (existingEntryIndex < 0) {\n\t                if (included)\n\t                    array.push(value);\n\t            } else {\n\t                if (!included)\n\t                    array.splice(existingEntryIndex, 1);\n\t            }\n\t        },\n\t\n\t        canSetPrototype: canSetPrototype,\n\t\n\t        extend: extend,\n\t\n\t        setPrototypeOf: setPrototypeOf,\n\t\n\t        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\t\n\t        objectForEach: objectForEach,\n\t\n\t        objectMap: function(source, mapping) {\n\t            if (!source)\n\t                return source;\n\t            var target = {};\n\t            for (var prop in source) {\n\t                if (source.hasOwnProperty(prop)) {\n\t                    target[prop] = mapping(source[prop], prop, source);\n\t                }\n\t            }\n\t            return target;\n\t        },\n\t\n\t        emptyDomNode: function (domNode) {\n\t            while (domNode.firstChild) {\n\t                ko.removeNode(domNode.firstChild);\n\t            }\n\t        },\n\t\n\t        moveCleanedNodesToContainerElement: function(nodes) {\n\t            // Ensure it's a real array, as we're about to reparent the nodes and\n\t            // we don't want the underlying collection to change while we're doing that.\n\t            var nodesArray = ko.utils.makeArray(nodes);\n\t            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\t\n\t            var container = templateDocument.createElement('div');\n\t            for (var i = 0, j = nodesArray.length; i < j; i++) {\n\t                container.appendChild(ko.cleanNode(nodesArray[i]));\n\t            }\n\t            return container;\n\t        },\n\t\n\t        cloneNodes: function (nodesArray, shouldCleanNodes) {\n\t            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n\t                var clonedNode = nodesArray[i].cloneNode(true);\n\t                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n\t            }\n\t            return newNodesArray;\n\t        },\n\t\n\t        setDomNodeChildren: function (domNode, childNodes) {\n\t            ko.utils.emptyDomNode(domNode);\n\t            if (childNodes) {\n\t                for (var i = 0, j = childNodes.length; i < j; i++)\n\t                    domNode.appendChild(childNodes[i]);\n\t            }\n\t        },\n\t\n\t        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n\t            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n\t            if (nodesToReplaceArray.length > 0) {\n\t                var insertionPoint = nodesToReplaceArray[0];\n\t                var parent = insertionPoint.parentNode;\n\t                for (var i = 0, j = newNodesArray.length; i < j; i++)\n\t                    parent.insertBefore(newNodesArray[i], insertionPoint);\n\t                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n\t                    ko.removeNode(nodesToReplaceArray[i]);\n\t                }\n\t            }\n\t        },\n\t\n\t        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n\t            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n\t            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n\t            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n\t            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n\t            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n\t            //\n\t            // Rules:\n\t            //   [A] Any leading nodes that have been removed should be ignored\n\t            //       These most likely correspond to memoization nodes that were already removed during binding\n\t            //       See https://github.com/knockout/knockout/pull/440\n\t            //   [B] Any trailing nodes that have been remove should be ignored\n\t            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\n\t            //       See https://github.com/knockout/knockout/pull/1903\n\t            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n\t            //       and include any nodes that have been inserted among the previous collection\n\t\n\t            if (continuousNodeArray.length) {\n\t                // The parent node can be a virtual element; so get the real parent node\n\t                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\t\n\t                // Rule [A]\n\t                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n\t                    continuousNodeArray.splice(0, 1);\n\t\n\t                // Rule [B]\n\t                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\n\t                    continuousNodeArray.length--;\n\t\n\t                // Rule [C]\n\t                if (continuousNodeArray.length > 1) {\n\t                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n\t                    // Replace with the actual new continuous node set\n\t                    continuousNodeArray.length = 0;\n\t                    while (current !== last) {\n\t                        continuousNodeArray.push(current);\n\t                        current = current.nextSibling;\n\t                    }\n\t                    continuousNodeArray.push(last);\n\t                }\n\t            }\n\t            return continuousNodeArray;\n\t        },\n\t\n\t        setOptionNodeSelectionState: function (optionNode, isSelected) {\n\t            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n\t            if (ieVersion < 7)\n\t                optionNode.setAttribute(\"selected\", isSelected);\n\t            else\n\t                optionNode.selected = isSelected;\n\t        },\n\t\n\t        stringTrim: function (string) {\n\t            return string === null || string === undefined ? '' :\n\t                string.trim ?\n\t                    string.trim() :\n\t                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n\t        },\n\t\n\t        stringStartsWith: function (string, startsWith) {\n\t            string = string || \"\";\n\t            if (startsWith.length > string.length)\n\t                return false;\n\t            return string.substring(0, startsWith.length) === startsWith;\n\t        },\n\t\n\t        domNodeIsContainedBy: function (node, containedByNode) {\n\t            if (node === containedByNode)\n\t                return true;\n\t            if (node.nodeType === 11)\n\t                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n\t            if (containedByNode.contains)\n\t                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\n\t            if (containedByNode.compareDocumentPosition)\n\t                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n\t            while (node && node != containedByNode) {\n\t                node = node.parentNode;\n\t            }\n\t            return !!node;\n\t        },\n\t\n\t        domNodeIsAttachedToDocument: function (node) {\n\t            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n\t        },\n\t\n\t        anyDomNodeIsAttachedToDocument: function(nodes) {\n\t            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n\t        },\n\t\n\t        tagNameLower: function(element) {\n\t            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n\t            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n\t            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n\t            return element && element.tagName && element.tagName.toLowerCase();\n\t        },\n\t\n\t        catchFunctionErrors: function (delegate) {\n\t            return ko['onError'] ? function () {\n\t                try {\n\t                    return delegate.apply(this, arguments);\n\t                } catch (e) {\n\t                    ko['onError'] && ko['onError'](e);\n\t                    throw e;\n\t                }\n\t            } : delegate;\n\t        },\n\t\n\t        setTimeout: function (handler, timeout) {\n\t            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\n\t        },\n\t\n\t        deferError: function (error) {\n\t            setTimeout(function () {\n\t                ko['onError'] && ko['onError'](error);\n\t                throw error;\n\t            }, 0);\n\t        },\n\t\n\t        registerEventHandler: function (element, eventType, handler) {\n\t            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\n\t\n\t            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n\t            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\n\t                jQueryInstance(element)['bind'](eventType, wrappedHandler);\n\t            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n\t                element.addEventListener(eventType, wrappedHandler, false);\n\t            else if (typeof element.attachEvent != \"undefined\") {\n\t                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\n\t                    attachEventName = \"on\" + eventType;\n\t                element.attachEvent(attachEventName, attachEventHandler);\n\t\n\t                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n\t                // so to avoid leaks, we have to remove them manually. See bug #856\n\t                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n\t                    element.detachEvent(attachEventName, attachEventHandler);\n\t                });\n\t            } else\n\t                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n\t        },\n\t\n\t        triggerEvent: function (element, eventType) {\n\t            if (!(element && element.nodeType))\n\t                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\t\n\t            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n\t            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n\t            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n\t            // In both cases, we'll use the click method instead.\n\t            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\t\n\t            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\n\t                jQueryInstance(element)['trigger'](eventType);\n\t            } else if (typeof document.createEvent == \"function\") {\n\t                if (typeof element.dispatchEvent == \"function\") {\n\t                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n\t                    var event = document.createEvent(eventCategory);\n\t                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n\t                    element.dispatchEvent(event);\n\t                }\n\t                else\n\t                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n\t            } else if (useClickWorkaround && element.click) {\n\t                element.click();\n\t            } else if (typeof element.fireEvent != \"undefined\") {\n\t                element.fireEvent(\"on\" + eventType);\n\t            } else {\n\t                throw new Error(\"Browser doesn't support triggering events\");\n\t            }\n\t        },\n\t\n\t        unwrapObservable: function (value) {\n\t            return ko.isObservable(value) ? value() : value;\n\t        },\n\t\n\t        peekObservable: function (value) {\n\t            return ko.isObservable(value) ? value.peek() : value;\n\t        },\n\t\n\t        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\t\n\t        setTextContent: function(element, textContent) {\n\t            var value = ko.utils.unwrapObservable(textContent);\n\t            if ((value === null) || (value === undefined))\n\t                value = \"\";\n\t\n\t            // We need there to be exactly one child: a text node.\n\t            // If there are no children, more than one, or if it's not a text node,\n\t            // we'll clear everything and create a single text node.\n\t            var innerTextNode = ko.virtualElements.firstChild(element);\n\t            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n\t                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n\t            } else {\n\t                innerTextNode.data = value;\n\t            }\n\t\n\t            ko.utils.forceRefresh(element);\n\t        },\n\t\n\t        setElementName: function(element, name) {\n\t            element.name = name;\n\t\n\t            // Workaround IE 6/7 issue\n\t            // - https://github.com/SteveSanderson/knockout/issues/197\n\t            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n\t            if (ieVersion <= 7) {\n\t                try {\n\t                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\n\t                }\n\t                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n\t            }\n\t        },\n\t\n\t        forceRefresh: function(node) {\n\t            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n\t            if (ieVersion >= 9) {\n\t                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n\t                var elem = node.nodeType == 1 ? node : node.parentNode;\n\t                if (elem.style)\n\t                    elem.style.zoom = elem.style.zoom;\n\t            }\n\t        },\n\t\n\t        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n\t            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n\t            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n\t            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n\t            if (ieVersion) {\n\t                var originalWidth = selectElement.style.width;\n\t                selectElement.style.width = 0;\n\t                selectElement.style.width = originalWidth;\n\t            }\n\t        },\n\t\n\t        range: function (min, max) {\n\t            min = ko.utils.unwrapObservable(min);\n\t            max = ko.utils.unwrapObservable(max);\n\t            var result = [];\n\t            for (var i = min; i <= max; i++)\n\t                result.push(i);\n\t            return result;\n\t        },\n\t\n\t        makeArray: function(arrayLikeObject) {\n\t            var result = [];\n\t            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n\t                result.push(arrayLikeObject[i]);\n\t            };\n\t            return result;\n\t        },\n\t\n\t        createSymbolOrString: function(identifier) {\n\t            return canUseSymbols ? Symbol(identifier) : identifier;\n\t        },\n\t\n\t        isIe6 : isIe6,\n\t        isIe7 : isIe7,\n\t        ieVersion : ieVersion,\n\t\n\t        getFormFields: function(form, fieldName) {\n\t            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n\t            var isMatchingField = (typeof fieldName == 'string')\n\t                ? function(field) { return field.name === fieldName }\n\t                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n\t            var matches = [];\n\t            for (var i = fields.length - 1; i >= 0; i--) {\n\t                if (isMatchingField(fields[i]))\n\t                    matches.push(fields[i]);\n\t            };\n\t            return matches;\n\t        },\n\t\n\t        parseJson: function (jsonString) {\n\t            if (typeof jsonString == \"string\") {\n\t                jsonString = ko.utils.stringTrim(jsonString);\n\t                if (jsonString) {\n\t                    if (JSON && JSON.parse) // Use native parsing where available\n\t                        return JSON.parse(jsonString);\n\t                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n\t                }\n\t            }\n\t            return null;\n\t        },\n\t\n\t        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n\t            if (!JSON || !JSON.stringify)\n\t                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n\t            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n\t        },\n\t\n\t        postJson: function (urlOrForm, data, options) {\n\t            options = options || {};\n\t            var params = options['params'] || {};\n\t            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n\t            var url = urlOrForm;\n\t\n\t            // If we were given a form, use its 'action' URL and pick out any requested field values\n\t            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n\t                var originalForm = urlOrForm;\n\t                url = originalForm.action;\n\t                for (var i = includeFields.length - 1; i >= 0; i--) {\n\t                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n\t                    for (var j = fields.length - 1; j >= 0; j--)\n\t                        params[fields[j].name] = fields[j].value;\n\t                }\n\t            }\n\t\n\t            data = ko.utils.unwrapObservable(data);\n\t            var form = document.createElement(\"form\");\n\t            form.style.display = \"none\";\n\t            form.action = url;\n\t            form.method = \"post\";\n\t            for (var key in data) {\n\t                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n\t                var input = document.createElement(\"input\");\n\t                input.type = \"hidden\";\n\t                input.name = key;\n\t                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n\t                form.appendChild(input);\n\t            }\n\t            objectForEach(params, function(key, value) {\n\t                var input = document.createElement(\"input\");\n\t                input.type = \"hidden\";\n\t                input.name = key;\n\t                input.value = value;\n\t                form.appendChild(input);\n\t            });\n\t            document.body.appendChild(form);\n\t            options['submitter'] ? options['submitter'](form) : form.submit();\n\t            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n\t        }\n\t    }\n\t}());\n\t\n\tko.exportSymbol('utils', ko.utils);\n\tko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\n\tko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\n\tko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\n\tko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\n\tko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\n\tko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\n\tko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\n\tko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\n\tko.exportSymbol('utils.extend', ko.utils.extend);\n\tko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\n\tko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\n\tko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\n\tko.exportSymbol('utils.postJson', ko.utils.postJson);\n\tko.exportSymbol('utils.parseJson', ko.utils.parseJson);\n\tko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\n\tko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\n\tko.exportSymbol('utils.range', ko.utils.range);\n\tko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\n\tko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\n\tko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\n\tko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\n\tko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\n\tko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\n\tko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\t\n\tif (!Function.prototype['bind']) {\n\t    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n\t    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n\t    Function.prototype['bind'] = function (object) {\n\t        var originalFunction = this;\n\t        if (arguments.length === 1) {\n\t            return function () {\n\t                return originalFunction.apply(object, arguments);\n\t            };\n\t        } else {\n\t            var partialArgs = Array.prototype.slice.call(arguments, 1);\n\t            return function () {\n\t                var args = partialArgs.slice(0);\n\t                args.push.apply(args, arguments);\n\t                return originalFunction.apply(object, args);\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\tko.utils.domData = new (function () {\n\t    var uniqueId = 0;\n\t    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n\t    var dataStore = {};\n\t\n\t    function getAll(node, createIfNotFound) {\n\t        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n\t        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n\t        if (!hasExistingDataStore) {\n\t            if (!createIfNotFound)\n\t                return undefined;\n\t            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n\t            dataStore[dataStoreKey] = {};\n\t        }\n\t        return dataStore[dataStoreKey];\n\t    }\n\t\n\t    return {\n\t        get: function (node, key) {\n\t            var allDataForNode = getAll(node, false);\n\t            return allDataForNode === undefined ? undefined : allDataForNode[key];\n\t        },\n\t        set: function (node, key, value) {\n\t            if (value === undefined) {\n\t                // Make sure we don't actually create a new domData key if we are actually deleting a value\n\t                if (getAll(node, false) === undefined)\n\t                    return;\n\t            }\n\t            var allDataForNode = getAll(node, true);\n\t            allDataForNode[key] = value;\n\t        },\n\t        clear: function (node) {\n\t            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n\t            if (dataStoreKey) {\n\t                delete dataStore[dataStoreKey];\n\t                node[dataStoreKeyExpandoPropertyName] = null;\n\t                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n\t            }\n\t            return false;\n\t        },\n\t\n\t        nextKey: function () {\n\t            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('utils.domData', ko.utils.domData);\n\tko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\t\n\tko.utils.domNodeDisposal = new (function () {\n\t    var domDataKey = ko.utils.domData.nextKey();\n\t    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n\t    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\t\n\t    function getDisposeCallbacksCollection(node, createIfNotFound) {\n\t        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n\t        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n\t            allDisposeCallbacks = [];\n\t            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n\t        }\n\t        return allDisposeCallbacks;\n\t    }\n\t    function destroyCallbacksCollection(node) {\n\t        ko.utils.domData.set(node, domDataKey, undefined);\n\t    }\n\t\n\t    function cleanSingleNode(node) {\n\t        // Run all the dispose callbacks\n\t        var callbacks = getDisposeCallbacksCollection(node, false);\n\t        if (callbacks) {\n\t            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n\t            for (var i = 0; i < callbacks.length; i++)\n\t                callbacks[i](node);\n\t        }\n\t\n\t        // Erase the DOM data\n\t        ko.utils.domData.clear(node);\n\t\n\t        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n\t        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\t\n\t        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n\t        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n\t        if (cleanableNodeTypesWithDescendants[node.nodeType])\n\t            cleanImmediateCommentTypeChildren(node);\n\t    }\n\t\n\t    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n\t        var child, nextChild = nodeWithChildren.firstChild;\n\t        while (child = nextChild) {\n\t            nextChild = child.nextSibling;\n\t            if (child.nodeType === 8)\n\t                cleanSingleNode(child);\n\t        }\n\t    }\n\t\n\t    return {\n\t        addDisposeCallback : function(node, callback) {\n\t            if (typeof callback != \"function\")\n\t                throw new Error(\"Callback must be a function\");\n\t            getDisposeCallbacksCollection(node, true).push(callback);\n\t        },\n\t\n\t        removeDisposeCallback : function(node, callback) {\n\t            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n\t            if (callbacksCollection) {\n\t                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n\t                if (callbacksCollection.length == 0)\n\t                    destroyCallbacksCollection(node);\n\t            }\n\t        },\n\t\n\t        cleanNode : function(node) {\n\t            // First clean this node, where applicable\n\t            if (cleanableNodeTypes[node.nodeType]) {\n\t                cleanSingleNode(node);\n\t\n\t                // ... then its descendants, where applicable\n\t                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n\t                    // Clone the descendants list in case it changes during iteration\n\t                    var descendants = [];\n\t                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n\t                    for (var i = 0, j = descendants.length; i < j; i++)\n\t                        cleanSingleNode(descendants[i]);\n\t                }\n\t            }\n\t            return node;\n\t        },\n\t\n\t        removeNode : function(node) {\n\t            ko.cleanNode(node);\n\t            if (node.parentNode)\n\t                node.parentNode.removeChild(node);\n\t        },\n\t\n\t        \"cleanExternalData\" : function (node) {\n\t            // Special support for jQuery here because it's so commonly used.\n\t            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n\t            // so notify it to tear down any resources associated with the node & descendants here.\n\t            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n\t                jQueryInstance['cleanData']([node]);\n\t        }\n\t    };\n\t})();\n\tko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\n\tko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\n\tko.exportSymbol('cleanNode', ko.cleanNode);\n\tko.exportSymbol('removeNode', ko.removeNode);\n\tko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\n\tko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\n\tko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n\t(function () {\n\t    var none = [0, \"\", \"\"],\n\t        table = [1, \"<table>\", \"</table>\"],\n\t        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\n\t        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n\t        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\n\t        lookup = {\n\t            'thead': table,\n\t            'tbody': table,\n\t            'tfoot': table,\n\t            'tr': tbody,\n\t            'td': tr,\n\t            'th': tr,\n\t            'option': select,\n\t            'optgroup': select\n\t        },\n\t\n\t        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\n\t        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\n\t\n\t    function getWrap(tags) {\n\t        var m = tags.match(/^<([a-z]+)[ >]/);\n\t        return (m && lookup[m[1]]) || none;\n\t    }\n\t\n\t    function simpleHtmlParse(html, documentContext) {\n\t        documentContext || (documentContext = document);\n\t        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\t\n\t        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n\t        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\t\n\t        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n\t        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n\t        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n\t        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\t\n\t        // Trim whitespace, otherwise indexOf won't work as expected\n\t        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\n\t            wrap = getWrap(tags),\n\t            depth = wrap[0];\n\t\n\t        // Go to html and back, then peel off extra wrappers\n\t        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n\t        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n\t        if (typeof windowContext['innerShiv'] == \"function\") {\n\t            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n\t            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n\t            // somehow shims the native APIs so it just works anyway)\n\t            div.appendChild(windowContext['innerShiv'](markup));\n\t        } else {\n\t            if (mayRequireCreateElementHack) {\n\t                // The document.createElement('my-element') trick to enable custom elements in IE6-8\n\t                // only works if we assign innerHTML on an element associated with that document.\n\t                documentContext.appendChild(div);\n\t            }\n\t\n\t            div.innerHTML = markup;\n\t\n\t            if (mayRequireCreateElementHack) {\n\t                div.parentNode.removeChild(div);\n\t            }\n\t        }\n\t\n\t        // Move to the right depth\n\t        while (depth--)\n\t            div = div.lastChild;\n\t\n\t        return ko.utils.makeArray(div.lastChild.childNodes);\n\t    }\n\t\n\t    function jQueryHtmlParse(html, documentContext) {\n\t        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n\t        if (jQueryInstance['parseHTML']) {\n\t            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n\t        } else {\n\t            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n\t            var elems = jQueryInstance['clean']([html], documentContext);\n\t\n\t            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n\t            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n\t            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n\t            if (elems && elems[0]) {\n\t                // Find the top-most parent element that's a direct child of a document fragment\n\t                var elem = elems[0];\n\t                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n\t                    elem = elem.parentNode;\n\t                // ... then detach it\n\t                if (elem.parentNode)\n\t                    elem.parentNode.removeChild(elem);\n\t            }\n\t\n\t            return elems;\n\t        }\n\t    }\n\t\n\t    ko.utils.parseHtmlFragment = function(html, documentContext) {\n\t        return jQueryInstance ?\n\t            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\n\t            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n\t    };\n\t\n\t    ko.utils.setHtml = function(node, html) {\n\t        ko.utils.emptyDomNode(node);\n\t\n\t        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n\t        html = ko.utils.unwrapObservable(html);\n\t\n\t        if ((html !== null) && (html !== undefined)) {\n\t            if (typeof html != 'string')\n\t                html = html.toString();\n\t\n\t            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n\t            // for example <tr> elements which are not normally allowed to exist on their own.\n\t            // If you've referenced jQuery we'll use that rather than duplicating its code.\n\t            if (jQueryInstance) {\n\t                jQueryInstance(node)['html'](html);\n\t            } else {\n\t                // ... otherwise, use KO's own parsing logic.\n\t                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n\t                for (var i = 0; i < parsedNodes.length; i++)\n\t                    node.appendChild(parsedNodes[i]);\n\t            }\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\n\tko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\t\n\tko.memoization = (function () {\n\t    var memos = {};\n\t\n\t    function randomMax8HexChars() {\n\t        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n\t    }\n\t    function generateRandomId() {\n\t        return randomMax8HexChars() + randomMax8HexChars();\n\t    }\n\t    function findMemoNodes(rootNode, appendToArray) {\n\t        if (!rootNode)\n\t            return;\n\t        if (rootNode.nodeType == 8) {\n\t            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n\t            if (memoId != null)\n\t                appendToArray.push({ domNode: rootNode, memoId: memoId });\n\t        } else if (rootNode.nodeType == 1) {\n\t            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n\t                findMemoNodes(childNodes[i], appendToArray);\n\t        }\n\t    }\n\t\n\t    return {\n\t        memoize: function (callback) {\n\t            if (typeof callback != \"function\")\n\t                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n\t            var memoId = generateRandomId();\n\t            memos[memoId] = callback;\n\t            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n\t        },\n\t\n\t        unmemoize: function (memoId, callbackParams) {\n\t            var callback = memos[memoId];\n\t            if (callback === undefined)\n\t                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n\t            try {\n\t                callback.apply(null, callbackParams || []);\n\t                return true;\n\t            }\n\t            finally { delete memos[memoId]; }\n\t        },\n\t\n\t        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n\t            var memos = [];\n\t            findMemoNodes(domNode, memos);\n\t            for (var i = 0, j = memos.length; i < j; i++) {\n\t                var node = memos[i].domNode;\n\t                var combinedParams = [node];\n\t                if (extraCallbackParamsArray)\n\t                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n\t                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n\t                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n\t                if (node.parentNode)\n\t                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n\t            }\n\t        },\n\t\n\t        parseMemoText: function (memoText) {\n\t            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n\t            return match ? match[1] : null;\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('memoization', ko.memoization);\n\tko.exportSymbol('memoization.memoize', ko.memoization.memoize);\n\tko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\n\tko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\n\tko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\n\tko.tasks = (function () {\n\t    var scheduler,\n\t        taskQueue = [],\n\t        taskQueueLength = 0,\n\t        nextHandle = 1,\n\t        nextIndexToProcess = 0;\n\t\n\t    if (window['MutationObserver']) {\n\t        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n\t        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n\t        scheduler = (function (callback) {\n\t            var div = document.createElement(\"div\");\n\t            new MutationObserver(callback).observe(div, {attributes: true});\n\t            return function () { div.classList.toggle(\"foo\"); };\n\t        })(scheduledProcess);\n\t    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n\t        // IE 6-10\n\t        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n\t        scheduler = function (callback) {\n\t            var script = document.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                script.onreadystatechange = null;\n\t                document.documentElement.removeChild(script);\n\t                script = null;\n\t                callback();\n\t            };\n\t            document.documentElement.appendChild(script);\n\t        };\n\t    } else {\n\t        scheduler = function (callback) {\n\t            setTimeout(callback, 0);\n\t        };\n\t    }\n\t\n\t    function processTasks() {\n\t        if (taskQueueLength) {\n\t            // Each mark represents the end of a logical group of tasks and the number of these groups is\n\t            // limited to prevent unchecked recursion.\n\t            var mark = taskQueueLength, countMarks = 0;\n\t\n\t            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n\t            for (var task; nextIndexToProcess < taskQueueLength; ) {\n\t                if (task = taskQueue[nextIndexToProcess++]) {\n\t                    if (nextIndexToProcess > mark) {\n\t                        if (++countMarks >= 5000) {\n\t                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n\t                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n\t                            break;\n\t                        }\n\t                        mark = taskQueueLength;\n\t                    }\n\t                    try {\n\t                        task();\n\t                    } catch (ex) {\n\t                        ko.utils.deferError(ex);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function scheduledProcess() {\n\t        processTasks();\n\t\n\t        // Reset the queue\n\t        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n\t    }\n\t\n\t    function scheduleTaskProcessing() {\n\t        ko.tasks['scheduler'](scheduledProcess);\n\t    }\n\t\n\t    var tasks = {\n\t        'scheduler': scheduler,     // Allow overriding the scheduler\n\t\n\t        schedule: function (func) {\n\t            if (!taskQueueLength) {\n\t                scheduleTaskProcessing();\n\t            }\n\t\n\t            taskQueue[taskQueueLength++] = func;\n\t            return nextHandle++;\n\t        },\n\t\n\t        cancel: function (handle) {\n\t            var index = handle - (nextHandle - taskQueueLength);\n\t            if (index >= nextIndexToProcess && index < taskQueueLength) {\n\t                taskQueue[index] = null;\n\t            }\n\t        },\n\t\n\t        // For testing only: reset the queue and return the previous queue length\n\t        'resetForTesting': function () {\n\t            var length = taskQueueLength - nextIndexToProcess;\n\t            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n\t            return length;\n\t        },\n\t\n\t        runEarly: processTasks\n\t    };\n\t\n\t    return tasks;\n\t})();\n\t\n\tko.exportSymbol('tasks', ko.tasks);\n\tko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n\t//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\n\tko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\n\tko.extenders = {\n\t    'throttle': function(target, timeout) {\n\t        // Throttling means two things:\n\t\n\t        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n\t        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n\t        target['throttleEvaluation'] = timeout;\n\t\n\t        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n\t        //     so the target cannot change value synchronously or faster than a certain rate\n\t        var writeTimeoutInstance = null;\n\t        return ko.dependentObservable({\n\t            'read': target,\n\t            'write': function(value) {\n\t                clearTimeout(writeTimeoutInstance);\n\t                writeTimeoutInstance = ko.utils.setTimeout(function() {\n\t                    target(value);\n\t                }, timeout);\n\t            }\n\t        });\n\t    },\n\t\n\t    'rateLimit': function(target, options) {\n\t        var timeout, method, limitFunction;\n\t\n\t        if (typeof options == 'number') {\n\t            timeout = options;\n\t        } else {\n\t            timeout = options['timeout'];\n\t            method = options['method'];\n\t        }\n\t\n\t        // rateLimit supersedes deferred updates\n\t        target._deferUpdates = false;\n\t\n\t        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\n\t        target.limit(function(callback) {\n\t            return limitFunction(callback, timeout);\n\t        });\n\t    },\n\t\n\t    'deferred': function(target, options) {\n\t        if (options !== true) {\n\t            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\n\t        }\n\t\n\t        if (!target._deferUpdates) {\n\t            target._deferUpdates = true;\n\t            target.limit(function (callback) {\n\t                var handle;\n\t                return function () {\n\t                    ko.tasks.cancel(handle);\n\t                    handle = ko.tasks.schedule(callback);\n\t                    target['notifySubscribers'](undefined, 'dirty');\n\t                };\n\t            });\n\t        }\n\t    },\n\t\n\t    'notify': function(target, notifyWhen) {\n\t        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n\t            null :  // null equalityComparer means to always notify\n\t            valuesArePrimitiveAndEqual;\n\t    }\n\t};\n\t\n\tvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\n\tfunction valuesArePrimitiveAndEqual(a, b) {\n\t    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n\t    return oldValueIsPrimitive ? (a === b) : false;\n\t}\n\t\n\tfunction throttle(callback, timeout) {\n\t    var timeoutInstance;\n\t    return function () {\n\t        if (!timeoutInstance) {\n\t            timeoutInstance = ko.utils.setTimeout(function () {\n\t                timeoutInstance = undefined;\n\t                callback();\n\t            }, timeout);\n\t        }\n\t    };\n\t}\n\t\n\tfunction debounce(callback, timeout) {\n\t    var timeoutInstance;\n\t    return function () {\n\t        clearTimeout(timeoutInstance);\n\t        timeoutInstance = ko.utils.setTimeout(callback, timeout);\n\t    };\n\t}\n\t\n\tfunction applyExtenders(requestedExtenders) {\n\t    var target = this;\n\t    if (requestedExtenders) {\n\t        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n\t            var extenderHandler = ko.extenders[key];\n\t            if (typeof extenderHandler == 'function') {\n\t                target = extenderHandler(target, value) || target;\n\t            }\n\t        });\n\t    }\n\t    return target;\n\t}\n\t\n\tko.exportSymbol('extenders', ko.extenders);\n\t\n\tko.subscription = function (target, callback, disposeCallback) {\n\t    this._target = target;\n\t    this.callback = callback;\n\t    this.disposeCallback = disposeCallback;\n\t    this.isDisposed = false;\n\t    ko.exportProperty(this, 'dispose', this.dispose);\n\t};\n\tko.subscription.prototype.dispose = function () {\n\t    this.isDisposed = true;\n\t    this.disposeCallback();\n\t};\n\t\n\tko.subscribable = function () {\n\t    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n\t    ko_subscribable_fn.init(this);\n\t}\n\t\n\tvar defaultEvent = \"change\";\n\t\n\t// Moved out of \"limit\" to avoid the extra closure\n\tfunction limitNotifySubscribers(value, event) {\n\t    if (!event || event === defaultEvent) {\n\t        this._limitChange(value);\n\t    } else if (event === 'beforeChange') {\n\t        this._limitBeforeChange(value);\n\t    } else {\n\t        this._origNotifySubscribers(value, event);\n\t    }\n\t}\n\t\n\tvar ko_subscribable_fn = {\n\t    init: function(instance) {\n\t        instance._subscriptions = {};\n\t        instance._versionNumber = 1;\n\t    },\n\t\n\t    subscribe: function (callback, callbackTarget, event) {\n\t        var self = this;\n\t\n\t        event = event || defaultEvent;\n\t        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\t\n\t        var subscription = new ko.subscription(self, boundCallback, function () {\n\t            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n\t            if (self.afterSubscriptionRemove)\n\t                self.afterSubscriptionRemove(event);\n\t        });\n\t\n\t        if (self.beforeSubscriptionAdd)\n\t            self.beforeSubscriptionAdd(event);\n\t\n\t        if (!self._subscriptions[event])\n\t            self._subscriptions[event] = [];\n\t        self._subscriptions[event].push(subscription);\n\t\n\t        return subscription;\n\t    },\n\t\n\t    \"notifySubscribers\": function (valueToNotify, event) {\n\t        event = event || defaultEvent;\n\t        if (event === defaultEvent) {\n\t            this.updateVersion();\n\t        }\n\t        if (this.hasSubscriptionsForEvent(event)) {\n\t            try {\n\t                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n\t                for (var a = this._subscriptions[event].slice(0), i = 0, subscription; subscription = a[i]; ++i) {\n\t                    // In case a subscription was disposed during the arrayForEach cycle, check\n\t                    // for isDisposed on each subscription before invoking its callback\n\t                    if (!subscription.isDisposed)\n\t                        subscription.callback(valueToNotify);\n\t                }\n\t            } finally {\n\t                ko.dependencyDetection.end(); // End suppressing dependency detection\n\t            }\n\t        }\n\t    },\n\t\n\t    getVersion: function () {\n\t        return this._versionNumber;\n\t    },\n\t\n\t    hasChanged: function (versionToCheck) {\n\t        return this.getVersion() !== versionToCheck;\n\t    },\n\t\n\t    updateVersion: function () {\n\t        ++this._versionNumber;\n\t    },\n\t\n\t    limit: function(limitFunction) {\n\t        var self = this, selfIsObservable = ko.isObservable(self),\n\t            ignoreBeforeChange, previousValue, pendingValue, beforeChange = 'beforeChange';\n\t\n\t        if (!self._origNotifySubscribers) {\n\t            self._origNotifySubscribers = self[\"notifySubscribers\"];\n\t            self[\"notifySubscribers\"] = limitNotifySubscribers;\n\t        }\n\t\n\t        var finish = limitFunction(function() {\n\t            self._notificationIsPending = false;\n\t\n\t            // If an observable provided a reference to itself, access it to get the latest value.\n\t            // This allows computed observables to delay calculating their value until needed.\n\t            if (selfIsObservable && pendingValue === self) {\n\t                pendingValue = self();\n\t            }\n\t            ignoreBeforeChange = false;\n\t            if (self.isDifferent(previousValue, pendingValue)) {\n\t                self._origNotifySubscribers(previousValue = pendingValue);\n\t            }\n\t        });\n\t\n\t        self._limitChange = function(value) {\n\t            self._notificationIsPending = ignoreBeforeChange = true;\n\t            pendingValue = value;\n\t            finish();\n\t        };\n\t        self._limitBeforeChange = function(value) {\n\t            if (!ignoreBeforeChange) {\n\t                previousValue = value;\n\t                self._origNotifySubscribers(value, beforeChange);\n\t            }\n\t        };\n\t    },\n\t\n\t    hasSubscriptionsForEvent: function(event) {\n\t        return this._subscriptions[event] && this._subscriptions[event].length;\n\t    },\n\t\n\t    getSubscriptionsCount: function (event) {\n\t        if (event) {\n\t            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n\t        } else {\n\t            var total = 0;\n\t            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n\t                if (eventName !== 'dirty')\n\t                    total += subscriptions.length;\n\t            });\n\t            return total;\n\t        }\n\t    },\n\t\n\t    isDifferent: function(oldValue, newValue) {\n\t        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n\t    },\n\t\n\t    extend: applyExtenders\n\t};\n\t\n\tko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\n\tko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\n\tko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\t\n\t// For browsers that support proto assignment, we overwrite the prototype of each\n\t// observable instance. Since observables are functions, we need Function.prototype\n\t// to still be in the prototype chain.\n\tif (ko.utils.canSetPrototype) {\n\t    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n\t}\n\t\n\tko.subscribable['fn'] = ko_subscribable_fn;\n\t\n\t\n\tko.isSubscribable = function (instance) {\n\t    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n\t};\n\t\n\tko.exportSymbol('subscribable', ko.subscribable);\n\tko.exportSymbol('isSubscribable', ko.isSubscribable);\n\t\n\tko.computedContext = ko.dependencyDetection = (function () {\n\t    var outerFrames = [],\n\t        currentFrame,\n\t        lastId = 0;\n\t\n\t    // Return a unique ID that can be assigned to an observable for dependency tracking.\n\t    // Theoretically, you could eventually overflow the number storage size, resulting\n\t    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n\t    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n\t    // take over 285 years to reach that number.\n\t    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n\t    function getId() {\n\t        return ++lastId;\n\t    }\n\t\n\t    function begin(options) {\n\t        outerFrames.push(currentFrame);\n\t        currentFrame = options;\n\t    }\n\t\n\t    function end() {\n\t        currentFrame = outerFrames.pop();\n\t    }\n\t\n\t    return {\n\t        begin: begin,\n\t\n\t        end: end,\n\t\n\t        registerDependency: function (subscribable) {\n\t            if (currentFrame) {\n\t                if (!ko.isSubscribable(subscribable))\n\t                    throw new Error(\"Only subscribable things can act as dependencies\");\n\t                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\n\t            }\n\t        },\n\t\n\t        ignore: function (callback, callbackTarget, callbackArgs) {\n\t            try {\n\t                begin();\n\t                return callback.apply(callbackTarget, callbackArgs || []);\n\t            } finally {\n\t                end();\n\t            }\n\t        },\n\t\n\t        getDependenciesCount: function () {\n\t            if (currentFrame)\n\t                return currentFrame.computed.getDependenciesCount();\n\t        },\n\t\n\t        isInitial: function() {\n\t            if (currentFrame)\n\t                return currentFrame.isInitial;\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('computedContext', ko.computedContext);\n\tko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\n\tko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\n\t\n\tko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\n\tvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\n\t\n\tko.observable = function (initialValue) {\n\t    function observable() {\n\t        if (arguments.length > 0) {\n\t            // Write\n\t\n\t            // Ignore writes if the value hasn't changed\n\t            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\n\t                observable.valueWillMutate();\n\t                observable[observableLatestValue] = arguments[0];\n\t                observable.valueHasMutated();\n\t            }\n\t            return this; // Permits chained assignments\n\t        }\n\t        else {\n\t            // Read\n\t            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n\t            return observable[observableLatestValue];\n\t        }\n\t    }\n\t\n\t    observable[observableLatestValue] = initialValue;\n\t\n\t    // Inherit from 'subscribable'\n\t    if (!ko.utils.canSetPrototype) {\n\t        // 'subscribable' won't be on the prototype chain unless we put it there directly\n\t        ko.utils.extend(observable, ko.subscribable['fn']);\n\t    }\n\t    ko.subscribable['fn'].init(observable);\n\t\n\t    // Inherit from 'observable'\n\t    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\n\t\n\t    if (ko.options['deferUpdates']) {\n\t        ko.extenders['deferred'](observable, true);\n\t    }\n\t\n\t    return observable;\n\t}\n\t\n\t// Define prototype for observables\n\tvar observableFn = {\n\t    'equalityComparer': valuesArePrimitiveAndEqual,\n\t    peek: function() { return this[observableLatestValue]; },\n\t    valueHasMutated: function () { this['notifySubscribers'](this[observableLatestValue]); },\n\t    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\n\t};\n\t\n\t// Note that for browsers that don't support proto assignment, the\n\t// inheritance chain is created manually in the ko.observable constructor\n\tif (ko.utils.canSetPrototype) {\n\t    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\n\t}\n\t\n\tvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\n\tobservableFn[protoProperty] = ko.observable;\n\t\n\tko.hasPrototype = function(instance, prototype) {\n\t    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\n\t    if (instance[protoProperty] === prototype) return true;\n\t    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n\t};\n\t\n\tko.isObservable = function (instance) {\n\t    return ko.hasPrototype(instance, ko.observable);\n\t}\n\tko.isWriteableObservable = function (instance) {\n\t    // Observable\n\t    if ((typeof instance == 'function') && instance[protoProperty] === ko.observable)\n\t        return true;\n\t    // Writeable dependent observable\n\t    if ((typeof instance == 'function') && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\n\t        return true;\n\t    // Anything else\n\t    return false;\n\t}\n\t\n\tko.exportSymbol('observable', ko.observable);\n\tko.exportSymbol('isObservable', ko.isObservable);\n\tko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\n\tko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\n\tko.exportSymbol('observable.fn', observableFn);\n\tko.exportProperty(observableFn, 'peek', observableFn.peek);\n\tko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\n\tko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\n\tko.observableArray = function (initialValues) {\n\t    initialValues = initialValues || [];\n\t\n\t    if (typeof initialValues != 'object' || !('length' in initialValues))\n\t        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\t\n\t    var result = ko.observable(initialValues);\n\t    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n\t    return result.extend({'trackArrayChanges':true});\n\t};\n\t\n\tko.observableArray['fn'] = {\n\t    'remove': function (valueOrPredicate) {\n\t        var underlyingArray = this.peek();\n\t        var removedValues = [];\n\t        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n\t        for (var i = 0; i < underlyingArray.length; i++) {\n\t            var value = underlyingArray[i];\n\t            if (predicate(value)) {\n\t                if (removedValues.length === 0) {\n\t                    this.valueWillMutate();\n\t                }\n\t                removedValues.push(value);\n\t                underlyingArray.splice(i, 1);\n\t                i--;\n\t            }\n\t        }\n\t        if (removedValues.length) {\n\t            this.valueHasMutated();\n\t        }\n\t        return removedValues;\n\t    },\n\t\n\t    'removeAll': function (arrayOfValues) {\n\t        // If you passed zero args, we remove everything\n\t        if (arrayOfValues === undefined) {\n\t            var underlyingArray = this.peek();\n\t            var allValues = underlyingArray.slice(0);\n\t            this.valueWillMutate();\n\t            underlyingArray.splice(0, underlyingArray.length);\n\t            this.valueHasMutated();\n\t            return allValues;\n\t        }\n\t        // If you passed an arg, we interpret it as an array of entries to remove\n\t        if (!arrayOfValues)\n\t            return [];\n\t        return this['remove'](function (value) {\n\t            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n\t        });\n\t    },\n\t\n\t    'destroy': function (valueOrPredicate) {\n\t        var underlyingArray = this.peek();\n\t        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n\t        this.valueWillMutate();\n\t        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n\t            var value = underlyingArray[i];\n\t            if (predicate(value))\n\t                underlyingArray[i][\"_destroy\"] = true;\n\t        }\n\t        this.valueHasMutated();\n\t    },\n\t\n\t    'destroyAll': function (arrayOfValues) {\n\t        // If you passed zero args, we destroy everything\n\t        if (arrayOfValues === undefined)\n\t            return this['destroy'](function() { return true });\n\t\n\t        // If you passed an arg, we interpret it as an array of entries to destroy\n\t        if (!arrayOfValues)\n\t            return [];\n\t        return this['destroy'](function (value) {\n\t            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n\t        });\n\t    },\n\t\n\t    'indexOf': function (item) {\n\t        var underlyingArray = this();\n\t        return ko.utils.arrayIndexOf(underlyingArray, item);\n\t    },\n\t\n\t    'replace': function(oldItem, newItem) {\n\t        var index = this['indexOf'](oldItem);\n\t        if (index >= 0) {\n\t            this.valueWillMutate();\n\t            this.peek()[index] = newItem;\n\t            this.valueHasMutated();\n\t        }\n\t    }\n\t};\n\t\n\t// Note that for browsers that don't support proto assignment, the\n\t// inheritance chain is created manually in the ko.observableArray constructor\n\tif (ko.utils.canSetPrototype) {\n\t    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n\t}\n\t\n\t// Populate ko.observableArray.fn with read/write functions from native arrays\n\t// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n\t// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\n\tko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n\t    ko.observableArray['fn'][methodName] = function () {\n\t        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n\t        // (for consistency with mutating regular observables)\n\t        var underlyingArray = this.peek();\n\t        this.valueWillMutate();\n\t        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n\t        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n\t        this.valueHasMutated();\n\t        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n\t        return methodCallResult === underlyingArray ? this : methodCallResult;\n\t    };\n\t});\n\t\n\t// Populate ko.observableArray.fn with read-only functions from native arrays\n\tko.utils.arrayForEach([\"slice\"], function (methodName) {\n\t    ko.observableArray['fn'][methodName] = function () {\n\t        var underlyingArray = this();\n\t        return underlyingArray[methodName].apply(underlyingArray, arguments);\n\t    };\n\t});\n\t\n\tko.exportSymbol('observableArray', ko.observableArray);\n\tvar arrayChangeEventName = 'arrayChange';\n\tko.extenders['trackArrayChanges'] = function(target, options) {\n\t    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n\t    target.compareArrayOptions = {};\n\t    if (options && typeof options == \"object\") {\n\t        ko.utils.extend(target.compareArrayOptions, options);\n\t    }\n\t    target.compareArrayOptions['sparse'] = true;\n\t\n\t    // Only modify the target observable once\n\t    if (target.cacheDiffForKnownOperation) {\n\t        return;\n\t    }\n\t    var trackingChanges = false,\n\t        cachedDiff = null,\n\t        arrayChangeSubscription,\n\t        pendingNotifications = 0,\n\t        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n\t        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\t\n\t    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n\t    target.beforeSubscriptionAdd = function (event) {\n\t        if (underlyingBeforeSubscriptionAddFunction)\n\t            underlyingBeforeSubscriptionAddFunction.call(target, event);\n\t        if (event === arrayChangeEventName) {\n\t            trackChanges();\n\t        }\n\t    };\n\t    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n\t    target.afterSubscriptionRemove = function (event) {\n\t        if (underlyingAfterSubscriptionRemoveFunction)\n\t            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n\t        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n\t            arrayChangeSubscription.dispose();\n\t            trackingChanges = false;\n\t        }\n\t    };\n\t\n\t    function trackChanges() {\n\t        // Calling 'trackChanges' multiple times is the same as calling it once\n\t        if (trackingChanges) {\n\t            return;\n\t        }\n\t\n\t        trackingChanges = true;\n\t\n\t        // Intercept \"notifySubscribers\" to track how many times it was called.\n\t        var underlyingNotifySubscribersFunction = target['notifySubscribers'];\n\t        target['notifySubscribers'] = function(valueToNotify, event) {\n\t            if (!event || event === defaultEvent) {\n\t                ++pendingNotifications;\n\t            }\n\t            return underlyingNotifySubscribersFunction.apply(this, arguments);\n\t        };\n\t\n\t        // Each time the array changes value, capture a clone so that on the next\n\t        // change it's possible to produce a diff\n\t        var previousContents = [].concat(target.peek() || []);\n\t        cachedDiff = null;\n\t        arrayChangeSubscription = target.subscribe(function(currentContents) {\n\t            // Make a copy of the current contents and ensure it's an array\n\t            currentContents = [].concat(currentContents || []);\n\t\n\t            // Compute the diff and issue notifications, but only if someone is listening\n\t            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n\t                var changes = getChanges(previousContents, currentContents);\n\t            }\n\t\n\t            // Eliminate references to the old, removed items, so they can be GCed\n\t            previousContents = currentContents;\n\t            cachedDiff = null;\n\t            pendingNotifications = 0;\n\t\n\t            if (changes && changes.length) {\n\t                target['notifySubscribers'](changes, arrayChangeEventName);\n\t            }\n\t        });\n\t    }\n\t\n\t    function getChanges(previousContents, currentContents) {\n\t        // We try to re-use cached diffs.\n\t        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n\t        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n\t        // notifications are issued immediately so we wouldn't be queueing up more than one.\n\t        if (!cachedDiff || pendingNotifications > 1) {\n\t            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n\t        }\n\t\n\t        return cachedDiff;\n\t    }\n\t\n\t    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n\t        // Only run if we're currently tracking changes for this observable array\n\t        // and there aren't any pending deferred notifications.\n\t        if (!trackingChanges || pendingNotifications) {\n\t            return;\n\t        }\n\t        var diff = [],\n\t            arrayLength = rawArray.length,\n\t            argsLength = args.length,\n\t            offset = 0;\n\t\n\t        function pushDiff(status, value, index) {\n\t            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n\t        }\n\t        switch (operationName) {\n\t            case 'push':\n\t                offset = arrayLength;\n\t            case 'unshift':\n\t                for (var index = 0; index < argsLength; index++) {\n\t                    pushDiff('added', args[index], offset + index);\n\t                }\n\t                break;\n\t\n\t            case 'pop':\n\t                offset = arrayLength - 1;\n\t            case 'shift':\n\t                if (arrayLength) {\n\t                    pushDiff('deleted', rawArray[offset], offset);\n\t                }\n\t                break;\n\t\n\t            case 'splice':\n\t                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n\t                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n\t                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n\t                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n\t                    endAddIndex = startIndex + argsLength - 2,\n\t                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n\t                    additions = [], deletions = [];\n\t                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n\t                    if (index < endDeleteIndex)\n\t                        deletions.push(pushDiff('deleted', rawArray[index], index));\n\t                    if (index < endAddIndex)\n\t                        additions.push(pushDiff('added', args[argsIndex], index));\n\t                }\n\t                ko.utils.findMovesInArrayComparison(deletions, additions);\n\t                break;\n\t\n\t            default:\n\t                return;\n\t        }\n\t        cachedDiff = diff;\n\t    };\n\t};\n\tvar computedState = ko.utils.createSymbolOrString('_state');\n\t\n\tko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n\t    if (typeof evaluatorFunctionOrOptions === \"object\") {\n\t        // Single-parameter syntax - everything is on this \"options\" param\n\t        options = evaluatorFunctionOrOptions;\n\t    } else {\n\t        // Multi-parameter syntax - construct the options according to the params passed\n\t        options = options || {};\n\t        if (evaluatorFunctionOrOptions) {\n\t            options[\"read\"] = evaluatorFunctionOrOptions;\n\t        }\n\t    }\n\t    if (typeof options[\"read\"] != \"function\")\n\t        throw Error(\"Pass a function that returns the value of the ko.computed\");\n\t\n\t    var writeFunction = options[\"write\"];\n\t    var state = {\n\t        latestValue: undefined,\n\t        isStale: true,\n\t        isBeingEvaluated: false,\n\t        suppressDisposalUntilDisposeWhenReturnsFalse: false,\n\t        isDisposed: false,\n\t        pure: false,\n\t        isSleeping: false,\n\t        readFunction: options[\"read\"],\n\t        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\n\t        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n\t        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\n\t        domNodeDisposalCallback: null,\n\t        dependencyTracking: {},\n\t        dependenciesCount: 0,\n\t        evaluationTimeoutInstance: null\n\t    };\n\t\n\t    function computedObservable() {\n\t        if (arguments.length > 0) {\n\t            if (typeof writeFunction === \"function\") {\n\t                // Writing a value\n\t                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n\t            } else {\n\t                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n\t            }\n\t            return this; // Permits chained assignments\n\t        } else {\n\t            // Reading the value\n\t            ko.dependencyDetection.registerDependency(computedObservable);\n\t            if (state.isStale || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\n\t                computedObservable.evaluateImmediate();\n\t            }\n\t            return state.latestValue;\n\t        }\n\t    }\n\t\n\t    computedObservable[computedState] = state;\n\t    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\n\t\n\t    // Inherit from 'subscribable'\n\t    if (!ko.utils.canSetPrototype) {\n\t        // 'subscribable' won't be on the prototype chain unless we put it there directly\n\t        ko.utils.extend(computedObservable, ko.subscribable['fn']);\n\t    }\n\t    ko.subscribable['fn'].init(computedObservable);\n\t\n\t    // Inherit from 'computed'\n\t    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\n\t\n\t    if (options['pure']) {\n\t        state.pure = true;\n\t        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n\t        ko.utils.extend(computedObservable, pureComputedOverrides);\n\t    } else if (options['deferEvaluation']) {\n\t        ko.utils.extend(computedObservable, deferEvaluationOverrides);\n\t    }\n\t\n\t    if (ko.options['deferUpdates']) {\n\t        ko.extenders['deferred'](computedObservable, true);\n\t    }\n\t\n\t    if (DEBUG) {\n\t        // #1731 - Aid debugging by exposing the computed's options\n\t        computedObservable[\"_options\"] = options;\n\t    }\n\t\n\t    if (state.disposeWhenNodeIsRemoved) {\n\t        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n\t        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n\t        // we'll prevent disposal until \"disposeWhen\" first returns false.\n\t        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\t\n\t        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n\t        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n\t        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n\t        // be documented or used by application code, as it's likely to change in a future version of KO.\n\t        if (!state.disposeWhenNodeIsRemoved.nodeType) {\n\t            state.disposeWhenNodeIsRemoved = null;\n\t        }\n\t    }\n\t\n\t    // Evaluate, unless sleeping or deferEvaluation is true\n\t    if (!state.isSleeping && !options['deferEvaluation']) {\n\t        computedObservable.evaluateImmediate();\n\t    }\n\t\n\t    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n\t    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n\t    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\n\t        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\n\t            computedObservable.dispose();\n\t        });\n\t    }\n\t\n\t    return computedObservable;\n\t};\n\t\n\t// Utility function that disposes a given dependencyTracking entry\n\tfunction computedDisposeDependencyCallback(id, entryToDispose) {\n\t    if (entryToDispose !== null && entryToDispose.dispose) {\n\t        entryToDispose.dispose();\n\t    }\n\t}\n\t\n\t// This function gets called each time a dependency is detected while evaluating a computed.\n\t// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\n\tfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n\t    var computedObservable = this.computedObservable,\n\t        state = computedObservable[computedState];\n\t    if (!state.isDisposed) {\n\t        if (this.disposalCount && this.disposalCandidates[id]) {\n\t            // Don't want to dispose this subscription, as it's still being used\n\t            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\n\t            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n\t            --this.disposalCount;\n\t        } else if (!state.dependencyTracking[id]) {\n\t            // Brand new subscription - add it\n\t            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\n\t        }\n\t    }\n\t}\n\t\n\tvar computedFn = {\n\t    \"equalityComparer\": valuesArePrimitiveAndEqual,\n\t    getDependenciesCount: function () {\n\t        return this[computedState].dependenciesCount;\n\t    },\n\t    addDependencyTracking: function (id, target, trackingObj) {\n\t        if (this[computedState].pure && target === this) {\n\t            throw Error(\"A 'pure' computed must not be called recursively\");\n\t        }\n\t\n\t        this[computedState].dependencyTracking[id] = trackingObj;\n\t        trackingObj._order = this[computedState].dependenciesCount++;\n\t        trackingObj._version = target.getVersion();\n\t    },\n\t    haveDependenciesChanged: function () {\n\t        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\n\t        for (id in dependencyTracking) {\n\t            if (dependencyTracking.hasOwnProperty(id)) {\n\t                dependency = dependencyTracking[id];\n\t                if (dependency._target.hasChanged(dependency._version)) {\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t    },\n\t    markDirty: function () {\n\t        // Process \"dirty\" events if we can handle delayed notifications\n\t        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n\t            this._evalDelayed();\n\t        }\n\t    },\n\t    isActive: function () {\n\t        return this[computedState].isStale || this[computedState].dependenciesCount > 0;\n\t    },\n\t    respondToChange: function () {\n\t        // Ignore \"change\" events if we've already scheduled a delayed notification\n\t        if (!this._notificationIsPending) {\n\t            this.evaluatePossiblyAsync();\n\t        }\n\t    },\n\t    subscribeToDependency: function (target) {\n\t        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\n\t            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n\t                changeSub = target.subscribe(this.respondToChange, this);\n\t            return {\n\t                _target: target,\n\t                dispose: function () {\n\t                    dirtySub.dispose();\n\t                    changeSub.dispose();\n\t                }\n\t            };\n\t        } else {\n\t            return target.subscribe(this.evaluatePossiblyAsync, this);\n\t        }\n\t    },\n\t    evaluatePossiblyAsync: function () {\n\t        var computedObservable = this,\n\t            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\n\t        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n\t            clearTimeout(this[computedState].evaluationTimeoutInstance);\n\t            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\n\t                computedObservable.evaluateImmediate(true /*notifyChange*/);\n\t            }, throttleEvaluationTimeout);\n\t        } else if (computedObservable._evalDelayed) {\n\t            computedObservable._evalDelayed();\n\t        } else {\n\t            computedObservable.evaluateImmediate(true /*notifyChange*/);\n\t        }\n\t    },\n\t    evaluateImmediate: function (notifyChange) {\n\t        var computedObservable = this,\n\t            state = computedObservable[computedState],\n\t            disposeWhen = state.disposeWhen;\n\t\n\t        if (state.isBeingEvaluated) {\n\t            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n\t            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n\t            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n\t            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n\t            return;\n\t        }\n\t\n\t        // Do not evaluate (and possibly capture new dependencies) if disposed\n\t        if (state.isDisposed) {\n\t            return;\n\t        }\n\t\n\t        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n\t            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n\t            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n\t                computedObservable.dispose();\n\t                return;\n\t            }\n\t        } else {\n\t            // It just did return false, so we can stop suppressing now\n\t            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n\t        }\n\t\n\t        state.isBeingEvaluated = true;\n\t        try {\n\t            this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n\t        } finally {\n\t            state.isBeingEvaluated = false;\n\t        }\n\t\n\t        if (!state.dependenciesCount) {\n\t            computedObservable.dispose();\n\t        }\n\t    },\n\t    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\n\t        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n\t        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n\t        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\t\n\t        var computedObservable = this,\n\t            state = computedObservable[computedState];\n\t\n\t        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n\t        // Then, during evaluation, we cross off any that are in fact still being used.\n\t        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n\t            dependencyDetectionContext = {\n\t                computedObservable: computedObservable,\n\t                disposalCandidates: state.dependencyTracking,\n\t                disposalCount: state.dependenciesCount\n\t            };\n\t\n\t        ko.dependencyDetection.begin({\n\t            callbackTarget: dependencyDetectionContext,\n\t            callback: computedBeginDependencyDetectionCallback,\n\t            computed: computedObservable,\n\t            isInitial: isInitial\n\t        });\n\t\n\t        state.dependencyTracking = {};\n\t        state.dependenciesCount = 0;\n\t\n\t        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\t\n\t        if (computedObservable.isDifferent(state.latestValue, newValue)) {\n\t            if (!state.isSleeping) {\n\t                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\n\t            }\n\t\n\t            state.latestValue = newValue;\n\t\n\t            if (state.isSleeping) {\n\t                computedObservable.updateVersion();\n\t            } else if (notifyChange) {\n\t                computedObservable[\"notifySubscribers\"](state.latestValue);\n\t            }\n\t        }\n\t\n\t        if (isInitial) {\n\t            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n\t        }\n\t    },\n\t    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\n\t        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n\t        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n\t        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n\t        // overhead of computed evaluation (on V8 at least).\n\t\n\t        try {\n\t            var readFunction = state.readFunction;\n\t            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n\t        } finally {\n\t            ko.dependencyDetection.end();\n\t\n\t            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n\t            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n\t                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n\t            }\n\t\n\t            state.isStale = false;\n\t        }\n\t    },\n\t    peek: function () {\n\t        // Peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n\t        var state = this[computedState];\n\t        if ((state.isStale && !state.dependenciesCount) || (state.isSleeping && this.haveDependenciesChanged())) {\n\t            this.evaluateImmediate();\n\t        }\n\t        return state.latestValue;\n\t    },\n\t    limit: function (limitFunction) {\n\t        // Override the limit function with one that delays evaluation as well\n\t        ko.subscribable['fn'].limit.call(this, limitFunction);\n\t        this._evalDelayed = function () {\n\t            this._limitBeforeChange(this[computedState].latestValue);\n\t\n\t            this[computedState].isStale = true; // Mark as dirty\n\t\n\t            // Pass the observable to the \"limit\" code, which will access it when\n\t            // it's time to do the notification.\n\t            this._limitChange(this);\n\t        }\n\t    },\n\t    dispose: function () {\n\t        var state = this[computedState];\n\t        if (!state.isSleeping && state.dependencyTracking) {\n\t            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n\t                if (dependency.dispose)\n\t                    dependency.dispose();\n\t            });\n\t        }\n\t        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n\t            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n\t        }\n\t        state.dependencyTracking = null;\n\t        state.dependenciesCount = 0;\n\t        state.isDisposed = true;\n\t        state.isStale = false;\n\t        state.isSleeping = false;\n\t        state.disposeWhenNodeIsRemoved = null;\n\t    }\n\t};\n\t\n\tvar pureComputedOverrides = {\n\t    beforeSubscriptionAdd: function (event) {\n\t        // If asleep, wake up the computed by subscribing to any dependencies.\n\t        var computedObservable = this,\n\t            state = computedObservable[computedState];\n\t        if (!state.isDisposed && state.isSleeping && event == 'change') {\n\t            state.isSleeping = false;\n\t            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n\t                state.dependencyTracking = null;\n\t                state.dependenciesCount = 0;\n\t                state.isStale = true;\n\t                computedObservable.evaluateImmediate();\n\t            } else {\n\t                // First put the dependencies in order\n\t                var dependeciesOrder = [];\n\t                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n\t                    dependeciesOrder[dependency._order] = id;\n\t                });\n\t                // Next, subscribe to each one\n\t                ko.utils.arrayForEach(dependeciesOrder, function (id, order) {\n\t                    var dependency = state.dependencyTracking[id],\n\t                        subscription = computedObservable.subscribeToDependency(dependency._target);\n\t                    subscription._order = order;\n\t                    subscription._version = dependency._version;\n\t                    state.dependencyTracking[id] = subscription;\n\t                });\n\t            }\n\t            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n\t                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n\t            }\n\t        }\n\t    },\n\t    afterSubscriptionRemove: function (event) {\n\t        var state = this[computedState];\n\t        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n\t            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n\t                if (dependency.dispose) {\n\t                    state.dependencyTracking[id] = {\n\t                        _target: dependency._target,\n\t                        _order: dependency._order,\n\t                        _version: dependency._version\n\t                    };\n\t                    dependency.dispose();\n\t                }\n\t            });\n\t            state.isSleeping = true;\n\t            this[\"notifySubscribers\"](undefined, \"asleep\");\n\t        }\n\t    },\n\t    getVersion: function () {\n\t        // Because a pure computed is not automatically updated while it is sleeping, we can't\n\t        // simply return the version number. Instead, we check if any of the dependencies have\n\t        // changed and conditionally re-evaluate the computed observable.\n\t        var state = this[computedState];\n\t        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n\t            this.evaluateImmediate();\n\t        }\n\t        return ko.subscribable['fn'].getVersion.call(this);\n\t    }\n\t};\n\t\n\tvar deferEvaluationOverrides = {\n\t    beforeSubscriptionAdd: function (event) {\n\t        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n\t        if (event == 'change' || event == 'beforeChange') {\n\t            this.peek();\n\t        }\n\t    }\n\t};\n\t\n\t// Note that for browsers that don't support proto assignment, the\n\t// inheritance chain is created manually in the ko.computed constructor\n\tif (ko.utils.canSetPrototype) {\n\t    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\n\t}\n\t\n\t// Set the proto chain values for ko.hasPrototype\n\tvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\n\tko.computed[protoProp] = ko.observable;\n\tcomputedFn[protoProp] = ko.computed;\n\t\n\tko.isComputed = function (instance) {\n\t    return ko.hasPrototype(instance, ko.computed);\n\t};\n\t\n\tko.isPureComputed = function (instance) {\n\t    return ko.hasPrototype(instance, ko.computed)\n\t        && instance[computedState] && instance[computedState].pure;\n\t};\n\t\n\tko.exportSymbol('computed', ko.computed);\n\tko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\n\tko.exportSymbol('isComputed', ko.isComputed);\n\tko.exportSymbol('isPureComputed', ko.isPureComputed);\n\tko.exportSymbol('computed.fn', computedFn);\n\tko.exportProperty(computedFn, 'peek', computedFn.peek);\n\tko.exportProperty(computedFn, 'dispose', computedFn.dispose);\n\tko.exportProperty(computedFn, 'isActive', computedFn.isActive);\n\tko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\n\t\n\tko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n\t    if (typeof evaluatorFunctionOrOptions === 'function') {\n\t        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n\t    } else {\n\t        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n\t        evaluatorFunctionOrOptions['pure'] = true;\n\t        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n\t    }\n\t}\n\tko.exportSymbol('pureComputed', ko.pureComputed);\n\t\n\t(function() {\n\t    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\t\n\t    ko.toJS = function(rootObject) {\n\t        if (arguments.length == 0)\n\t            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\t\n\t        // We just unwrap everything at every level in the object graph\n\t        return mapJsObjectGraph(rootObject, function(valueToMap) {\n\t            // Loop because an observable's value might in turn be another observable wrapper\n\t            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n\t                valueToMap = valueToMap();\n\t            return valueToMap;\n\t        });\n\t    };\n\t\n\t    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n\t        var plainJavaScriptObject = ko.toJS(rootObject);\n\t        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n\t    };\n\t\n\t    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n\t        visitedObjects = visitedObjects || new objectLookup();\n\t\n\t        rootObject = mapInputCallback(rootObject);\n\t        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n\t        if (!canHaveProperties)\n\t            return rootObject;\n\t\n\t        var outputProperties = rootObject instanceof Array ? [] : {};\n\t        visitedObjects.save(rootObject, outputProperties);\n\t\n\t        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n\t            var propertyValue = mapInputCallback(rootObject[indexer]);\n\t\n\t            switch (typeof propertyValue) {\n\t                case \"boolean\":\n\t                case \"number\":\n\t                case \"string\":\n\t                case \"function\":\n\t                    outputProperties[indexer] = propertyValue;\n\t                    break;\n\t                case \"object\":\n\t                case \"undefined\":\n\t                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n\t                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n\t                        ? previouslyMappedValue\n\t                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n\t                    break;\n\t            }\n\t        });\n\t\n\t        return outputProperties;\n\t    }\n\t\n\t    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n\t        if (rootObject instanceof Array) {\n\t            for (var i = 0; i < rootObject.length; i++)\n\t                visitorCallback(i);\n\t\n\t            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n\t            if (typeof rootObject['toJSON'] == 'function')\n\t                visitorCallback('toJSON');\n\t        } else {\n\t            for (var propertyName in rootObject) {\n\t                visitorCallback(propertyName);\n\t            }\n\t        }\n\t    };\n\t\n\t    function objectLookup() {\n\t        this.keys = [];\n\t        this.values = [];\n\t    };\n\t\n\t    objectLookup.prototype = {\n\t        constructor: objectLookup,\n\t        save: function(key, value) {\n\t            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n\t            if (existingIndex >= 0)\n\t                this.values[existingIndex] = value;\n\t            else {\n\t                this.keys.push(key);\n\t                this.values.push(value);\n\t            }\n\t        },\n\t        get: function(key) {\n\t            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n\t            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('toJS', ko.toJS);\n\tko.exportSymbol('toJSON', ko.toJSON);\n\t(function () {\n\t    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\t\n\t    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n\t    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n\t    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n\t    ko.selectExtensions = {\n\t        readValue : function(element) {\n\t            switch (ko.utils.tagNameLower(element)) {\n\t                case 'option':\n\t                    if (element[hasDomDataExpandoProperty] === true)\n\t                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n\t                    return ko.utils.ieVersion <= 7\n\t                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n\t                        : element.value;\n\t                case 'select':\n\t                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n\t                default:\n\t                    return element.value;\n\t            }\n\t        },\n\t\n\t        writeValue: function(element, value, allowUnset) {\n\t            switch (ko.utils.tagNameLower(element)) {\n\t                case 'option':\n\t                    switch(typeof value) {\n\t                        case \"string\":\n\t                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n\t                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n\t                                delete element[hasDomDataExpandoProperty];\n\t                            }\n\t                            element.value = value;\n\t                            break;\n\t                        default:\n\t                            // Store arbitrary object using DomData\n\t                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n\t                            element[hasDomDataExpandoProperty] = true;\n\t\n\t                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n\t                            element.value = typeof value === \"number\" ? value : \"\";\n\t                            break;\n\t                    }\n\t                    break;\n\t                case 'select':\n\t                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n\t                        value = undefined;\n\t                    var selection = -1;\n\t                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n\t                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n\t                        // Include special check to handle selecting a caption with a blank string value\n\t                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n\t                            selection = i;\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n\t                        element.selectedIndex = selection;\n\t                    }\n\t                    break;\n\t                default:\n\t                    if ((value === null) || (value === undefined))\n\t                        value = \"\";\n\t                    element.value = value;\n\t                    break;\n\t            }\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('selectExtensions', ko.selectExtensions);\n\tko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\n\tko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\n\tko.expressionRewriting = (function () {\n\t    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\t\n\t    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n\t    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n\t    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n\t    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\t\n\t    function getWriteableValue(expression) {\n\t        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n\t            return false;\n\t        var match = expression.match(javaScriptAssignmentTarget);\n\t        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n\t    }\n\t\n\t    // The following regular expressions will be used to split an object-literal string into tokens\n\t\n\t        // These two match strings, either with double quotes or single quotes\n\t    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\n\t        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\n\t        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\n\t        // as a regular expression (this is handled by the parsing loop below).\n\t        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\n\t        // These characters have special meaning to the parser and must not appear in the middle of a\n\t        // token, except as part of a string.\n\t        specials = ',\"\\'{}()/:[\\\\]',\n\t        // Match text (at least two characters) that does not contain any of the above special characters,\n\t        // although some of the special characters are allowed to start it (all but the colon and comma).\n\t        // The text can contain spaces, but leading or trailing spaces are skipped.\n\t        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n\t        // Match any non-space character not matched already. This will match colons and commas, since they're\n\t        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n\t        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n\t        oneNotSpace = '[^\\\\s]',\n\t\n\t        // Create the actual regular expression by or-ing the above strings. The order is important.\n\t        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\n\t\n\t        // Match end of previous token to determine whether a slash is a division or regex.\n\t        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n\t        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\t\n\t    function parseObjectLiteral(objectLiteralString) {\n\t        // Trim leading and trailing spaces from the string\n\t        var str = ko.utils.stringTrim(objectLiteralString);\n\t\n\t        // Trim braces '{' surrounding the whole object literal\n\t        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\t\n\t        // Split into tokens\n\t        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\t\n\t        if (toks) {\n\t            // Append a comma so that we don't need a separate code block to deal with the last item\n\t            toks.push(',');\n\t\n\t            for (var i = 0, tok; tok = toks[i]; ++i) {\n\t                var c = tok.charCodeAt(0);\n\t                // A comma signals the end of a key/value pair if depth is zero\n\t                if (c === 44) { // \",\"\n\t                    if (depth <= 0) {\n\t                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n\t                        key = depth = 0;\n\t                        values = [];\n\t                        continue;\n\t                    }\n\t                // Simply skip the colon that separates the name and value\n\t                } else if (c === 58) { // \":\"\n\t                    if (!depth && !key && values.length === 1) {\n\t                        key = values.pop();\n\t                        continue;\n\t                    }\n\t                // A set of slashes is initially matched as a regular expression, but could be division\n\t                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n\t                    // Look at the end of the previous token to determine if the slash is actually division\n\t                    var match = toks[i-1].match(divisionLookBehind);\n\t                    if (match && !keywordRegexLookBehind[match[0]]) {\n\t                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n\t                        str = str.substr(str.indexOf(tok) + 1);\n\t                        toks = str.match(bindingToken);\n\t                        toks.push(',');\n\t                        i = -1;\n\t                        // Continue with just the slash\n\t                        tok = '/';\n\t                    }\n\t                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n\t                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n\t                    ++depth;\n\t                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n\t                    --depth;\n\t                // The key will be the first token; if it's a string, trim the quotes\n\t                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n\t                    tok = tok.slice(1, -1);\n\t                }\n\t                values.push(tok);\n\t            }\n\t        }\n\t        return result;\n\t    }\n\t\n\t    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n\t    var twoWayBindings = {};\n\t\n\t    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n\t        bindingOptions = bindingOptions || {};\n\t\n\t        function processKeyValue(key, val) {\n\t            var writableVal;\n\t            function callPreprocessHook(obj) {\n\t                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n\t            }\n\t            if (!bindingParams) {\n\t                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n\t                    return;\n\t\n\t                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n\t                    // For two-way bindings, provide a write method in case the value\n\t                    // isn't a writable observable.\n\t                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\n\t                }\n\t            }\n\t            // Values are wrapped in a function so that each value can be accessed independently\n\t            if (makeValueAccessors) {\n\t                val = 'function(){return ' + val + ' }';\n\t            }\n\t            resultStrings.push(\"'\" + key + \"':\" + val);\n\t        }\n\t\n\t        var resultStrings = [],\n\t            propertyAccessorResultStrings = [],\n\t            makeValueAccessors = bindingOptions['valueAccessors'],\n\t            bindingParams = bindingOptions['bindingParams'],\n\t            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n\t                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\t\n\t        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n\t            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n\t        });\n\t\n\t        if (propertyAccessorResultStrings.length)\n\t            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\t\n\t        return resultStrings.join(\",\");\n\t    }\n\t\n\t    return {\n\t        bindingRewriteValidators: [],\n\t\n\t        twoWayBindings: twoWayBindings,\n\t\n\t        parseObjectLiteral: parseObjectLiteral,\n\t\n\t        preProcessBindings: preProcessBindings,\n\t\n\t        keyValueArrayContainsKey: function(keyValueArray, key) {\n\t            for (var i = 0; i < keyValueArray.length; i++)\n\t                if (keyValueArray[i]['key'] == key)\n\t                    return true;\n\t            return false;\n\t        },\n\t\n\t        // Internal, private KO utility for updating model properties from within bindings\n\t        // property:            If the property being updated is (or might be) an observable, pass it here\n\t        //                      If it turns out to be a writable observable, it will be written to directly\n\t        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n\t        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n\t        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n\t        // value:               The value to be written\n\t        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n\t        //                      it is !== existing value on that writable observable\n\t        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n\t            if (!property || !ko.isObservable(property)) {\n\t                var propWriters = allBindings.get('_ko_property_writers');\n\t                if (propWriters && propWriters[key])\n\t                    propWriters[key](value);\n\t            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n\t                property(value);\n\t            }\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('expressionRewriting', ko.expressionRewriting);\n\tko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\n\tko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\n\tko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\t\n\t// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n\t// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n\t// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n\t// as an internal implementation detail in the short term.\n\t// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n\t// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n\t// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\n\tko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\t\n\t// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n\t// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\n\tko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\n\tko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n\t(function() {\n\t    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n\t    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n\t    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n\t    // of that virtual hierarchy\n\t    //\n\t    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n\t    // without having to scatter special cases all over the binding and templating code.\n\t\n\t    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n\t    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n\t    // So, use node.text where available, and node.nodeValue elsewhere\n\t    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\t\n\t    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n\t    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n\t    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\t\n\t    function isStartComment(node) {\n\t        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n\t    }\n\t\n\t    function isEndComment(node) {\n\t        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n\t    }\n\t\n\t    function getVirtualChildren(startComment, allowUnbalanced) {\n\t        var currentNode = startComment;\n\t        var depth = 1;\n\t        var children = [];\n\t        while (currentNode = currentNode.nextSibling) {\n\t            if (isEndComment(currentNode)) {\n\t                depth--;\n\t                if (depth === 0)\n\t                    return children;\n\t            }\n\t\n\t            children.push(currentNode);\n\t\n\t            if (isStartComment(currentNode))\n\t                depth++;\n\t        }\n\t        if (!allowUnbalanced)\n\t            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n\t        return null;\n\t    }\n\t\n\t    function getMatchingEndComment(startComment, allowUnbalanced) {\n\t        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n\t        if (allVirtualChildren) {\n\t            if (allVirtualChildren.length > 0)\n\t                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n\t            return startComment.nextSibling;\n\t        } else\n\t            return null; // Must have no matching end comment, and allowUnbalanced is true\n\t    }\n\t\n\t    function getUnbalancedChildTags(node) {\n\t        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n\t        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n\t        var childNode = node.firstChild, captureRemaining = null;\n\t        if (childNode) {\n\t            do {\n\t                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n\t                    captureRemaining.push(childNode);\n\t                else if (isStartComment(childNode)) {\n\t                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n\t                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n\t                        childNode = matchingEndComment;\n\t                    else\n\t                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n\t                } else if (isEndComment(childNode)) {\n\t                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n\t                }\n\t            } while (childNode = childNode.nextSibling);\n\t        }\n\t        return captureRemaining;\n\t    }\n\t\n\t    ko.virtualElements = {\n\t        allowedBindings: {},\n\t\n\t        childNodes: function(node) {\n\t            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n\t        },\n\t\n\t        emptyNode: function(node) {\n\t            if (!isStartComment(node))\n\t                ko.utils.emptyDomNode(node);\n\t            else {\n\t                var virtualChildren = ko.virtualElements.childNodes(node);\n\t                for (var i = 0, j = virtualChildren.length; i < j; i++)\n\t                    ko.removeNode(virtualChildren[i]);\n\t            }\n\t        },\n\t\n\t        setDomNodeChildren: function(node, childNodes) {\n\t            if (!isStartComment(node))\n\t                ko.utils.setDomNodeChildren(node, childNodes);\n\t            else {\n\t                ko.virtualElements.emptyNode(node);\n\t                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n\t                for (var i = 0, j = childNodes.length; i < j; i++)\n\t                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n\t            }\n\t        },\n\t\n\t        prepend: function(containerNode, nodeToPrepend) {\n\t            if (!isStartComment(containerNode)) {\n\t                if (containerNode.firstChild)\n\t                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\n\t                else\n\t                    containerNode.appendChild(nodeToPrepend);\n\t            } else {\n\t                // Start comments must always have a parent and at least one following sibling (the end comment)\n\t                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\n\t            }\n\t        },\n\t\n\t        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n\t            if (!insertAfterNode) {\n\t                ko.virtualElements.prepend(containerNode, nodeToInsert);\n\t            } else if (!isStartComment(containerNode)) {\n\t                // Insert after insertion point\n\t                if (insertAfterNode.nextSibling)\n\t                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n\t                else\n\t                    containerNode.appendChild(nodeToInsert);\n\t            } else {\n\t                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n\t                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n\t            }\n\t        },\n\t\n\t        firstChild: function(node) {\n\t            if (!isStartComment(node))\n\t                return node.firstChild;\n\t            if (!node.nextSibling || isEndComment(node.nextSibling))\n\t                return null;\n\t            return node.nextSibling;\n\t        },\n\t\n\t        nextSibling: function(node) {\n\t            if (isStartComment(node))\n\t                node = getMatchingEndComment(node);\n\t            if (node.nextSibling && isEndComment(node.nextSibling))\n\t                return null;\n\t            return node.nextSibling;\n\t        },\n\t\n\t        hasBindingValue: isStartComment,\n\t\n\t        virtualNodeBindingValue: function(node) {\n\t            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n\t            return regexMatch ? regexMatch[1] : null;\n\t        },\n\t\n\t        normaliseVirtualElementDomStructure: function(elementVerified) {\n\t            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n\t            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n\t            // that are direct descendants of <ul> into the preceding <li>)\n\t            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n\t                return;\n\t\n\t            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n\t            // must be intended to appear *after* that child, so move them there.\n\t            var childNode = elementVerified.firstChild;\n\t            if (childNode) {\n\t                do {\n\t                    if (childNode.nodeType === 1) {\n\t                        var unbalancedTags = getUnbalancedChildTags(childNode);\n\t                        if (unbalancedTags) {\n\t                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n\t                            var nodeToInsertBefore = childNode.nextSibling;\n\t                            for (var i = 0; i < unbalancedTags.length; i++) {\n\t                                if (nodeToInsertBefore)\n\t                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n\t                                else\n\t                                    elementVerified.appendChild(unbalancedTags[i]);\n\t                            }\n\t                        }\n\t                    }\n\t                } while (childNode = childNode.nextSibling);\n\t            }\n\t        }\n\t    };\n\t})();\n\tko.exportSymbol('virtualElements', ko.virtualElements);\n\tko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\n\tko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n\t//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\n\tko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n\t//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\n\tko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\n\tko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n\t(function() {\n\t    var defaultBindingAttributeName = \"data-bind\";\n\t\n\t    ko.bindingProvider = function() {\n\t        this.bindingCache = {};\n\t    };\n\t\n\t    ko.utils.extend(ko.bindingProvider.prototype, {\n\t        'nodeHasBindings': function(node) {\n\t            switch (node.nodeType) {\n\t                case 1: // Element\n\t                    return node.getAttribute(defaultBindingAttributeName) != null\n\t                        || ko.components['getComponentNameForNode'](node);\n\t                case 8: // Comment node\n\t                    return ko.virtualElements.hasBindingValue(node);\n\t                default: return false;\n\t            }\n\t        },\n\t\n\t        'getBindings': function(node, bindingContext) {\n\t            var bindingsString = this['getBindingsString'](node, bindingContext),\n\t                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n\t            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n\t        },\n\t\n\t        'getBindingAccessors': function(node, bindingContext) {\n\t            var bindingsString = this['getBindingsString'](node, bindingContext),\n\t                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n\t            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n\t        },\n\t\n\t        // The following function is only used internally by this default provider.\n\t        // It's not part of the interface definition for a general binding provider.\n\t        'getBindingsString': function(node, bindingContext) {\n\t            switch (node.nodeType) {\n\t                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n\t                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n\t                default: return null;\n\t            }\n\t        },\n\t\n\t        // The following function is only used internally by this default provider.\n\t        // It's not part of the interface definition for a general binding provider.\n\t        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n\t            try {\n\t                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n\t                return bindingFunction(bindingContext, node);\n\t            } catch (ex) {\n\t                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n\t                throw ex;\n\t            }\n\t        }\n\t    });\n\t\n\t    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\t\n\t    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n\t        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n\t        return cache[cacheKey]\n\t            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n\t    }\n\t\n\t    function createBindingsStringEvaluator(bindingsString, options) {\n\t        // Build the source for a function that evaluates \"expression\"\n\t        // For each scope variable, add an extra level of \"with\" nesting\n\t        // Example result: with(sc1) { with(sc0) { return (expression) } }\n\t        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n\t            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n\t        return new Function(\"$context\", \"$element\", functionBody);\n\t    }\n\t})();\n\t\n\tko.exportSymbol('bindingProvider', ko.bindingProvider);\n\t(function () {\n\t    ko.bindingHandlers = {};\n\t\n\t    // The following element types will not be recursed into during binding.\n\t    var bindingDoesNotRecurseIntoElementTypes = {\n\t        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n\t        // because it's unexpected and a potential XSS issue.\n\t        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\n\t        // and because such elements' contents are always intended to be bound in a different context\n\t        // from where they appear in the document.\n\t        'script': true,\n\t        'textarea': true,\n\t        'template': true\n\t    };\n\t\n\t    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\n\t    ko['getBindingHandler'] = function(bindingKey) {\n\t        return ko.bindingHandlers[bindingKey];\n\t    };\n\t\n\t    // The ko.bindingContext constructor is only called directly to create the root context. For child\n\t    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n\t    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback) {\n\t\n\t        // The binding context object includes static properties for the current, parent, and root view models.\n\t        // If a view model is actually stored in an observable, the corresponding binding context object, and\n\t        // any child contexts, must be updated when the view model is changed.\n\t        function updateContext() {\n\t            // Most of the time, the context will directly get a view model object, but if a function is given,\n\t            // we call the function to retrieve the view model. If the function accesses any observables or returns\n\t            // an observable, the dependency is tracked, and those observables can later cause the binding\n\t            // context to be updated.\n\t            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\n\t                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\t\n\t            if (parentContext) {\n\t                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\n\t                // parent context is updated, this context will also be updated.\n\t                if (parentContext._subscribable)\n\t                    parentContext._subscribable();\n\t\n\t                // Copy $root and any custom properties from the parent context\n\t                ko.utils.extend(self, parentContext);\n\t\n\t                // Because the above copy overwrites our own properties, we need to reset them.\n\t                // During the first execution, \"subscribable\" isn't set, so don't bother doing the update then.\n\t                if (subscribable) {\n\t                    self._subscribable = subscribable;\n\t                }\n\t            } else {\n\t                self['$parents'] = [];\n\t                self['$root'] = dataItem;\n\t\n\t                // Export 'ko' in the binding context so it will be available in bindings and templates\n\t                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n\t                // See https://github.com/SteveSanderson/knockout/issues/490\n\t                self['ko'] = ko;\n\t            }\n\t            self['$rawData'] = dataItemOrObservable;\n\t            self['$data'] = dataItem;\n\t            if (dataItemAlias)\n\t                self[dataItemAlias] = dataItem;\n\t\n\t            // The extendCallback function is provided when creating a child context or extending a context.\n\t            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n\t            // function could also add dependencies to this binding context.\n\t            if (extendCallback)\n\t                extendCallback(self, parentContext, dataItem);\n\t\n\t            return self['$data'];\n\t        }\n\t        function disposeWhen() {\n\t            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\n\t        }\n\t\n\t        var self = this,\n\t            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\n\t            nodes,\n\t            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\n\t\n\t        // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n\t        // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n\t        // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n\t        // the context object.\n\t        if (subscribable.isActive()) {\n\t            self._subscribable = subscribable;\n\t\n\t            // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n\t            subscribable['equalityComparer'] = null;\n\t\n\t            // We need to be able to dispose of this computed observable when it's no longer needed. This would be\n\t            // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\n\t            // we cannot assume that those nodes have any relation to each other. So instead we track any node that\n\t            // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\n\t\n\t            // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\n\t            nodes = [];\n\t            subscribable._addNode = function(node) {\n\t                nodes.push(node);\n\t                ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\n\t                    ko.utils.arrayRemoveItem(nodes, node);\n\t                    if (!nodes.length) {\n\t                        subscribable.dispose();\n\t                        self._subscribable = subscribable = undefined;\n\t                    }\n\t                });\n\t            };\n\t        }\n\t    }\n\t\n\t    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n\t    // any observables, the new child context will automatically get a dependency on the parent context.\n\t    // But this does not mean that the $data value of the child context will also get updated. If the child\n\t    // view model also depends on the parent view model, you must provide a function that returns the correct\n\t    // view model on each update.\n\t    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback) {\n\t        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\n\t            // Extend the context hierarchy by setting the appropriate pointers\n\t            self['$parentContext'] = parentContext;\n\t            self['$parent'] = parentContext['$data'];\n\t            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n\t            self['$parents'].unshift(self['$parent']);\n\t            if (extendCallback)\n\t                extendCallback(self);\n\t        });\n\t    };\n\t\n\t    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n\t    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n\t    // when an observable view model is updated.\n\t    ko.bindingContext.prototype['extend'] = function(properties) {\n\t        // If the parent context references an observable view model, \"_subscribable\" will always be the\n\t        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\n\t        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\n\t            // This \"child\" context doesn't directly track a parent observable view model,\n\t            // so we need to manually set the $rawData value to match the parent.\n\t            self['$rawData'] = parentContext['$rawData'];\n\t            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\n\t        });\n\t    };\n\t\n\t    // Returns the valueAccesor function for a binding value\n\t    function makeValueAccessor(value) {\n\t        return function() {\n\t            return value;\n\t        };\n\t    }\n\t\n\t    // Returns the value of a valueAccessor function\n\t    function evaluateValueAccessor(valueAccessor) {\n\t        return valueAccessor();\n\t    }\n\t\n\t    // Given a function that returns bindings, create and return a new object that contains\n\t    // binding value-accessors functions. Each accessor function calls the original function\n\t    // so that it always gets the latest value and all dependencies are captured. This is used\n\t    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n\t    function makeAccessorsFromFunction(callback) {\n\t        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n\t            return function() {\n\t                return callback()[key];\n\t            };\n\t        });\n\t    }\n\t\n\t    // Given a bindings function or object, create and return a new object that contains\n\t    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n\t    function makeBindingAccessors(bindings, context, node) {\n\t        if (typeof bindings === 'function') {\n\t            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n\t        } else {\n\t            return ko.utils.objectMap(bindings, makeValueAccessor);\n\t        }\n\t    }\n\t\n\t    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n\t    // It must be called with 'this' set to the provider instance.\n\t    function getBindingsAndMakeAccessors(node, context) {\n\t        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n\t    }\n\t\n\t    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n\t        var validator = ko.virtualElements.allowedBindings[bindingName];\n\t        if (!validator)\n\t            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n\t    }\n\t\n\t    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\n\t        var currentChild,\n\t            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\n\t            provider = ko.bindingProvider['instance'],\n\t            preprocessNode = provider['preprocessNode'];\n\t\n\t        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n\t        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n\t        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n\t        // trigger insertion of <template> contents at that point in the document.\n\t        if (preprocessNode) {\n\t            while (currentChild = nextInQueue) {\n\t                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n\t                preprocessNode.call(provider, currentChild);\n\t            }\n\t            // Reset nextInQueue for the next loop\n\t            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n\t        }\n\t\n\t        while (currentChild = nextInQueue) {\n\t            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n\t            nextInQueue = ko.virtualElements.nextSibling(currentChild);\n\t            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\n\t        }\n\t    }\n\t\n\t    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\n\t        var shouldBindDescendants = true;\n\t\n\t        // Perf optimisation: Apply bindings only if...\n\t        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\n\t        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\n\t        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n\t        var isElement = (nodeVerified.nodeType === 1);\n\t        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n\t            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\t\n\t        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\n\t                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\n\t        if (shouldApplyBindings)\n\t            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\n\t\n\t        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n\t            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\n\t            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\n\t            //    hence bindingContextsMayDifferFromDomParentElement is false\n\t            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\n\t            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\n\t            //    hence bindingContextsMayDifferFromDomParentElement is true\n\t            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\n\t        }\n\t    }\n\t\n\t    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\t\n\t\n\t    function topologicalSortBindings(bindings) {\n\t        // Depth-first sort\n\t        var result = [],                // The list of key/handler pairs that we will return\n\t            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n\t            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n\t        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n\t            if (!bindingsConsidered[bindingKey]) {\n\t                var binding = ko['getBindingHandler'](bindingKey);\n\t                if (binding) {\n\t                    // First add dependencies (if any) of the current binding\n\t                    if (binding['after']) {\n\t                        cyclicDependencyStack.push(bindingKey);\n\t                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n\t                            if (bindings[bindingDependencyKey]) {\n\t                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n\t                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n\t                                } else {\n\t                                    pushBinding(bindingDependencyKey);\n\t                                }\n\t                            }\n\t                        });\n\t                        cyclicDependencyStack.length--;\n\t                    }\n\t                    // Next add the current binding\n\t                    result.push({ key: bindingKey, handler: binding });\n\t                }\n\t                bindingsConsidered[bindingKey] = true;\n\t            }\n\t        });\n\t\n\t        return result;\n\t    }\n\t\n\t    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\n\t        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n\t        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\n\t        if (!sourceBindings) {\n\t            if (alreadyBound) {\n\t                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n\t            }\n\t            ko.utils.domData.set(node, boundElementDomDataKey, true);\n\t        }\n\t\n\t        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\n\t        // we can easily recover it just by scanning up the node's ancestors in the DOM\n\t        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\n\t        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\n\t            ko.storedBindingContextForNode(node, bindingContext);\n\t\n\t        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n\t        var bindings;\n\t        if (sourceBindings && typeof sourceBindings !== 'function') {\n\t            bindings = sourceBindings;\n\t        } else {\n\t            var provider = ko.bindingProvider['instance'],\n\t                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\t\n\t            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n\t            // the binding context is updated or if the binding provider accesses observables.\n\t            var bindingsUpdater = ko.dependentObservable(\n\t                function() {\n\t                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n\t                    // Register a dependency on the binding context to support observable view models.\n\t                    if (bindings && bindingContext._subscribable)\n\t                        bindingContext._subscribable();\n\t                    return bindings;\n\t                },\n\t                null, { disposeWhenNodeIsRemoved: node }\n\t            );\n\t\n\t            if (!bindings || !bindingsUpdater.isActive())\n\t                bindingsUpdater = null;\n\t        }\n\t\n\t        var bindingHandlerThatControlsDescendantBindings;\n\t        if (bindings) {\n\t            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n\t            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n\t            // the latest binding value and registers a dependency on the binding updater.\n\t            var getValueAccessor = bindingsUpdater\n\t                ? function(bindingKey) {\n\t                    return function() {\n\t                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n\t                    };\n\t                } : function(bindingKey) {\n\t                    return bindings[bindingKey];\n\t                };\n\t\n\t            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n\t            function allBindings() {\n\t                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n\t            }\n\t            // The following is the 3.x allBindings API\n\t            allBindings['get'] = function(key) {\n\t                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n\t            };\n\t            allBindings['has'] = function(key) {\n\t                return key in bindings;\n\t            };\n\t\n\t            // First put the bindings into the right order\n\t            var orderedBindings = topologicalSortBindings(bindings);\n\t\n\t            // Go through the sorted bindings, calling init and update for each\n\t            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n\t                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n\t                // so bindingKeyAndHandler.handler will always be nonnull.\n\t                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n\t                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n\t                    bindingKey = bindingKeyAndHandler.key;\n\t\n\t                if (node.nodeType === 8) {\n\t                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n\t                }\n\t\n\t                try {\n\t                    // Run init, ignoring any dependencies\n\t                    if (typeof handlerInitFn == \"function\") {\n\t                        ko.dependencyDetection.ignore(function() {\n\t                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\t\n\t                            // If this binding handler claims to control descendant bindings, make a note of this\n\t                            if (initResult && initResult['controlsDescendantBindings']) {\n\t                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n\t                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n\t                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n\t                            }\n\t                        });\n\t                    }\n\t\n\t                    // Run update in its own computed wrapper\n\t                    if (typeof handlerUpdateFn == \"function\") {\n\t                        ko.dependentObservable(\n\t                            function() {\n\t                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\t                            },\n\t                            null,\n\t                            { disposeWhenNodeIsRemoved: node }\n\t                        );\n\t                    }\n\t                } catch (ex) {\n\t                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n\t                    throw ex;\n\t                }\n\t            });\n\t        }\n\t\n\t        return {\n\t            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\n\t        };\n\t    };\n\t\n\t    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\n\t    ko.storedBindingContextForNode = function (node, bindingContext) {\n\t        if (arguments.length == 2) {\n\t            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\n\t            if (bindingContext._subscribable)\n\t                bindingContext._subscribable._addNode(node);\n\t        } else {\n\t            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\n\t        }\n\t    }\n\t\n\t    function getBindingContext(viewModelOrBindingContext) {\n\t        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n\t            ? viewModelOrBindingContext\n\t            : new ko.bindingContext(viewModelOrBindingContext);\n\t    }\n\t\n\t    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n\t        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n\t            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n\t        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\n\t    };\n\t\n\t    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n\t        var context = getBindingContext(viewModelOrBindingContext);\n\t        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n\t    };\n\t\n\t    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n\t        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n\t            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n\t    };\n\t\n\t    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\n\t        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n\t        if (!jQueryInstance && window['jQuery']) {\n\t            jQueryInstance = window['jQuery'];\n\t        }\n\t\n\t        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\n\t            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n\t        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\n\t\n\t        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n\t    };\n\t\n\t    // Retrieving binding context from arbitrary nodes\n\t    ko.contextFor = function(node) {\n\t        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n\t        switch (node.nodeType) {\n\t            case 1:\n\t            case 8:\n\t                var context = ko.storedBindingContextForNode(node);\n\t                if (context) return context;\n\t                if (node.parentNode) return ko.contextFor(node.parentNode);\n\t                break;\n\t        }\n\t        return undefined;\n\t    };\n\t    ko.dataFor = function(node) {\n\t        var context = ko.contextFor(node);\n\t        return context ? context['$data'] : undefined;\n\t    };\n\t\n\t    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n\t    ko.exportSymbol('applyBindings', ko.applyBindings);\n\t    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n\t    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n\t    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n\t    ko.exportSymbol('contextFor', ko.contextFor);\n\t    ko.exportSymbol('dataFor', ko.dataFor);\n\t})();\n\t(function(undefined) {\n\t    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n\t        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\t\n\t    ko.components = {\n\t        get: function(componentName, callback) {\n\t            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n\t            if (cachedDefinition) {\n\t                // It's already loaded and cached. Reuse the same definition object.\n\t                // Note that for API consistency, even cache hits complete asynchronously by default.\n\t                // You can bypass this by putting synchronous:true on your component config.\n\t                if (cachedDefinition.isSynchronousComponent) {\n\t                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n\t                        callback(cachedDefinition.definition);\n\t                    });\n\t                } else {\n\t                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\n\t                }\n\t            } else {\n\t                // Join the loading process that is already underway, or start a new one.\n\t                loadComponentAndNotify(componentName, callback);\n\t            }\n\t        },\n\t\n\t        clearCachedDefinition: function(componentName) {\n\t            delete loadedDefinitionsCache[componentName];\n\t        },\n\t\n\t        _getFirstResultFromLoaders: getFirstResultFromLoaders\n\t    };\n\t\n\t    function getObjectOwnProperty(obj, propName) {\n\t        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n\t    }\n\t\n\t    function loadComponentAndNotify(componentName, callback) {\n\t        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n\t            completedAsync;\n\t        if (!subscribable) {\n\t            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n\t            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n\t            subscribable.subscribe(callback);\n\t\n\t            beginLoadingComponent(componentName, function(definition, config) {\n\t                var isSynchronousComponent = !!(config && config['synchronous']);\n\t                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n\t                delete loadingSubscribablesCache[componentName];\n\t\n\t                // For API consistency, all loads complete asynchronously. However we want to avoid\n\t                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n\t                // async).\n\t                //\n\t                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n\t                // flag on your component configuration when you register it.\n\t                if (completedAsync || isSynchronousComponent) {\n\t                    // Note that notifySubscribers ignores any dependencies read within the callback.\n\t                    // See comment in loaderRegistryBehaviors.js for reasoning\n\t                    subscribable['notifySubscribers'](definition);\n\t                } else {\n\t                    ko.tasks.schedule(function() {\n\t                        subscribable['notifySubscribers'](definition);\n\t                    });\n\t                }\n\t            });\n\t            completedAsync = true;\n\t        } else {\n\t            subscribable.subscribe(callback);\n\t        }\n\t    }\n\t\n\t    function beginLoadingComponent(componentName, callback) {\n\t        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n\t            if (config) {\n\t                // We have a config, so now load its definition\n\t                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n\t                    callback(definition, config);\n\t                });\n\t            } else {\n\t                // The component has no config - it's unknown to all the loaders.\n\t                // Note that this is not an error (e.g., a module loading error) - that would abort the\n\t                // process and this callback would not run. For this callback to run, all loaders must\n\t                // have confirmed they don't know about this component.\n\t                callback(null, null);\n\t            }\n\t        });\n\t    }\n\t\n\t    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n\t        // On the first call in the stack, start with the full set of loaders\n\t        if (!candidateLoaders) {\n\t            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n\t        }\n\t\n\t        // Try the next candidate\n\t        var currentCandidateLoader = candidateLoaders.shift();\n\t        if (currentCandidateLoader) {\n\t            var methodInstance = currentCandidateLoader[methodName];\n\t            if (methodInstance) {\n\t                var wasAborted = false,\n\t                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n\t                        if (wasAborted) {\n\t                            callback(null);\n\t                        } else if (result !== null) {\n\t                            // This candidate returned a value. Use it.\n\t                            callback(result);\n\t                        } else {\n\t                            // Try the next candidate\n\t                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n\t                        }\n\t                    }));\n\t\n\t                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n\t                // that we'll extend the API to support synchronous return values in the future. It won't be\n\t                // a breaking change, because currently no loader is allowed to return anything except undefined.\n\t                if (synchronousReturnValue !== undefined) {\n\t                    wasAborted = true;\n\t\n\t                    // Method to suppress exceptions will remain undocumented. This is only to keep\n\t                    // KO's specs running tidily, since we can observe the loading got aborted without\n\t                    // having exceptions cluttering up the console too.\n\t                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n\t                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n\t                    }\n\t                }\n\t            } else {\n\t                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n\t                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n\t            }\n\t        } else {\n\t            // No candidates returned a value\n\t            callback(null);\n\t        }\n\t    }\n\t\n\t    // Reference the loaders via string name so it's possible for developers\n\t    // to replace the whole array by assigning to ko.components.loaders\n\t    ko.components['loaders'] = [];\n\t\n\t    ko.exportSymbol('components', ko.components);\n\t    ko.exportSymbol('components.get', ko.components.get);\n\t    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n\t})();\n\t(function(undefined) {\n\t\n\t    // The default loader is responsible for two things:\n\t    // 1. Maintaining the default in-memory registry of component configuration objects\n\t    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n\t    // 2. Answering requests for components by fetching configuration objects\n\t    //    from that default in-memory registry and resolving them into standard\n\t    //    component definition objects (of the form { createViewModel: ..., template: ... })\n\t    // Custom loaders may override either of these facilities, i.e.,\n\t    // 1. To supply configuration objects from some other source (e.g., conventions)\n\t    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\t\n\t    var defaultConfigRegistry = {};\n\t\n\t    ko.components.register = function(componentName, config) {\n\t        if (!config) {\n\t            throw new Error('Invalid configuration for ' + componentName);\n\t        }\n\t\n\t        if (ko.components.isRegistered(componentName)) {\n\t            throw new Error('Component ' + componentName + ' is already registered');\n\t        }\n\t\n\t        defaultConfigRegistry[componentName] = config;\n\t    };\n\t\n\t    ko.components.isRegistered = function(componentName) {\n\t        return defaultConfigRegistry.hasOwnProperty(componentName);\n\t    };\n\t\n\t    ko.components.unregister = function(componentName) {\n\t        delete defaultConfigRegistry[componentName];\n\t        ko.components.clearCachedDefinition(componentName);\n\t    };\n\t\n\t    ko.components.defaultLoader = {\n\t        'getConfig': function(componentName, callback) {\n\t            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n\t                ? defaultConfigRegistry[componentName]\n\t                : null;\n\t            callback(result);\n\t        },\n\t\n\t        'loadComponent': function(componentName, config, callback) {\n\t            var errorCallback = makeErrorCallback(componentName);\n\t            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n\t                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n\t            });\n\t        },\n\t\n\t        'loadTemplate': function(componentName, templateConfig, callback) {\n\t            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n\t        },\n\t\n\t        'loadViewModel': function(componentName, viewModelConfig, callback) {\n\t            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n\t        }\n\t    };\n\t\n\t    var createViewModelKey = 'createViewModel';\n\t\n\t    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n\t    // into the standard component definition format:\n\t    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n\t    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n\t    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n\t    // so this is implemented manually below.\n\t    function resolveConfig(componentName, errorCallback, config, callback) {\n\t        var result = {},\n\t            makeCallBackWhenZero = 2,\n\t            tryIssueCallback = function() {\n\t                if (--makeCallBackWhenZero === 0) {\n\t                    callback(result);\n\t                }\n\t            },\n\t            templateConfig = config['template'],\n\t            viewModelConfig = config['viewModel'];\n\t\n\t        if (templateConfig) {\n\t            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n\t                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n\t                    result['template'] = resolvedTemplate;\n\t                    tryIssueCallback();\n\t                });\n\t            });\n\t        } else {\n\t            tryIssueCallback();\n\t        }\n\t\n\t        if (viewModelConfig) {\n\t            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n\t                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n\t                    result[createViewModelKey] = resolvedViewModel;\n\t                    tryIssueCallback();\n\t                });\n\t            });\n\t        } else {\n\t            tryIssueCallback();\n\t        }\n\t    }\n\t\n\t    function resolveTemplate(errorCallback, templateConfig, callback) {\n\t        if (typeof templateConfig === 'string') {\n\t            // Markup - parse it\n\t            callback(ko.utils.parseHtmlFragment(templateConfig));\n\t        } else if (templateConfig instanceof Array) {\n\t            // Assume already an array of DOM nodes - pass through unchanged\n\t            callback(templateConfig);\n\t        } else if (isDocumentFragment(templateConfig)) {\n\t            // Document fragment - use its child nodes\n\t            callback(ko.utils.makeArray(templateConfig.childNodes));\n\t        } else if (templateConfig['element']) {\n\t            var element = templateConfig['element'];\n\t            if (isDomElement(element)) {\n\t                // Element instance - copy its child nodes\n\t                callback(cloneNodesFromTemplateSourceElement(element));\n\t            } else if (typeof element === 'string') {\n\t                // Element ID - find it, then copy its child nodes\n\t                var elemInstance = document.getElementById(element);\n\t                if (elemInstance) {\n\t                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n\t                } else {\n\t                    errorCallback('Cannot find element with ID ' + element);\n\t                }\n\t            } else {\n\t                errorCallback('Unknown element type: ' + element);\n\t            }\n\t        } else {\n\t            errorCallback('Unknown template value: ' + templateConfig);\n\t        }\n\t    }\n\t\n\t    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n\t        if (typeof viewModelConfig === 'function') {\n\t            // Constructor - convert to standard factory function format\n\t            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n\t            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n\t            // be used in factory functions, not viewmodel constructors.\n\t            callback(function (params /*, componentInfo */) {\n\t                return new viewModelConfig(params);\n\t            });\n\t        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n\t            // Already a factory function - use it as-is\n\t            callback(viewModelConfig[createViewModelKey]);\n\t        } else if ('instance' in viewModelConfig) {\n\t            // Fixed object instance - promote to createViewModel format for API consistency\n\t            var fixedInstance = viewModelConfig['instance'];\n\t            callback(function (params, componentInfo) {\n\t                return fixedInstance;\n\t            });\n\t        } else if ('viewModel' in viewModelConfig) {\n\t            // Resolved AMD module whose value is of the form { viewModel: ... }\n\t            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n\t        } else {\n\t            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n\t        }\n\t    }\n\t\n\t    function cloneNodesFromTemplateSourceElement(elemInstance) {\n\t        switch (ko.utils.tagNameLower(elemInstance)) {\n\t            case 'script':\n\t                return ko.utils.parseHtmlFragment(elemInstance.text);\n\t            case 'textarea':\n\t                return ko.utils.parseHtmlFragment(elemInstance.value);\n\t            case 'template':\n\t                // For browsers with proper <template> element support (i.e., where the .content property\n\t                // gives a document fragment), use that document fragment.\n\t                if (isDocumentFragment(elemInstance.content)) {\n\t                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n\t                }\n\t        }\n\t\n\t        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n\t        // understand <template> and just treat it as a regular container\n\t        return ko.utils.cloneNodes(elemInstance.childNodes);\n\t    }\n\t\n\t    function isDomElement(obj) {\n\t        if (window['HTMLElement']) {\n\t            return obj instanceof HTMLElement;\n\t        } else {\n\t            return obj && obj.tagName && obj.nodeType === 1;\n\t        }\n\t    }\n\t\n\t    function isDocumentFragment(obj) {\n\t        if (window['DocumentFragment']) {\n\t            return obj instanceof DocumentFragment;\n\t        } else {\n\t            return obj && obj.nodeType === 11;\n\t        }\n\t    }\n\t\n\t    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n\t        if (typeof config['require'] === 'string') {\n\t            // The config is the value of an AMD module\n\t            if (amdRequire || window['require']) {\n\t                (amdRequire || window['require'])([config['require']], callback);\n\t            } else {\n\t                errorCallback('Uses require, but no AMD loader is present');\n\t            }\n\t        } else {\n\t            callback(config);\n\t        }\n\t    }\n\t\n\t    function makeErrorCallback(componentName) {\n\t        return function (message) {\n\t            throw new Error('Component \\'' + componentName + '\\': ' + message);\n\t        };\n\t    }\n\t\n\t    ko.exportSymbol('components.register', ko.components.register);\n\t    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n\t    ko.exportSymbol('components.unregister', ko.components.unregister);\n\t\n\t    // Expose the default loader so that developers can directly ask it for configuration\n\t    // or to resolve configuration\n\t    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\t\n\t    // By default, the default loader is the only registered component loader\n\t    ko.components['loaders'].push(ko.components.defaultLoader);\n\t\n\t    // Privately expose the underlying config registry for use in old-IE shim\n\t    ko.components._allRegisteredComponents = defaultConfigRegistry;\n\t})();\n\t(function (undefined) {\n\t    // Overridable API for determining which component name applies to a given node. By overriding this,\n\t    // you can for example map specific tagNames to components that are not preregistered.\n\t    ko.components['getComponentNameForNode'] = function(node) {\n\t        var tagNameLower = ko.utils.tagNameLower(node);\n\t        if (ko.components.isRegistered(tagNameLower)) {\n\t            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n\t            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\n\t                return tagNameLower;\n\t            }\n\t        }\n\t    };\n\t\n\t    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n\t        // Determine if it's really a custom element matching a component\n\t        if (node.nodeType === 1) {\n\t            var componentName = ko.components['getComponentNameForNode'](node);\n\t            if (componentName) {\n\t                // It does represent a component, so add a component binding for it\n\t                allBindings = allBindings || {};\n\t\n\t                if (allBindings['component']) {\n\t                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n\t                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n\t                }\n\t\n\t                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\t\n\t                allBindings['component'] = valueAccessors\n\t                    ? function() { return componentBindingValue; }\n\t                    : componentBindingValue;\n\t            }\n\t        }\n\t\n\t        return allBindings;\n\t    }\n\t\n\t    var nativeBindingProviderInstance = new ko.bindingProvider();\n\t\n\t    function getComponentParamsFromCustomElement(elem, bindingContext) {\n\t        var paramsAttribute = elem.getAttribute('params');\n\t\n\t        if (paramsAttribute) {\n\t            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n\t                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n\t                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n\t                }),\n\t                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n\t                    var paramValue = paramValueComputed.peek();\n\t                    // Does the evaluation of the parameter value unwrap any observables?\n\t                    if (!paramValueComputed.isActive()) {\n\t                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n\t                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n\t                        return paramValue;\n\t                    } else {\n\t                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n\t                        // level of observability, and any inner (resulting model value) level of observability.\n\t                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n\t                        // writable observable, the computed will also be writable and pass the value on to the observable.\n\t                        return ko.computed({\n\t                            'read': function() {\n\t                                return ko.utils.unwrapObservable(paramValueComputed());\n\t                            },\n\t                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n\t                                paramValueComputed()(value);\n\t                            },\n\t                            disposeWhenNodeIsRemoved: elem\n\t                        });\n\t                    }\n\t                });\n\t\n\t            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n\t            // This is in case the developer wants to react to outer (binding) observability separately from inner\n\t            // (model value) observability, or in case the model value observable has subobservables.\n\t            if (!result.hasOwnProperty('$raw')) {\n\t                result['$raw'] = rawParamComputedValues;\n\t            }\n\t\n\t            return result;\n\t        } else {\n\t            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n\t            // any empty one. Otherwise component viewmodels need special code to check whether or not\n\t            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n\t            return { '$raw': {} };\n\t        }\n\t    }\n\t\n\t    // --------------------------------------------------------------------------------\n\t    // Compatibility code for older (pre-HTML5) IE browsers\n\t\n\t    if (ko.utils.ieVersion < 9) {\n\t        // Whenever you preregister a component, enable it as a custom element in the current document\n\t        ko.components['register'] = (function(originalFunction) {\n\t            return function(componentName) {\n\t                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n\t                return originalFunction.apply(this, arguments);\n\t            }\n\t        })(ko.components['register']);\n\t\n\t        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n\t        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n\t        document.createDocumentFragment = (function(originalFunction) {\n\t            return function() {\n\t                var newDocFrag = originalFunction(),\n\t                    allComponents = ko.components._allRegisteredComponents;\n\t                for (var componentName in allComponents) {\n\t                    if (allComponents.hasOwnProperty(componentName)) {\n\t                        newDocFrag.createElement(componentName);\n\t                    }\n\t                }\n\t                return newDocFrag;\n\t            };\n\t        })(document.createDocumentFragment);\n\t    }\n\t})();(function(undefined) {\n\t\n\t    var componentLoadingOperationUniqueId = 0;\n\t\n\t    ko.bindingHandlers['component'] = {\n\t        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n\t            var currentViewModel,\n\t                currentLoadingOperationId,\n\t                disposeAssociatedComponentViewModel = function () {\n\t                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n\t                    if (typeof currentViewModelDispose === 'function') {\n\t                        currentViewModelDispose.call(currentViewModel);\n\t                    }\n\t                    currentViewModel = null;\n\t                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n\t                    currentLoadingOperationId = null;\n\t                },\n\t                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\t\n\t            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\t\n\t            ko.computed(function () {\n\t                var value = ko.utils.unwrapObservable(valueAccessor()),\n\t                    componentName, componentParams;\n\t\n\t                if (typeof value === 'string') {\n\t                    componentName = value;\n\t                } else {\n\t                    componentName = ko.utils.unwrapObservable(value['name']);\n\t                    componentParams = ko.utils.unwrapObservable(value['params']);\n\t                }\n\t\n\t                if (!componentName) {\n\t                    throw new Error('No component name specified');\n\t                }\n\t\n\t                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n\t                ko.components.get(componentName, function(componentDefinition) {\n\t                    // If this is not the current load operation for this element, ignore it.\n\t                    if (currentLoadingOperationId !== loadingOperationId) {\n\t                        return;\n\t                    }\n\t\n\t                    // Clean up previous state\n\t                    disposeAssociatedComponentViewModel();\n\t\n\t                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n\t                    if (!componentDefinition) {\n\t                        throw new Error('Unknown component \\'' + componentName + '\\'');\n\t                    }\n\t                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n\t                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n\t                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n\t                            ctx['$component'] = componentViewModel;\n\t                            ctx['$componentTemplateNodes'] = originalChildNodes;\n\t                        });\n\t                    currentViewModel = componentViewModel;\n\t                    ko.applyBindingsToDescendants(childBindingContext, element);\n\t                });\n\t            }, null, { disposeWhenNodeIsRemoved: element });\n\t\n\t            return { 'controlsDescendantBindings': true };\n\t        }\n\t    };\n\t\n\t    ko.virtualElements.allowedBindings['component'] = true;\n\t\n\t    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n\t        var template = componentDefinition['template'];\n\t        if (!template) {\n\t            throw new Error('Component \\'' + componentName + '\\' has no template');\n\t        }\n\t\n\t        var clonedNodesArray = ko.utils.cloneNodes(template);\n\t        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n\t    }\n\t\n\t    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n\t        var componentViewModelFactory = componentDefinition['createViewModel'];\n\t        return componentViewModelFactory\n\t            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n\t            : componentParams; // Template-only component\n\t    }\n\t\n\t})();\n\tvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\n\tko.bindingHandlers['attr'] = {\n\t    'update': function(element, valueAccessor, allBindings) {\n\t        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n\t        ko.utils.objectForEach(value, function(attrName, attrValue) {\n\t            attrValue = ko.utils.unwrapObservable(attrValue);\n\t\n\t            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n\t            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n\t            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n\t            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n\t            if (toRemove)\n\t                element.removeAttribute(attrName);\n\t\n\t            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\n\t            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n\t            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\n\t            // property for IE <= 8.\n\t            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\n\t                attrName = attrHtmlToJavascriptMap[attrName];\n\t                if (toRemove)\n\t                    element.removeAttribute(attrName);\n\t                else\n\t                    element[attrName] = attrValue;\n\t            } else if (!toRemove) {\n\t                element.setAttribute(attrName, attrValue.toString());\n\t            }\n\t\n\t            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n\t            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n\t            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n\t            // entirely, and there's no strong reason to allow for such casing in HTML.\n\t            if (attrName === \"name\") {\n\t                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\n\t            }\n\t        });\n\t    }\n\t};\n\t(function() {\n\t\n\tko.bindingHandlers['checked'] = {\n\t    'after': ['value', 'attr'],\n\t    'init': function (element, valueAccessor, allBindings) {\n\t        var checkedValue = ko.pureComputed(function() {\n\t            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n\t            if (allBindings['has']('checkedValue')) {\n\t                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n\t            } else if (allBindings['has']('value')) {\n\t                return ko.utils.unwrapObservable(allBindings.get('value'));\n\t            }\n\t\n\t            return element.value;\n\t        });\n\t\n\t        function updateModel() {\n\t            // This updates the model value from the view value.\n\t            // It runs in response to DOM events (click) and changes in checkedValue.\n\t            var isChecked = element.checked,\n\t                elemValue = useCheckedValue ? checkedValue() : isChecked;\n\t\n\t            // When we're first setting up this computed, don't change any model state.\n\t            if (ko.computedContext.isInitial()) {\n\t                return;\n\t            }\n\t\n\t            // We can ignore unchecked radio buttons, because some other radio\n\t            // button will be getting checked, and that one can take care of updating state.\n\t            if (isRadio && !isChecked) {\n\t                return;\n\t            }\n\t\n\t            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n\t            if (valueIsArray) {\n\t                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;\n\t                if (oldElemValue !== elemValue) {\n\t                    // When we're responding to the checkedValue changing, and the element is\n\t                    // currently checked, replace the old elem value with the new elem value\n\t                    // in the model array.\n\t                    if (isChecked) {\n\t                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\n\t                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, false);\n\t                    }\n\t\n\t                    oldElemValue = elemValue;\n\t                } else {\n\t                    // When we're responding to the user having checked/unchecked a checkbox,\n\t                    // add/remove the element value to the model array.\n\t                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\n\t                }\n\t                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\n\t                    modelValue(writableValue);\n\t                }\n\t            } else {\n\t                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n\t            }\n\t        };\n\t\n\t        function updateView() {\n\t            // This updates the view value from the model value.\n\t            // It runs in response to changes in the bound (checked) value.\n\t            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\t\n\t            if (valueIsArray) {\n\t                // When a checkbox is bound to an array, being checked represents its value being present in that array\n\t                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n\t            } else if (isCheckbox) {\n\t                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\n\t                element.checked = modelValue;\n\t            } else {\n\t                // For radio buttons, being checked means that the radio button's value corresponds to the model value\n\t                element.checked = (checkedValue() === modelValue);\n\t            }\n\t        };\n\t\n\t        var isCheckbox = element.type == \"checkbox\",\n\t            isRadio = element.type == \"radio\";\n\t\n\t        // Only bind to check boxes and radio buttons\n\t        if (!isCheckbox && !isRadio) {\n\t            return;\n\t        }\n\t\n\t        var rawValue = valueAccessor(),\n\t            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\n\t            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n\t            oldElemValue = valueIsArray ? checkedValue() : undefined,\n\t            useCheckedValue = isRadio || valueIsArray;\n\t\n\t        // IE 6 won't allow radio buttons to be selected unless they have a name\n\t        if (isRadio && !element.name)\n\t            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\t\n\t        // Set up two computeds to update the binding:\n\t\n\t        // The first responds to changes in the checkedValue value and to element clicks\n\t        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n\t        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\t\n\t        // The second responds to changes in the model value (the one associated with the checked binding)\n\t        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\t\n\t        rawValue = undefined;\n\t    }\n\t};\n\tko.expressionRewriting.twoWayBindings['checked'] = true;\n\t\n\tko.bindingHandlers['checkedValue'] = {\n\t    'update': function (element, valueAccessor) {\n\t        element.value = ko.utils.unwrapObservable(valueAccessor());\n\t    }\n\t};\n\t\n\t})();var classesWrittenByBindingKey = '__ko__cssValue';\n\tko.bindingHandlers['css'] = {\n\t    'update': function (element, valueAccessor) {\n\t        var value = ko.utils.unwrapObservable(valueAccessor());\n\t        if (value !== null && typeof value == \"object\") {\n\t            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n\t                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n\t                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n\t            });\n\t        } else {\n\t            value = ko.utils.stringTrim(String(value || '')); // Make sure we don't try to store or set a non-string value\n\t            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n\t            element[classesWrittenByBindingKey] = value;\n\t            ko.utils.toggleDomNodeCssClass(element, value, true);\n\t        }\n\t    }\n\t};\n\tko.bindingHandlers['enable'] = {\n\t    'update': function (element, valueAccessor) {\n\t        var value = ko.utils.unwrapObservable(valueAccessor());\n\t        if (value && element.disabled)\n\t            element.removeAttribute(\"disabled\");\n\t        else if ((!value) && (!element.disabled))\n\t            element.disabled = true;\n\t    }\n\t};\n\t\n\tko.bindingHandlers['disable'] = {\n\t    'update': function (element, valueAccessor) {\n\t        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n\t    }\n\t};\n\t// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n\t// e.g. click:handler instead of the usual full-length event:{click:handler}\n\tfunction makeEventHandlerShortcut(eventName) {\n\t    ko.bindingHandlers[eventName] = {\n\t        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t            var newValueAccessor = function () {\n\t                var result = {};\n\t                result[eventName] = valueAccessor();\n\t                return result;\n\t            };\n\t            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n\t        }\n\t    }\n\t}\n\t\n\tko.bindingHandlers['event'] = {\n\t    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t        var eventsToHandle = valueAccessor() || {};\n\t        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n\t            if (typeof eventName == \"string\") {\n\t                ko.utils.registerEventHandler(element, eventName, function (event) {\n\t                    var handlerReturnValue;\n\t                    var handlerFunction = valueAccessor()[eventName];\n\t                    if (!handlerFunction)\n\t                        return;\n\t\n\t                    try {\n\t                        // Take all the event args, and prefix with the viewmodel\n\t                        var argsForHandler = ko.utils.makeArray(arguments);\n\t                        viewModel = bindingContext['$data'];\n\t                        argsForHandler.unshift(viewModel);\n\t                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n\t                    } finally {\n\t                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n\t                            if (event.preventDefault)\n\t                                event.preventDefault();\n\t                            else\n\t                                event.returnValue = false;\n\t                        }\n\t                    }\n\t\n\t                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n\t                    if (!bubble) {\n\t                        event.cancelBubble = true;\n\t                        if (event.stopPropagation)\n\t                            event.stopPropagation();\n\t                    }\n\t                });\n\t            }\n\t        });\n\t    }\n\t};\n\t// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n\t// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\n\tko.bindingHandlers['foreach'] = {\n\t    makeTemplateValueAccessor: function(valueAccessor) {\n\t        return function() {\n\t            var modelValue = valueAccessor(),\n\t                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\t\n\t            // If unwrappedValue is the array, pass in the wrapped value on its own\n\t            // The value will be unwrapped and tracked within the template binding\n\t            // (See https://github.com/SteveSanderson/knockout/issues/523)\n\t            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n\t                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\t\n\t            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n\t            ko.utils.unwrapObservable(modelValue);\n\t            return {\n\t                'foreach': unwrappedValue['data'],\n\t                'as': unwrappedValue['as'],\n\t                'includeDestroyed': unwrappedValue['includeDestroyed'],\n\t                'afterAdd': unwrappedValue['afterAdd'],\n\t                'beforeRemove': unwrappedValue['beforeRemove'],\n\t                'afterRender': unwrappedValue['afterRender'],\n\t                'beforeMove': unwrappedValue['beforeMove'],\n\t                'afterMove': unwrappedValue['afterMove'],\n\t                'templateEngine': ko.nativeTemplateEngine.instance\n\t            };\n\t        };\n\t    },\n\t    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n\t    },\n\t    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n\t    }\n\t};\n\tko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\n\tko.virtualElements.allowedBindings['foreach'] = true;\n\tvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\n\tvar hasfocusLastValue = '__ko_hasfocusLastValue';\n\tko.bindingHandlers['hasfocus'] = {\n\t    'init': function(element, valueAccessor, allBindings) {\n\t        var handleElementFocusChange = function(isFocused) {\n\t            // Where possible, ignore which event was raised and determine focus state using activeElement,\n\t            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n\t            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n\t            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n\t            // from calling 'blur()' on the element when it loses focus.\n\t            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n\t            element[hasfocusUpdatingProperty] = true;\n\t            var ownerDoc = element.ownerDocument;\n\t            if (\"activeElement\" in ownerDoc) {\n\t                var active;\n\t                try {\n\t                    active = ownerDoc.activeElement;\n\t                } catch(e) {\n\t                    // IE9 throws if you access activeElement during page load (see issue #703)\n\t                    active = ownerDoc.body;\n\t                }\n\t                isFocused = (active === element);\n\t            }\n\t            var modelValue = valueAccessor();\n\t            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\t\n\t            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n\t            element[hasfocusLastValue] = isFocused;\n\t            element[hasfocusUpdatingProperty] = false;\n\t        };\n\t        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n\t        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\t\n\t        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n\t        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n\t        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n\t        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n\t    },\n\t    'update': function(element, valueAccessor) {\n\t        var value = !!ko.utils.unwrapObservable(valueAccessor());\n\t\n\t        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n\t            value ? element.focus() : element.blur();\n\t\n\t            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n\t            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n\t            // element was focused already.\n\t            if (!value && element[hasfocusLastValue]) {\n\t                element.ownerDocument.body.focus();\n\t            }\n\t\n\t            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n\t            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n\t        }\n\t    }\n\t};\n\tko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\t\n\tko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\n\tko.expressionRewriting.twoWayBindings['hasFocus'] = true;\n\tko.bindingHandlers['html'] = {\n\t    'init': function() {\n\t        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n\t        return { 'controlsDescendantBindings': true };\n\t    },\n\t    'update': function (element, valueAccessor) {\n\t        // setHtml will unwrap the value if needed\n\t        ko.utils.setHtml(element, valueAccessor());\n\t    }\n\t};\n\t// Makes a binding like with or if\n\tfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\n\t    ko.bindingHandlers[bindingKey] = {\n\t        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t            var didDisplayOnLastUpdate,\n\t                savedNodes;\n\t            ko.computed(function() {\n\t                var dataValue = ko.utils.unwrapObservable(valueAccessor()),\n\t                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\n\t                    isFirstRender = !savedNodes,\n\t                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\n\t\n\t                if (needsRefresh) {\n\t                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n\t                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\n\t                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n\t                    }\n\t\n\t                    if (shouldDisplay) {\n\t                        if (!isFirstRender) {\n\t                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n\t                        }\n\t                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, dataValue) : bindingContext, element);\n\t                    } else {\n\t                        ko.virtualElements.emptyNode(element);\n\t                    }\n\t\n\t                    didDisplayOnLastUpdate = shouldDisplay;\n\t                }\n\t            }, null, { disposeWhenNodeIsRemoved: element });\n\t            return { 'controlsDescendantBindings': true };\n\t        }\n\t    };\n\t    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n\t    ko.virtualElements.allowedBindings[bindingKey] = true;\n\t}\n\t\n\t// Construct the actual binding handlers\n\tmakeWithIfBinding('if');\n\tmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\n\tmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\n\t    function(bindingContext, dataValue) {\n\t        return bindingContext['createChildContext'](dataValue);\n\t    }\n\t);\n\tvar captionPlaceholder = {};\n\tko.bindingHandlers['options'] = {\n\t    'init': function(element) {\n\t        if (ko.utils.tagNameLower(element) !== \"select\")\n\t            throw new Error(\"options binding applies only to SELECT elements\");\n\t\n\t        // Remove all existing <option>s.\n\t        while (element.length > 0) {\n\t            element.remove(0);\n\t        }\n\t\n\t        // Ensures that the binding processor doesn't try to bind the options\n\t        return { 'controlsDescendantBindings': true };\n\t    },\n\t    'update': function (element, valueAccessor, allBindings) {\n\t        function selectedOptions() {\n\t            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n\t        }\n\t\n\t        var selectWasPreviouslyEmpty = element.length == 0,\n\t            multiple = element.multiple,\n\t            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n\t            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n\t            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n\t            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n\t            arrayToDomNodeChildrenOptions = {},\n\t            captionValue,\n\t            filteredArray,\n\t            previousSelectedValues = [];\n\t\n\t        if (!valueAllowUnset) {\n\t            if (multiple) {\n\t                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n\t            } else if (element.selectedIndex >= 0) {\n\t                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n\t            }\n\t        }\n\t\n\t        if (unwrappedArray) {\n\t            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n\t                unwrappedArray = [unwrappedArray];\n\t\n\t            // Filter out any entries marked as destroyed\n\t            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n\t                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n\t            });\n\t\n\t            // If caption is included, add it to the array\n\t            if (allBindings['has']('optionsCaption')) {\n\t                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n\t                // If caption value is null or undefined, don't show a caption\n\t                if (captionValue !== null && captionValue !== undefined) {\n\t                    filteredArray.unshift(captionPlaceholder);\n\t                }\n\t            }\n\t        } else {\n\t            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n\t        }\n\t\n\t        function applyToObject(object, predicate, defaultValue) {\n\t            var predicateType = typeof predicate;\n\t            if (predicateType == \"function\")    // Given a function; run it against the data value\n\t                return predicate(object);\n\t            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n\t                return object[predicate];\n\t            else                                // Given no optionsText arg; use the data value itself\n\t                return defaultValue;\n\t        }\n\t\n\t        // The following functions can run at two different times:\n\t        // The first is when the whole array is being updated directly from this binding handler.\n\t        // The second is when an observable value for a specific array entry is updated.\n\t        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n\t        var itemUpdate = false;\n\t        function optionForArrayItem(arrayEntry, index, oldOptions) {\n\t            if (oldOptions.length) {\n\t                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n\t                itemUpdate = true;\n\t            }\n\t            var option = element.ownerDocument.createElement(\"option\");\n\t            if (arrayEntry === captionPlaceholder) {\n\t                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n\t                ko.selectExtensions.writeValue(option, undefined);\n\t            } else {\n\t                // Apply a value to the option element\n\t                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n\t                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\t\n\t                // Apply some text to the option element\n\t                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n\t                ko.utils.setTextContent(option, optionText);\n\t            }\n\t            return [option];\n\t        }\n\t\n\t        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n\t        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n\t        arrayToDomNodeChildrenOptions['beforeRemove'] =\n\t            function (option) {\n\t                element.removeChild(option);\n\t            };\n\t\n\t        function setSelectionCallback(arrayEntry, newOptions) {\n\t            if (itemUpdate && valueAllowUnset) {\n\t                // The model value is authoritative, so make sure its value is the one selected\n\t                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\n\t                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n\t            } else if (previousSelectedValues.length) {\n\t                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n\t                // That's why we first added them without selection. Now it's time to set the selection.\n\t                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n\t                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\t\n\t                // If this option was changed from being selected during a single-item update, notify the change\n\t                if (itemUpdate && !isSelected) {\n\t                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n\t                }\n\t            }\n\t        }\n\t\n\t        var callback = setSelectionCallback;\n\t        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n\t            callback = function(arrayEntry, newOptions) {\n\t                setSelectionCallback(arrayEntry, newOptions);\n\t                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n\t            }\n\t        }\n\t\n\t        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\t\n\t        ko.dependencyDetection.ignore(function () {\n\t            if (valueAllowUnset) {\n\t                // The model value is authoritative, so make sure its value is the one selected\n\t                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n\t            } else {\n\t                // Determine if the selection has changed as a result of updating the options list\n\t                var selectionChanged;\n\t                if (multiple) {\n\t                    // For a multiple-select box, compare the new selection count to the previous one\n\t                    // But if nothing was selected before, the selection can't have changed\n\t                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n\t                } else {\n\t                    // For a single-select box, compare the current value to the previous value\n\t                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\n\t                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n\t                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n\t                        : (previousSelectedValues.length || element.selectedIndex >= 0);\n\t                }\n\t\n\t                // Ensure consistency between model value and selected option.\n\t                // If the dropdown was changed so that selection is no longer the same,\n\t                // notify the value or selectedOptions binding.\n\t                if (selectionChanged) {\n\t                    ko.utils.triggerEvent(element, \"change\");\n\t                }\n\t            }\n\t        });\n\t\n\t        // Workaround for IE bug\n\t        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\t\n\t        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n\t            element.scrollTop = previousScrollTop;\n\t    }\n\t};\n\tko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\n\tko.bindingHandlers['selectedOptions'] = {\n\t    'after': ['options', 'foreach'],\n\t    'init': function (element, valueAccessor, allBindings) {\n\t        ko.utils.registerEventHandler(element, \"change\", function () {\n\t            var value = valueAccessor(), valueToWrite = [];\n\t            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n\t                if (node.selected)\n\t                    valueToWrite.push(ko.selectExtensions.readValue(node));\n\t            });\n\t            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n\t        });\n\t    },\n\t    'update': function (element, valueAccessor) {\n\t        if (ko.utils.tagNameLower(element) != \"select\")\n\t            throw new Error(\"values binding applies only to SELECT elements\");\n\t\n\t        var newValue = ko.utils.unwrapObservable(valueAccessor()),\n\t            previousScrollTop = element.scrollTop;\n\t\n\t        if (newValue && typeof newValue.length == \"number\") {\n\t            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n\t                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n\t                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\n\t                    ko.utils.setOptionNodeSelectionState(node, isSelected);\n\t                }\n\t            });\n\t        }\n\t\n\t        element.scrollTop = previousScrollTop;\n\t    }\n\t};\n\tko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\n\tko.bindingHandlers['style'] = {\n\t    'update': function (element, valueAccessor) {\n\t        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n\t        ko.utils.objectForEach(value, function(styleName, styleValue) {\n\t            styleValue = ko.utils.unwrapObservable(styleValue);\n\t\n\t            if (styleValue === null || styleValue === undefined || styleValue === false) {\n\t                // Empty string removes the value, whereas null/undefined have no effect\n\t                styleValue = \"\";\n\t            }\n\t\n\t            element.style[styleName] = styleValue;\n\t        });\n\t    }\n\t};\n\tko.bindingHandlers['submit'] = {\n\t    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t        if (typeof valueAccessor() != \"function\")\n\t            throw new Error(\"The value for a submit binding must be a function\");\n\t        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n\t            var handlerReturnValue;\n\t            var value = valueAccessor();\n\t            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n\t            finally {\n\t                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n\t                    if (event.preventDefault)\n\t                        event.preventDefault();\n\t                    else\n\t                        event.returnValue = false;\n\t                }\n\t            }\n\t        });\n\t    }\n\t};\n\tko.bindingHandlers['text'] = {\n\t    'init': function() {\n\t        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n\t        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n\t        return { 'controlsDescendantBindings': true };\n\t    },\n\t    'update': function (element, valueAccessor) {\n\t        ko.utils.setTextContent(element, valueAccessor());\n\t    }\n\t};\n\tko.virtualElements.allowedBindings['text'] = true;\n\t(function () {\n\t\n\tif (window && window.navigator) {\n\t    var parseVersion = function (matches) {\n\t        if (matches) {\n\t            return parseFloat(matches[1]);\n\t        }\n\t    };\n\t\n\t    // Detect various browser versions because some old versions don't fully support the 'input' event\n\t    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\n\t        userAgent = window.navigator.userAgent,\n\t        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\n\t        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\n\t}\n\t\n\t// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n\t// But it does fire the 'selectionchange' event on many of those, presumably because the\n\t// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n\t// fired at the document level only and doesn't directly indicate which element changed. We\n\t// set up just one event handler for the document and use 'activeElement' to determine which\n\t// element was changed.\n\tif (ko.utils.ieVersion < 10) {\n\t    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n\t        selectionChangeHandlerName = ko.utils.domData.nextKey();\n\t    var selectionChangeHandler = function(event) {\n\t        var target = this.activeElement,\n\t            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n\t        if (handler) {\n\t            handler(event);\n\t        }\n\t    };\n\t    var registerForSelectionChangeEvent = function (element, handler) {\n\t        var ownerDoc = element.ownerDocument;\n\t        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n\t            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n\t            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n\t        }\n\t        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n\t    };\n\t}\n\t\n\tko.bindingHandlers['textInput'] = {\n\t    'init': function (element, valueAccessor, allBindings) {\n\t\n\t        var previousElementValue = element.value,\n\t            timeoutHandle,\n\t            elementValueBeforeEvent;\n\t\n\t        var updateModel = function (event) {\n\t            clearTimeout(timeoutHandle);\n\t            elementValueBeforeEvent = timeoutHandle = undefined;\n\t\n\t            var elementValue = element.value;\n\t            if (previousElementValue !== elementValue) {\n\t                // Provide a way for tests to know exactly which event was processed\n\t                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n\t                previousElementValue = elementValue;\n\t                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n\t            }\n\t        };\n\t\n\t        var deferUpdateModel = function (event) {\n\t            if (!timeoutHandle) {\n\t                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n\t                // event firing and the updateModel function running. This allows us to ignore model\n\t                // updates that are from the previous state of the element, usually due to techniques\n\t                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n\t                elementValueBeforeEvent = element.value;\n\t                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n\t                timeoutHandle = ko.utils.setTimeout(handler, 4);\n\t            }\n\t        };\n\t\n\t        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\n\t        // so we'll make sure all updates are asynchronous\n\t        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel;\n\t\n\t        var updateView = function () {\n\t            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\t\n\t            if (modelValue === null || modelValue === undefined) {\n\t                modelValue = '';\n\t            }\n\t\n\t            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n\t                ko.utils.setTimeout(updateView, 4);\n\t                return;\n\t            }\n\t\n\t            // Update the element only if the element and model are different. On some browsers, updating the value\n\t            // will move the cursor to the end of the input, which would be bad while the user is typing.\n\t            if (element.value !== modelValue) {\n\t                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\n\t                element.value = modelValue;\n\t            }\n\t        };\n\t\n\t        var onEvent = function (event, handler) {\n\t            ko.utils.registerEventHandler(element, event, handler);\n\t        };\n\t\n\t        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n\t            // Provide a way for tests to specify exactly which events are bound\n\t            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n\t                if (eventName.slice(0,5) == 'after') {\n\t                    onEvent(eventName.slice(5), deferUpdateModel);\n\t                } else {\n\t                    onEvent(eventName, updateModel);\n\t                }\n\t            });\n\t        } else {\n\t            if (ko.utils.ieVersion < 10) {\n\t                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n\t                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n\t                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\n\t                // when using autocomplete, we'll use 'propertychange' for it also.\n\t                onEvent('propertychange', function(event) {\n\t                    if (event.propertyName === 'value') {\n\t                        ieUpdateModel(event);\n\t                    }\n\t                });\n\t\n\t                if (ko.utils.ieVersion == 8) {\n\t                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n\t                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n\t                    // events too.\n\t                    onEvent('keyup', updateModel);      // A single keystoke\n\t                    onEvent('keydown', updateModel);    // The first character when a key is held down\n\t                }\n\t                if (ko.utils.ieVersion >= 8) {\n\t                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n\t                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n\t                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n\t                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n\t                    // These are also needed in IE8 because of the bug described above.\n\t                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n\t                    onEvent('dragend', deferUpdateModel);\n\t                }\n\t            } else {\n\t                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n\t                // through the user interface.\n\t                onEvent('input', updateModel);\n\t\n\t                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n\t                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n\t                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n\t                    onEvent('keydown', deferUpdateModel);\n\t                    onEvent('paste', deferUpdateModel);\n\t                    onEvent('cut', deferUpdateModel);\n\t                } else if (operaVersion < 11) {\n\t                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n\t                    // We can try to catch some of those using 'keydown'.\n\t                    onEvent('keydown', deferUpdateModel);\n\t                } else if (firefoxVersion < 4.0) {\n\t                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n\t                    onEvent('DOMAutoComplete', updateModel);\n\t\n\t                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n\t                    onEvent('dragdrop', updateModel);       // <3.5\n\t                    onEvent('drop', updateModel);           // 3.5\n\t                }\n\t            }\n\t        }\n\t\n\t        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n\t        onEvent('change', updateModel);\n\t\n\t        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\t    }\n\t};\n\tko.expressionRewriting.twoWayBindings['textInput'] = true;\n\t\n\t// textinput is an alias for textInput\n\tko.bindingHandlers['textinput'] = {\n\t    // preprocess is the only way to set up a full alias\n\t    'preprocess': function (value, name, addBinding) {\n\t        addBinding('textInput', value);\n\t    }\n\t};\n\t\n\t})();ko.bindingHandlers['uniqueName'] = {\n\t    'init': function (element, valueAccessor) {\n\t        if (valueAccessor()) {\n\t            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n\t            ko.utils.setElementName(element, name);\n\t        }\n\t    }\n\t};\n\tko.bindingHandlers['uniqueName'].currentIndex = 0;\n\tko.bindingHandlers['value'] = {\n\t    'after': ['options', 'foreach'],\n\t    'init': function (element, valueAccessor, allBindings) {\n\t        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n\t        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n\t            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n\t            return;\n\t        }\n\t\n\t        // Always catch \"change\" event; possibly other events too if asked\n\t        var eventsToCatch = [\"change\"];\n\t        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n\t        var propertyChangedFired = false;\n\t        var elementValueBeforeEvent = null;\n\t\n\t        if (requestedEventsToCatch) {\n\t            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\n\t                requestedEventsToCatch = [requestedEventsToCatch];\n\t            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\n\t            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\n\t        }\n\t\n\t        var valueUpdateHandler = function() {\n\t            elementValueBeforeEvent = null;\n\t            propertyChangedFired = false;\n\t            var modelValue = valueAccessor();\n\t            var elementValue = ko.selectExtensions.readValue(element);\n\t            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n\t        }\n\t\n\t        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n\t        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n\t        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\n\t                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n\t        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n\t            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n\t            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n\t            ko.utils.registerEventHandler(element, \"blur\", function() {\n\t                if (propertyChangedFired) {\n\t                    valueUpdateHandler();\n\t                }\n\t            });\n\t        }\n\t\n\t        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n\t            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n\t            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n\t            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n\t            var handler = valueUpdateHandler;\n\t            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n\t                handler = function() {\n\t                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n\t                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n\t                    // at the earliest asynchronous opportunity. We store this temporary information so that\n\t                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n\t                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n\t                    // techniques like rateLimit can trigger model changes at critical moments that will\n\t                    // override the user's inputs, causing keystrokes to be lost.\n\t                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n\t                    ko.utils.setTimeout(valueUpdateHandler, 0);\n\t                };\n\t                eventName = eventName.substring(\"after\".length);\n\t            }\n\t            ko.utils.registerEventHandler(element, eventName, handler);\n\t        });\n\t\n\t        var updateFromModel = function () {\n\t            var newValue = ko.utils.unwrapObservable(valueAccessor());\n\t            var elementValue = ko.selectExtensions.readValue(element);\n\t\n\t            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n\t                ko.utils.setTimeout(updateFromModel, 0);\n\t                return;\n\t            }\n\t\n\t            var valueHasChanged = (newValue !== elementValue);\n\t\n\t            if (valueHasChanged) {\n\t                if (ko.utils.tagNameLower(element) === \"select\") {\n\t                    var allowUnset = allBindings.get('valueAllowUnset');\n\t                    var applyValueAction = function () {\n\t                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n\t                    };\n\t                    applyValueAction();\n\t\n\t                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n\t                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n\t                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n\t                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n\t                    } else {\n\t                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n\t                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n\t                        // to apply the value as well.\n\t                        ko.utils.setTimeout(applyValueAction, 0);\n\t                    }\n\t                } else {\n\t                    ko.selectExtensions.writeValue(element, newValue);\n\t                }\n\t            }\n\t        };\n\t\n\t        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n\t    },\n\t    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n\t};\n\tko.expressionRewriting.twoWayBindings['value'] = true;\n\tko.bindingHandlers['visible'] = {\n\t    'update': function (element, valueAccessor) {\n\t        var value = ko.utils.unwrapObservable(valueAccessor());\n\t        var isCurrentlyVisible = !(element.style.display == \"none\");\n\t        if (value && !isCurrentlyVisible)\n\t            element.style.display = \"\";\n\t        else if ((!value) && isCurrentlyVisible)\n\t            element.style.display = \"none\";\n\t    }\n\t};\n\t// 'click' is just a shorthand for the usual full-length event:{click:handler}\n\tmakeEventHandlerShortcut('click');\n\t// If you want to make a custom template engine,\n\t//\n\t// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n\t// [2] Override 'renderTemplateSource', supplying a function with this signature:\n\t//\n\t//        function (templateSource, bindingContext, options) {\n\t//            // - templateSource.text() is the text of the template you should render\n\t//            // - bindingContext.$data is the data you should pass into the template\n\t//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n\t//            //     and bindingContext.$root available in the template too\n\t//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n\t//            // - templateDocument is the document object of the template\n\t//            //\n\t//            // Return value: an array of DOM nodes\n\t//        }\n\t//\n\t// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n\t//\n\t//        function (script) {\n\t//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n\t//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n\t//        }\n\t//\n\t//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n\t//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n\t//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\t\n\tko.templateEngine = function () { };\n\t\n\tko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n\t    throw new Error(\"Override renderTemplateSource\");\n\t};\n\t\n\tko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n\t    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n\t};\n\t\n\tko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n\t    // Named template\n\t    if (typeof template == \"string\") {\n\t        templateDocument = templateDocument || document;\n\t        var elem = templateDocument.getElementById(template);\n\t        if (!elem)\n\t            throw new Error(\"Cannot find template with ID \" + template);\n\t        return new ko.templateSources.domElement(elem);\n\t    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n\t        // Anonymous template\n\t        return new ko.templateSources.anonymousTemplate(template);\n\t    } else\n\t        throw new Error(\"Unknown template type: \" + template);\n\t};\n\t\n\tko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n\t    var templateSource = this['makeTemplateSource'](template, templateDocument);\n\t    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n\t};\n\t\n\tko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n\t    // Skip rewriting if requested\n\t    if (this['allowTemplateRewriting'] === false)\n\t        return true;\n\t    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n\t};\n\t\n\tko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n\t    var templateSource = this['makeTemplateSource'](template, templateDocument);\n\t    var rewritten = rewriterCallback(templateSource['text']());\n\t    templateSource['text'](rewritten);\n\t    templateSource['data'](\"isRewritten\", true);\n\t};\n\t\n\tko.exportSymbol('templateEngine', ko.templateEngine);\n\t\n\tko.templateRewriting = (function () {\n\t    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n\t    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\t\n\t    function validateDataBindValuesForRewriting(keyValueArray) {\n\t        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n\t        for (var i = 0; i < keyValueArray.length; i++) {\n\t            var key = keyValueArray[i]['key'];\n\t            if (allValidators.hasOwnProperty(key)) {\n\t                var validator = allValidators[key];\n\t\n\t                if (typeof validator === \"function\") {\n\t                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n\t                    if (possibleErrorMessage)\n\t                        throw new Error(possibleErrorMessage);\n\t                } else if (!validator) {\n\t                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n\t        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n\t        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n\t        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\t\n\t        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n\t        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n\t        // extra indirection.\n\t        var applyBindingsToNextSiblingScript =\n\t            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n\t        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n\t    }\n\t\n\t    return {\n\t        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n\t            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n\t                templateEngine['rewriteTemplate'](template, function (htmlString) {\n\t                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n\t                }, templateDocument);\n\t        },\n\t\n\t        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n\t            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n\t                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n\t            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n\t                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n\t            });\n\t        },\n\t\n\t        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n\t            return ko.memoization.memoize(function (domNode, bindingContext) {\n\t                var nodeToBind = domNode.nextSibling;\n\t                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n\t                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n\t                }\n\t            });\n\t        }\n\t    }\n\t})();\n\t\n\t\n\t// Exported only because it has to be referenced by string lookup from within rewritten template\n\tko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n\t(function() {\n\t    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n\t    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n\t    //\n\t    // Two are provided by default:\n\t    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n\t    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n\t    //                                           without reading/writing the actual element text content, since it will be overwritten\n\t    //                                           with the rendered template output.\n\t    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n\t    // Template sources need to have the following functions:\n\t    //   text() \t\t\t- returns the template text from your storage location\n\t    //   text(value)\t\t- writes the supplied template text to your storage location\n\t    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\n\t    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n\t    //\n\t    // Optionally, template sources can also have the following functions:\n\t    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n\t    //   nodes(value)       - writes the given DOM element to your storage location\n\t    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n\t    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n\t    //\n\t    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n\t    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\t\n\t    ko.templateSources = {};\n\t\n\t    // ---- ko.templateSources.domElement -----\n\t\n\t    // template types\n\t    var templateScript = 1,\n\t        templateTextArea = 2,\n\t        templateTemplate = 3,\n\t        templateElement = 4;\n\t\n\t    ko.templateSources.domElement = function(element) {\n\t        this.domElement = element;\n\t\n\t        if (element) {\n\t            var tagNameLower = ko.utils.tagNameLower(element);\n\t            this.templateType =\n\t                tagNameLower === \"script\" ? templateScript :\n\t                tagNameLower === \"textarea\" ? templateTextArea :\n\t                    // For browsers with proper <template> element support, where the .content property gives a document fragment\n\t                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\n\t                templateElement;\n\t        }\n\t    }\n\t\n\t    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n\t        var elemContentsProperty = this.templateType === templateScript ? \"text\"\n\t                                 : this.templateType === templateTextArea ? \"value\"\n\t                                 : \"innerHTML\";\n\t\n\t        if (arguments.length == 0) {\n\t            return this.domElement[elemContentsProperty];\n\t        } else {\n\t            var valueToWrite = arguments[0];\n\t            if (elemContentsProperty === \"innerHTML\")\n\t                ko.utils.setHtml(this.domElement, valueToWrite);\n\t            else\n\t                this.domElement[elemContentsProperty] = valueToWrite;\n\t        }\n\t    };\n\t\n\t    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n\t    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n\t        if (arguments.length === 1) {\n\t            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n\t        } else {\n\t            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n\t        }\n\t    };\n\t\n\t    var templatesDomDataKey = ko.utils.domData.nextKey();\n\t    function getTemplateDomData(element) {\n\t        return ko.utils.domData.get(element, templatesDomDataKey) || {};\n\t    }\n\t    function setTemplateDomData(element, data) {\n\t        ko.utils.domData.set(element, templatesDomDataKey, data);\n\t    }\n\t\n\t    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n\t        var element = this.domElement;\n\t        if (arguments.length == 0) {\n\t            var templateData = getTemplateDomData(element),\n\t                containerData = templateData.containerData;\n\t            return containerData || (\n\t                this.templateType === templateTemplate ? element.content :\n\t                this.templateType === templateElement ? element :\n\t                undefined);\n\t        } else {\n\t            var valueToWrite = arguments[0];\n\t            setTemplateDomData(element, {containerData: valueToWrite});\n\t        }\n\t    };\n\t\n\t    // ---- ko.templateSources.anonymousTemplate -----\n\t    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n\t    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n\t    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\t\n\t    ko.templateSources.anonymousTemplate = function(element) {\n\t        this.domElement = element;\n\t    }\n\t    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n\t    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n\t    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n\t        if (arguments.length == 0) {\n\t            var templateData = getTemplateDomData(this.domElement);\n\t            if (templateData.textData === undefined && templateData.containerData)\n\t                templateData.textData = templateData.containerData.innerHTML;\n\t            return templateData.textData;\n\t        } else {\n\t            var valueToWrite = arguments[0];\n\t            setTemplateDomData(this.domElement, {textData: valueToWrite});\n\t        }\n\t    };\n\t\n\t    ko.exportSymbol('templateSources', ko.templateSources);\n\t    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n\t    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n\t})();\n\t(function () {\n\t    var _templateEngine;\n\t    ko.setTemplateEngine = function (templateEngine) {\n\t        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n\t            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n\t        _templateEngine = templateEngine;\n\t    }\n\t\n\t    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n\t        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n\t        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n\t            nextInQueue = ko.virtualElements.nextSibling(node);\n\t            action(node, nextInQueue);\n\t        }\n\t    }\n\t\n\t    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n\t        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n\t        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n\t        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n\t        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n\t        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\t\n\t        if (continuousNodeArray.length) {\n\t            var firstNode = continuousNodeArray[0],\n\t                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n\t                parentNode = firstNode.parentNode,\n\t                provider = ko.bindingProvider['instance'],\n\t                preprocessNode = provider['preprocessNode'];\n\t\n\t            if (preprocessNode) {\n\t                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n\t                    var nodePreviousSibling = node.previousSibling;\n\t                    var newNodes = preprocessNode.call(provider, node);\n\t                    if (newNodes) {\n\t                        if (node === firstNode)\n\t                            firstNode = newNodes[0] || nextNodeInRange;\n\t                        if (node === lastNode)\n\t                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n\t                    }\n\t                });\n\t\n\t                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n\t                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n\t                // first node needs to be in the array).\n\t                continuousNodeArray.length = 0;\n\t                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n\t                    return;\n\t                }\n\t                if (firstNode === lastNode) {\n\t                    continuousNodeArray.push(firstNode);\n\t                } else {\n\t                    continuousNodeArray.push(firstNode, lastNode);\n\t                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n\t                }\n\t            }\n\t\n\t            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n\t            // whereas a regular applyBindings won't introduce new memoized nodes\n\t            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n\t                if (node.nodeType === 1 || node.nodeType === 8)\n\t                    ko.applyBindings(bindingContext, node);\n\t            });\n\t            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n\t                if (node.nodeType === 1 || node.nodeType === 8)\n\t                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n\t            });\n\t\n\t            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n\t            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n\t        }\n\t    }\n\t\n\t    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n\t        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n\t                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n\t                                        : null;\n\t    }\n\t\n\t    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n\t        options = options || {};\n\t        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\t        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n\t        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n\t        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n\t        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\t\n\t        // Loosely check result is an array of DOM nodes\n\t        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n\t            throw new Error(\"Template engine must return an array of DOM nodes\");\n\t\n\t        var haveAddedNodesToParent = false;\n\t        switch (renderMode) {\n\t            case \"replaceChildren\":\n\t                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n\t                haveAddedNodesToParent = true;\n\t                break;\n\t            case \"replaceNode\":\n\t                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n\t                haveAddedNodesToParent = true;\n\t                break;\n\t            case \"ignoreTargetNode\": break;\n\t            default:\n\t                throw new Error(\"Unknown renderMode: \" + renderMode);\n\t        }\n\t\n\t        if (haveAddedNodesToParent) {\n\t            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n\t            if (options['afterRender'])\n\t                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\n\t        }\n\t\n\t        return renderedNodesArray;\n\t    }\n\t\n\t    function resolveTemplateName(template, data, context) {\n\t        // The template can be specified as:\n\t        if (ko.isObservable(template)) {\n\t            // 1. An observable, with string value\n\t            return template();\n\t        } else if (typeof template === 'function') {\n\t            // 2. A function of (data, context) returning a string\n\t            return template(data, context);\n\t        } else {\n\t            // 3. A string\n\t            return template;\n\t        }\n\t    }\n\t\n\t    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n\t        options = options || {};\n\t        if ((options['templateEngine'] || _templateEngine) == undefined)\n\t            throw new Error(\"Set a template engine before calling renderTemplate\");\n\t        renderMode = renderMode || \"replaceChildren\";\n\t\n\t        if (targetNodeOrNodeArray) {\n\t            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\t\n\t            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n\t            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\t\n\t            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n\t                function () {\n\t                    // Ensure we've got a proper binding context to work with\n\t                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n\t                        ? dataOrBindingContext\n\t                        : new ko.bindingContext(ko.utils.unwrapObservable(dataOrBindingContext));\n\t\n\t                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n\t                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\t\n\t                    if (renderMode == \"replaceNode\") {\n\t                        targetNodeOrNodeArray = renderedNodesArray;\n\t                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\t                    }\n\t                },\n\t                null,\n\t                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n\t            );\n\t        } else {\n\t            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n\t            return ko.memoization.memoize(function (domNode) {\n\t                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n\t            });\n\t        }\n\t    };\n\t\n\t    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n\t        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n\t        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n\t        var arrayItemContext;\n\t\n\t        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n\t        var executeTemplateForArrayItem = function (arrayValue, index) {\n\t            // Support selecting template as a function of the data being rendered\n\t            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\n\t                context['$index'] = index;\n\t            });\n\t\n\t            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n\t            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n\t        }\n\t\n\t        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n\t        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n\t            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n\t            if (options['afterRender'])\n\t                options['afterRender'](addedNodesArray, arrayValue);\n\t\n\t            // release the \"cache\" variable, so that it can be collected by\n\t            // the GC when its value isn't used from within the bindings anymore.\n\t            arrayItemContext = null;\n\t        };\n\t\n\t        return ko.dependentObservable(function () {\n\t            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n\t            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n\t                unwrappedArray = [unwrappedArray];\n\t\n\t            // Filter out any entries marked as destroyed\n\t            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n\t                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n\t            });\n\t\n\t            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n\t            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n\t            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\n\t\n\t        }, null, { disposeWhenNodeIsRemoved: targetNode });\n\t    };\n\t\n\t    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n\t    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n\t        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n\t        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n\t            oldComputed.dispose();\n\t        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\n\t    }\n\t\n\t    ko.bindingHandlers['template'] = {\n\t        'init': function(element, valueAccessor) {\n\t            // Support anonymous templates\n\t            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n\t            if (typeof bindingValue == \"string\" || bindingValue['name']) {\n\t                // It's a named template - clear the element\n\t                ko.virtualElements.emptyNode(element);\n\t            } else if ('nodes' in bindingValue) {\n\t                // We've been given an array of DOM nodes. Save them as the template source.\n\t                // There is no known use case for the node array being an observable array (if the output\n\t                // varies, put that behavior *into* your template - that's what templates are for), and\n\t                // the implementation would be a mess, so assert that it's not observable.\n\t                var nodes = bindingValue['nodes'] || [];\n\t                if (ko.isObservable(nodes)) {\n\t                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n\t                }\n\t                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\n\t                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n\t            } else {\n\t                // It's an anonymous template - store the element contents, then clear the element\n\t                var templateNodes = ko.virtualElements.childNodes(element),\n\t                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n\t                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n\t            }\n\t            return { 'controlsDescendantBindings': true };\n\t        },\n\t        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t            var value = valueAccessor(),\n\t                dataValue,\n\t                options = ko.utils.unwrapObservable(value),\n\t                shouldDisplay = true,\n\t                templateComputed = null,\n\t                templateName;\n\t\n\t            if (typeof options == \"string\") {\n\t                templateName = value;\n\t                options = {};\n\t            } else {\n\t                templateName = options['name'];\n\t\n\t                // Support \"if\"/\"ifnot\" conditions\n\t                if ('if' in options)\n\t                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n\t                if (shouldDisplay && 'ifnot' in options)\n\t                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n\t\n\t                dataValue = ko.utils.unwrapObservable(options['data']);\n\t            }\n\t\n\t            if ('foreach' in options) {\n\t                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n\t                var dataArray = (shouldDisplay && options['foreach']) || [];\n\t                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\n\t            } else if (!shouldDisplay) {\n\t                ko.virtualElements.emptyNode(element);\n\t            } else {\n\t                // Render once for this single data point (or use the viewModel if no data was provided)\n\t                var innerBindingContext = ('data' in options) ?\n\t                    bindingContext['createChildContext'](dataValue, options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\n\t                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\n\t                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\n\t            }\n\t\n\t            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n\t            disposeOldComputedAndStoreNewOne(element, templateComputed);\n\t        }\n\t    };\n\t\n\t    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n\t    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n\t        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\t\n\t        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n\t            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\t\n\t        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n\t            return null; // Named templates can be rewritten, so return \"no error\"\n\t        return \"This template engine does not support anonymous templates nested within its templates\";\n\t    };\n\t\n\t    ko.virtualElements.allowedBindings['template'] = true;\n\t})();\n\t\n\tko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\n\tko.exportSymbol('renderTemplate', ko.renderTemplate);\n\t// Go through the items that have been added and deleted and try to find matches between them.\n\tko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n\t    if (left.length && right.length) {\n\t        var failedCompares, l, r, leftItem, rightItem;\n\t        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n\t            for (r = 0; rightItem = right[r]; ++r) {\n\t                if (leftItem['value'] === rightItem['value']) {\n\t                    leftItem['moved'] = rightItem['index'];\n\t                    rightItem['moved'] = leftItem['index'];\n\t                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n\t                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n\t                    break;\n\t                }\n\t            }\n\t            failedCompares += r;\n\t        }\n\t    }\n\t};\n\t\n\tko.utils.compareArrays = (function () {\n\t    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\t\n\t    // Simple calculation based on Levenshtein distance.\n\t    function compareArrays(oldArray, newArray, options) {\n\t        // For backward compatibility, if the third arg is actually a bool, interpret\n\t        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n\t        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n\t        oldArray = oldArray || [];\n\t        newArray = newArray || [];\n\t\n\t        if (oldArray.length < newArray.length)\n\t            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n\t        else\n\t            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n\t    }\n\t\n\t    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n\t        var myMin = Math.min,\n\t            myMax = Math.max,\n\t            editDistanceMatrix = [],\n\t            smlIndex, smlIndexMax = smlArray.length,\n\t            bigIndex, bigIndexMax = bigArray.length,\n\t            compareRange = (bigIndexMax - smlIndexMax) || 1,\n\t            maxDistance = smlIndexMax + bigIndexMax + 1,\n\t            thisRow, lastRow,\n\t            bigIndexMaxForRow, bigIndexMinForRow;\n\t\n\t        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n\t            lastRow = thisRow;\n\t            editDistanceMatrix.push(thisRow = []);\n\t            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n\t            bigIndexMinForRow = myMax(0, smlIndex - 1);\n\t            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n\t                if (!bigIndex)\n\t                    thisRow[bigIndex] = smlIndex + 1;\n\t                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n\t                    thisRow[bigIndex] = bigIndex + 1;\n\t                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n\t                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n\t                else {\n\t                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n\t                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n\t                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n\t                }\n\t            }\n\t        }\n\t\n\t        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n\t        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n\t            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n\t            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n\t                notInSml.push(editScript[editScript.length] = {     // added\n\t                    'status': statusNotInSml,\n\t                    'value': bigArray[--bigIndex],\n\t                    'index': bigIndex });\n\t            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n\t                notInBig.push(editScript[editScript.length] = {     // deleted\n\t                    'status': statusNotInBig,\n\t                    'value': smlArray[--smlIndex],\n\t                    'index': smlIndex });\n\t            } else {\n\t                --bigIndex;\n\t                --smlIndex;\n\t                if (!options['sparse']) {\n\t                    editScript.push({\n\t                        'status': \"retained\",\n\t                        'value': bigArray[bigIndex] });\n\t                }\n\t            }\n\t        }\n\t\n\t        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n\t        // smlIndexMax keeps the time complexity of this algorithm linear.\n\t        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\t\n\t        return editScript.reverse();\n\t    }\n\t\n\t    return compareArrays;\n\t})();\n\t\n\tko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n\t(function () {\n\t    // Objective:\n\t    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n\t    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n\t    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n\t    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n\t    //   previously mapped - retain those nodes, and just insert/delete other ones\n\t\n\t    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n\t    // You can use this, for example, to activate bindings on those nodes.\n\t\n\t    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n\t        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n\t        var mappedNodes = [];\n\t        var dependentObservable = ko.dependentObservable(function() {\n\t            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\t\n\t            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n\t            if (mappedNodes.length > 0) {\n\t                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n\t                if (callbackAfterAddingNodes)\n\t                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n\t            }\n\t\n\t            // Replace the contents of the mappedNodes array, thereby updating the record\n\t            // of which nodes would be deleted if valueToMap was itself later removed\n\t            mappedNodes.length = 0;\n\t            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n\t        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n\t        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n\t    }\n\t\n\t    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\n\t        deletedItemDummyValue = ko.utils.domData.nextKey();\n\t\n\t    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\n\t        // Compare the provided array against the previous one\n\t        array = array || [];\n\t        options = options || {};\n\t        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\n\t        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\n\t        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\n\t        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\n\t\n\t        // Build the new mapping result\n\t        var newMappingResult = [];\n\t        var lastMappingResultIndex = 0;\n\t        var newMappingResultIndex = 0;\n\t\n\t        var nodesToDelete = [];\n\t        var itemsToProcess = [];\n\t        var itemsForBeforeRemoveCallbacks = [];\n\t        var itemsForMoveCallbacks = [];\n\t        var itemsForAfterAddCallbacks = [];\n\t        var mapData;\n\t\n\t        function itemMovedOrRetained(editScriptIndex, oldPosition) {\n\t            mapData = lastMappingResult[oldPosition];\n\t            if (newMappingResultIndex !== oldPosition)\n\t                itemsForMoveCallbacks[editScriptIndex] = mapData;\n\t            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n\t            mapData.indexObservable(newMappingResultIndex++);\n\t            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n\t            newMappingResult.push(mapData);\n\t            itemsToProcess.push(mapData);\n\t        }\n\t\n\t        function callCallback(callback, items) {\n\t            if (callback) {\n\t                for (var i = 0, n = items.length; i < n; i++) {\n\t                    if (items[i]) {\n\t                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n\t                            callback(node, i, items[i].arrayEntry);\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\n\t            movedIndex = editScriptItem['moved'];\n\t            switch (editScriptItem['status']) {\n\t                case \"deleted\":\n\t                    if (movedIndex === undefined) {\n\t                        mapData = lastMappingResult[lastMappingResultIndex];\n\t\n\t                        // Stop tracking changes to the mapping for these nodes\n\t                        if (mapData.dependentObservable) {\n\t                            mapData.dependentObservable.dispose();\n\t                            mapData.dependentObservable = undefined;\n\t                        }\n\t\n\t                        // Queue these nodes for later removal\n\t                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n\t                            if (options['beforeRemove']) {\n\t                                newMappingResult.push(mapData);\n\t                                itemsToProcess.push(mapData);\n\t                                if (mapData.arrayEntry === deletedItemDummyValue) {\n\t                                    mapData = null;\n\t                                } else {\n\t                                    itemsForBeforeRemoveCallbacks[i] = mapData;\n\t                                }\n\t                            }\n\t                            if (mapData) {\n\t                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n\t                            }\n\t                        }\n\t                    }\n\t                    lastMappingResultIndex++;\n\t                    break;\n\t\n\t                case \"retained\":\n\t                    itemMovedOrRetained(i, lastMappingResultIndex++);\n\t                    break;\n\t\n\t                case \"added\":\n\t                    if (movedIndex !== undefined) {\n\t                        itemMovedOrRetained(i, movedIndex);\n\t                    } else {\n\t                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\n\t                        newMappingResult.push(mapData);\n\t                        itemsToProcess.push(mapData);\n\t                        if (!isFirstExecution)\n\t                            itemsForAfterAddCallbacks[i] = mapData;\n\t                    }\n\t                    break;\n\t            }\n\t        }\n\t\n\t        // Store a copy of the array items we just considered so we can difference it next time\n\t        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n\t\n\t        // Call beforeMove first before any changes have been made to the DOM\n\t        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\t\n\t        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n\t        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\t\n\t        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n\t        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\n\t            // Get nodes for newly added items\n\t            if (!mapData.mappedNodes)\n\t                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\t\n\t            // Put nodes in the right place if they aren't there already\n\t            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\n\t                if (node !== nextNode)\n\t                    ko.virtualElements.insertAfter(domNode, node, lastNode);\n\t            }\n\t\n\t            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n\t            if (!mapData.initialized && callbackAfterAddingNodes) {\n\t                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n\t                mapData.initialized = true;\n\t            }\n\t        }\n\t\n\t        // If there's a beforeRemove callback, call it after reordering.\n\t        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n\t        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n\t        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n\t        // Perhaps we'll make that change in the future if this scenario becomes more common.\n\t        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\t\n\t        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n\t        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n\t        // with an actual item in the array and appear as \"retained\" or \"moved\".\n\t        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\n\t            if (itemsForBeforeRemoveCallbacks[i]) {\n\t                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\n\t            }\n\t        }\n\t\n\t        // Finally call afterMove and afterAdd callbacks\n\t        callCallback(options['afterMove'], itemsForMoveCallbacks);\n\t        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n\t    }\n\t})();\n\t\n\tko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\n\tko.nativeTemplateEngine = function () {\n\t    this['allowTemplateRewriting'] = false;\n\t}\n\t\n\tko.nativeTemplateEngine.prototype = new ko.templateEngine();\n\tko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\n\tko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n\t    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n\t        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n\t        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\t\n\t    if (templateNodes) {\n\t        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n\t    } else {\n\t        var templateText = templateSource['text']();\n\t        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n\t    }\n\t};\n\t\n\tko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\n\tko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\t\n\tko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n\t(function() {\n\t    ko.jqueryTmplTemplateEngine = function () {\n\t        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n\t        // doesn't expose a version number, so we have to infer it.\n\t        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n\t        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n\t        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n\t            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n\t                return 0;\n\t            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n\t            try {\n\t                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n\t                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n\t                    return 2; // Final version of jquery.tmpl\n\t                }\n\t            } catch(ex) { /* Apparently not the version we were looking for */ }\n\t\n\t            return 1; // Any older version that we don't support\n\t        })();\n\t\n\t        function ensureHasReferencedJQueryTemplates() {\n\t            if (jQueryTmplVersion < 2)\n\t                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n\t        }\n\t\n\t        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n\t            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n\t        }\n\t\n\t        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n\t            templateDocument = templateDocument || document;\n\t            options = options || {};\n\t            ensureHasReferencedJQueryTemplates();\n\t\n\t            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n\t            var precompiled = templateSource['data']('precompiled');\n\t            if (!precompiled) {\n\t                var templateText = templateSource['text']() || \"\";\n\t                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n\t                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\t\n\t                precompiled = jQueryInstance['template'](null, templateText);\n\t                templateSource['data']('precompiled', precompiled);\n\t            }\n\t\n\t            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n\t            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\t\n\t            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n\t            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\t\n\t            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n\t            return resultNodes;\n\t        };\n\t\n\t        this['createJavaScriptEvaluatorBlock'] = function(script) {\n\t            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n\t        };\n\t\n\t        this['addTemplate'] = function(templateName, templateMarkup) {\n\t            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n\t        };\n\t\n\t        if (jQueryTmplVersion > 0) {\n\t            jQueryInstance['tmpl']['tag']['ko_code'] = {\n\t                open: \"__.push($1 || '');\"\n\t            };\n\t            jQueryInstance['tmpl']['tag']['ko_with'] = {\n\t                open: \"with($1) {\",\n\t                close: \"} \"\n\t            };\n\t        }\n\t    };\n\t\n\t    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n\t    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\t\n\t    // Use this one by default *only if jquery.tmpl is referenced*\n\t    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n\t    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n\t        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\t\n\t    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n\t})();\n\t}));\n\t}());\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t'use strict';\n\t\n\tvar _knockout = __webpack_require__(0);\n\t\n\tvar _knockout2 = _interopRequireDefault(_knockout);\n\t\n\t__webpack_require__(9);\n\t\n\tvar _fecha = __webpack_require__(7);\n\t\n\tvar _fecha2 = _interopRequireDefault(_fecha);\n\t\n\tvar _DateMonth = __webpack_require__(4);\n\t\n\tvar _DateMonth2 = _interopRequireDefault(_DateMonth);\n\t\n\tvar _DateMonth3 = __webpack_require__(8);\n\t\n\tvar _DateMonth4 = _interopRequireDefault(_DateMonth3);\n\t\n\t__webpack_require__(11);\n\t\n\t__webpack_require__(12);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_knockout2.default.punches.enableAll();\n\t\n\tmodule.exports = function (element) {\n\t  var name = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n\t  var date = arguments[2];\n\t\n\t\n\t  _knockout2.default.components.register('date-month', {\n\t    viewModel: _DateMonth2.default,\n\t    template: _DateMonth4.default\n\t  });\n\t\n\t  // Initialize store if date passed\n\t  var initial_date = new Date();\n\t  if (date) {\n\t    initial_date = _fecha2.default.parse(date, 'MMM YYYY');\n\t  }\n\t\n\t  var model = {\n\t    date: initial_date\n\t  };\n\t\n\t  _knockout2.default.applyBindings(model);\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _knockout = __webpack_require__(0);\n\t\n\tvar _lodash = __webpack_require__(10);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DateModel = function () {\n\t  function DateModel(params) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, DateModel);\n\t\n\t    var now = params ? params.date : new Date();\n\t    this.name = params ? params.name : '';\n\t    this.open = (0, _knockout.observable)(params ? params.open : false);\n\t    this.day = 1;\n\t    this.month = (0, _knockout.observable)(now.getMonth());\n\t    this.year = (0, _knockout.observable)(now.getFullYear());\n\t    this.undo = (0, _knockout.observable)(now);\n\t\n\t    this.date = (0, _knockout.computed)(function () {\n\t      return new Date(_this.year(), _this.month(), _this.day);\n\t    });\n\t    this.visible_months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // TODO consider limiting for this year.  Also I18N\n\t\n\t    this.visible_years = (0, _knockout.computed)(function () {\n\t      var now = new Date();\n\t      var end = _this.date().getFullYear() + (now.getFullYear() - _this.date().getFullYear()) % 10 + 1;\n\t      var start = end - 10;\n\t      return (0, _lodash2.default)(start, end);\n\t    });\n\t\n\t    this.month_year = (0, _knockout.computed)(function () {\n\t      return _this.visible_months[_this.month()] + ' ' + _this.year();\n\t    });\n\t    this.can_advance_year = (0, _knockout.computed)(function () {\n\t      var now = new Date();\n\t      return now.getFullYear() - _this.date().getFullYear() > 9;\n\t    });\n\t\n\t    this.open.subscribe(function (value) {\n\t      _this.undo(_this.date());\n\t    });\n\t  }\n\t\n\t  _createClass(DateModel, [{\n\t    key: 'cancel',\n\t    value: function cancel() {\n\t      var month = this.undo().getMonth();\n\t      var year = this.undo().getFullYear();\n\t      this.month(month);\n\t      this.year(year);\n\t      this.open(false);\n\t    }\n\t  }, {\n\t    key: 'prev',\n\t    value: function prev() {\n\t      this.year(this.year() - 10);\n\t    }\n\t  }, {\n\t    key: 'next',\n\t    value: function next() {\n\t      this.year(this.year() + 10);\n\t    }\n\t  }]);\n\t\n\t  return DateModel;\n\t}();\n\t\n\texports.default = DateModel;\n\t;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.i, \".date_month{display:inline-block;font-family:sans-serif;max-width:300px;position:relative}.date_month footer{border-top:1px solid #d3d3d3;padding:8px;text-align:center}.date_month .btn{background-image:-webkit-linear-gradient(top,#fff,#e0e0e0 50%);background-image:linear-gradient(180deg,#fff,#e0e0e0 50%);box-shadow:inset 0 1px 0 #fff}.date_month .picker{background-color:#fff;border:1px solid silver;box-shadow:0 4px 8px rgba(0,0,0,.25);font-size:80%;position:absolute;width:24em;z-index:1000}.date_month .picker header{text-align:center}.date_month .month{padding-top:8px}.date_month .year{border-left:1px solid #d3d3d3}.date_month .picker header{margin:0;padding:4px}.date_month .picker ul{-webkit-column-count:2;-moz-column-count:2;column-count:2;margin:0;padding:4px}.date_month .picker li{cursor:pointer;list-style:none;padding:4px;text-align:center}.date_month .selected{background-color:#00afdb;color:#fff}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.i, \"/*!\\n * Bootstrap v3.3.5 (http://getbootstrap.com)\\n * Copyright 2011-2016 Twitter, Inc.\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n */\\n\\n/*!\\n * Generated using the Bootstrap Customizer (http://getbootstrap.com/customize/?id=2a4fb89f69de81847d8282fc056691ec)\\n * Config saved to config.json and https://gist.github.com/2a4fb89f69de81847d8282fc056691ec\\n */\\n/*!\\n * Bootstrap v3.3.6 (http://getbootstrap.com)\\n * Copyright 2011-2015 Twitter, Inc.\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n */\\n/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}*,:after,:before{box-sizing:border-box}button,input,select,textarea{font-family:inherit;font-size:inherit;line-height:inherit}a{color:#337ab7;text-decoration:none}a:focus,a:hover{color:#23527c;text-decoration:underline}a:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}figure{margin:0}img{vertical-align:middle}.img-responsive{display:block;max-width:100%;height:auto}.img-rounded{border-radius:6px}.img-thumbnail{padding:4px;line-height:1.42857143;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out;display:inline-block;max-width:100%;height:auto}.img-circle{border-radius:50%}hr{margin-top:20px;margin-bottom:20px;border:0;border-top:1px solid #eee}.sr-only{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}[role=button]{cursor:pointer}.row{margin-left:-15px;margin-right:-15px}.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{position:relative;min-height:1px;padding-left:15px;padding-right:15px}.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{float:left}.col-xs-12{width:100%}.col-xs-11{width:91.66666667%}.col-xs-10{width:83.33333333%}.col-xs-9{width:75%}.col-xs-8{width:66.66666667%}.col-xs-7{width:58.33333333%}.col-xs-6{width:50%}.col-xs-5{width:41.66666667%}.col-xs-4{width:33.33333333%}.col-xs-3{width:25%}.col-xs-2{width:16.66666667%}.col-xs-1{width:8.33333333%}.col-xs-pull-12{right:100%}.col-xs-pull-11{right:91.66666667%}.col-xs-pull-10{right:83.33333333%}.col-xs-pull-9{right:75%}.col-xs-pull-8{right:66.66666667%}.col-xs-pull-7{right:58.33333333%}.col-xs-pull-6{right:50%}.col-xs-pull-5{right:41.66666667%}.col-xs-pull-4{right:33.33333333%}.col-xs-pull-3{right:25%}.col-xs-pull-2{right:16.66666667%}.col-xs-pull-1{right:8.33333333%}.col-xs-pull-0{right:auto}.col-xs-push-12{left:100%}.col-xs-push-11{left:91.66666667%}.col-xs-push-10{left:83.33333333%}.col-xs-push-9{left:75%}.col-xs-push-8{left:66.66666667%}.col-xs-push-7{left:58.33333333%}.col-xs-push-6{left:50%}.col-xs-push-5{left:41.66666667%}.col-xs-push-4{left:33.33333333%}.col-xs-push-3{left:25%}.col-xs-push-2{left:16.66666667%}.col-xs-push-1{left:8.33333333%}.col-xs-push-0{left:auto}.col-xs-offset-12{margin-left:100%}.col-xs-offset-11{margin-left:91.66666667%}.col-xs-offset-10{margin-left:83.33333333%}.col-xs-offset-9{margin-left:75%}.col-xs-offset-8{margin-left:66.66666667%}.col-xs-offset-7{margin-left:58.33333333%}.col-xs-offset-6{margin-left:50%}.col-xs-offset-5{margin-left:41.66666667%}.col-xs-offset-4{margin-left:33.33333333%}.col-xs-offset-3{margin-left:25%}.col-xs-offset-2{margin-left:16.66666667%}.col-xs-offset-1{margin-left:8.33333333%}.col-xs-offset-0{margin-left:0}@media (min-width:768px){.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12{float:left}.col-sm-12{width:100%}.col-sm-11{width:91.66666667%}.col-sm-10{width:83.33333333%}.col-sm-9{width:75%}.col-sm-8{width:66.66666667%}.col-sm-7{width:58.33333333%}.col-sm-6{width:50%}.col-sm-5{width:41.66666667%}.col-sm-4{width:33.33333333%}.col-sm-3{width:25%}.col-sm-2{width:16.66666667%}.col-sm-1{width:8.33333333%}.col-sm-pull-12{right:100%}.col-sm-pull-11{right:91.66666667%}.col-sm-pull-10{right:83.33333333%}.col-sm-pull-9{right:75%}.col-sm-pull-8{right:66.66666667%}.col-sm-pull-7{right:58.33333333%}.col-sm-pull-6{right:50%}.col-sm-pull-5{right:41.66666667%}.col-sm-pull-4{right:33.33333333%}.col-sm-pull-3{right:25%}.col-sm-pull-2{right:16.66666667%}.col-sm-pull-1{right:8.33333333%}.col-sm-pull-0{right:auto}.col-sm-push-12{left:100%}.col-sm-push-11{left:91.66666667%}.col-sm-push-10{left:83.33333333%}.col-sm-push-9{left:75%}.col-sm-push-8{left:66.66666667%}.col-sm-push-7{left:58.33333333%}.col-sm-push-6{left:50%}.col-sm-push-5{left:41.66666667%}.col-sm-push-4{left:33.33333333%}.col-sm-push-3{left:25%}.col-sm-push-2{left:16.66666667%}.col-sm-push-1{left:8.33333333%}.col-sm-push-0{left:auto}.col-sm-offset-12{margin-left:100%}.col-sm-offset-11{margin-left:91.66666667%}.col-sm-offset-10{margin-left:83.33333333%}.col-sm-offset-9{margin-left:75%}.col-sm-offset-8{margin-left:66.66666667%}.col-sm-offset-7{margin-left:58.33333333%}.col-sm-offset-6{margin-left:50%}.col-sm-offset-5{margin-left:41.66666667%}.col-sm-offset-4{margin-left:33.33333333%}.col-sm-offset-3{margin-left:25%}.col-sm-offset-2{margin-left:16.66666667%}.col-sm-offset-1{margin-left:8.33333333%}.col-sm-offset-0{margin-left:0}}@media (min-width:992px){.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12{float:left}.col-md-12{width:100%}.col-md-11{width:91.66666667%}.col-md-10{width:83.33333333%}.col-md-9{width:75%}.col-md-8{width:66.66666667%}.col-md-7{width:58.33333333%}.col-md-6{width:50%}.col-md-5{width:41.66666667%}.col-md-4{width:33.33333333%}.col-md-3{width:25%}.col-md-2{width:16.66666667%}.col-md-1{width:8.33333333%}.col-md-pull-12{right:100%}.col-md-pull-11{right:91.66666667%}.col-md-pull-10{right:83.33333333%}.col-md-pull-9{right:75%}.col-md-pull-8{right:66.66666667%}.col-md-pull-7{right:58.33333333%}.col-md-pull-6{right:50%}.col-md-pull-5{right:41.66666667%}.col-md-pull-4{right:33.33333333%}.col-md-pull-3{right:25%}.col-md-pull-2{right:16.66666667%}.col-md-pull-1{right:8.33333333%}.col-md-pull-0{right:auto}.col-md-push-12{left:100%}.col-md-push-11{left:91.66666667%}.col-md-push-10{left:83.33333333%}.col-md-push-9{left:75%}.col-md-push-8{left:66.66666667%}.col-md-push-7{left:58.33333333%}.col-md-push-6{left:50%}.col-md-push-5{left:41.66666667%}.col-md-push-4{left:33.33333333%}.col-md-push-3{left:25%}.col-md-push-2{left:16.66666667%}.col-md-push-1{left:8.33333333%}.col-md-push-0{left:auto}.col-md-offset-12{margin-left:100%}.col-md-offset-11{margin-left:91.66666667%}.col-md-offset-10{margin-left:83.33333333%}.col-md-offset-9{margin-left:75%}.col-md-offset-8{margin-left:66.66666667%}.col-md-offset-7{margin-left:58.33333333%}.col-md-offset-6{margin-left:50%}.col-md-offset-5{margin-left:41.66666667%}.col-md-offset-4{margin-left:33.33333333%}.col-md-offset-3{margin-left:25%}.col-md-offset-2{margin-left:16.66666667%}.col-md-offset-1{margin-left:8.33333333%}.col-md-offset-0{margin-left:0}}@media (min-width:1200px){.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12{float:left}.col-lg-12{width:100%}.col-lg-11{width:91.66666667%}.col-lg-10{width:83.33333333%}.col-lg-9{width:75%}.col-lg-8{width:66.66666667%}.col-lg-7{width:58.33333333%}.col-lg-6{width:50%}.col-lg-5{width:41.66666667%}.col-lg-4{width:33.33333333%}.col-lg-3{width:25%}.col-lg-2{width:16.66666667%}.col-lg-1{width:8.33333333%}.col-lg-pull-12{right:100%}.col-lg-pull-11{right:91.66666667%}.col-lg-pull-10{right:83.33333333%}.col-lg-pull-9{right:75%}.col-lg-pull-8{right:66.66666667%}.col-lg-pull-7{right:58.33333333%}.col-lg-pull-6{right:50%}.col-lg-pull-5{right:41.66666667%}.col-lg-pull-4{right:33.33333333%}.col-lg-pull-3{right:25%}.col-lg-pull-2{right:16.66666667%}.col-lg-pull-1{right:8.33333333%}.col-lg-pull-0{right:auto}.col-lg-push-12{left:100%}.col-lg-push-11{left:91.66666667%}.col-lg-push-10{left:83.33333333%}.col-lg-push-9{left:75%}.col-lg-push-8{left:66.66666667%}.col-lg-push-7{left:58.33333333%}.col-lg-push-6{left:50%}.col-lg-push-5{left:41.66666667%}.col-lg-push-4{left:33.33333333%}.col-lg-push-3{left:25%}.col-lg-push-2{left:16.66666667%}.col-lg-push-1{left:8.33333333%}.col-lg-push-0{left:auto}.col-lg-offset-12{margin-left:100%}.col-lg-offset-11{margin-left:91.66666667%}.col-lg-offset-10{margin-left:83.33333333%}.col-lg-offset-9{margin-left:75%}.col-lg-offset-8{margin-left:66.66666667%}.col-lg-offset-7{margin-left:58.33333333%}.col-lg-offset-6{margin-left:50%}.col-lg-offset-5{margin-left:41.66666667%}.col-lg-offset-4{margin-left:33.33333333%}.col-lg-offset-3{margin-left:25%}.col-lg-offset-2{margin-left:16.66666667%}.col-lg-offset-1{margin-left:8.33333333%}.col-lg-offset-0{margin-left:0}}fieldset{margin:0;min-width:0}fieldset,legend{padding:0;border:0}legend{display:block;width:100%;margin-bottom:20px;font-size:21px;line-height:inherit;color:#333;border-bottom:1px solid #e5e5e5}label{display:inline-block;max-width:100%;margin-bottom:5px}input[type=search]{box-sizing:border-box}input[type=checkbox],input[type=radio]{margin:4px 0 0;margin-top:1px\\\\9;line-height:normal}input[type=file]{display:block}input[type=range]{display:block;width:100%}select[multiple],select[size]{height:auto}input[type=checkbox]:focus,input[type=file]:focus,input[type=radio]:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}output{padding-top:7px}.form-control,output{display:block;font-size:14px;line-height:1.42857143;color:#555}.form-control{width:100%;height:34px;padding:6px 12px;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);-webkit-transition:border-color .15s ease-in-out,-webkit-box-shadow .15s ease-in-out;-webkit-transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}.form-control:focus{border-color:#66afe9;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)}.form-control::-moz-placeholder{color:#999;opacity:1}.form-control:-ms-input-placeholder{color:#999}.form-control::-webkit-input-placeholder{color:#999}.form-control::-ms-expand{border:0;background-color:transparent}.form-control[disabled],.form-control[readonly],fieldset[disabled] .form-control{background-color:#eee;opacity:1}.form-control[disabled],fieldset[disabled] .form-control{cursor:not-allowed}textarea.form-control{height:auto}input[type=search]{-webkit-appearance:none}@media screen and (-webkit-min-device-pixel-ratio:0){input[type=date].form-control,input[type=datetime-local].form-control,input[type=month].form-control,input[type=time].form-control{line-height:34px}.input-group-sm input[type=date],.input-group-sm input[type=datetime-local],.input-group-sm input[type=month],.input-group-sm input[type=time],input[type=date].input-sm,input[type=datetime-local].input-sm,input[type=month].input-sm,input[type=time].input-sm{line-height:30px}.input-group-lg input[type=date],.input-group-lg input[type=datetime-local],.input-group-lg input[type=month],.input-group-lg input[type=time],input[type=date].input-lg,input[type=datetime-local].input-lg,input[type=month].input-lg,input[type=time].input-lg{line-height:46px}}.form-group{margin-bottom:15px}.checkbox,.radio{position:relative;display:block;margin-top:10px;margin-bottom:10px}.checkbox label,.radio label{min-height:20px;padding-left:20px;margin-bottom:0;font-weight:400;cursor:pointer}.checkbox-inline input[type=checkbox],.checkbox input[type=checkbox],.radio-inline input[type=radio],.radio input[type=radio]{position:absolute;margin-left:-20px;margin-top:4px\\\\9}.checkbox+.checkbox,.radio+.radio{margin-top:-5px}.checkbox-inline,.radio-inline{position:relative;display:inline-block;padding-left:20px;margin-bottom:0;vertical-align:middle;font-weight:400;cursor:pointer}.checkbox-inline+.checkbox-inline,.radio-inline+.radio-inline{margin-top:0;margin-left:10px}.checkbox-inline.disabled,.checkbox.disabled label,.radio-inline.disabled,.radio.disabled label,fieldset[disabled] .checkbox-inline,fieldset[disabled] .checkbox label,fieldset[disabled] .radio-inline,fieldset[disabled] .radio label,fieldset[disabled] input[type=checkbox],fieldset[disabled] input[type=radio],input[type=checkbox].disabled,input[type=checkbox][disabled],input[type=radio].disabled,input[type=radio][disabled]{cursor:not-allowed}.form-control-static{padding-top:7px;padding-bottom:7px;margin-bottom:0;min-height:34px}.form-control-static.input-lg,.form-control-static.input-sm{padding-left:0;padding-right:0}.input-sm{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}select.input-sm{height:30px;line-height:30px}select[multiple].input-sm,textarea.input-sm{height:auto}.form-group-sm .form-control{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.form-group-sm select.form-control{height:30px;line-height:30px}.form-group-sm select[multiple].form-control,.form-group-sm textarea.form-control{height:auto}.form-group-sm .form-control-static{height:30px;min-height:32px;padding:6px 10px;font-size:12px;line-height:1.5}.input-lg{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}select.input-lg{height:46px;line-height:46px}select[multiple].input-lg,textarea.input-lg{height:auto}.form-group-lg .form-control{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.form-group-lg select.form-control{height:46px;line-height:46px}.form-group-lg select[multiple].form-control,.form-group-lg textarea.form-control{height:auto}.form-group-lg .form-control-static{height:46px;min-height:38px;padding:11px 16px;font-size:18px;line-height:1.3333333}.has-feedback{position:relative}.has-feedback .form-control{padding-right:42.5px}.form-control-feedback{position:absolute;top:0;right:0;z-index:2;display:block;width:34px;height:34px;line-height:34px;text-align:center;pointer-events:none}.form-group-lg .form-control+.form-control-feedback,.input-group-lg+.form-control-feedback,.input-lg+.form-control-feedback{width:46px;height:46px;line-height:46px}.form-group-sm .form-control+.form-control-feedback,.input-group-sm+.form-control-feedback,.input-sm+.form-control-feedback{width:30px;height:30px;line-height:30px}.has-success .checkbox,.has-success .checkbox-inline,.has-success.checkbox-inline label,.has-success.checkbox label,.has-success .control-label,.has-success .help-block,.has-success .radio,.has-success .radio-inline,.has-success.radio-inline label,.has-success.radio label{color:#3c763d}.has-success .form-control{border-color:#3c763d;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-success .form-control:focus{border-color:#2b542c;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #67b168}.has-success .input-group-addon{color:#3c763d;border-color:#3c763d;background-color:#dff0d8}.has-success .form-control-feedback{color:#3c763d}.has-warning .checkbox,.has-warning .checkbox-inline,.has-warning.checkbox-inline label,.has-warning.checkbox label,.has-warning .control-label,.has-warning .help-block,.has-warning .radio,.has-warning .radio-inline,.has-warning.radio-inline label,.has-warning.radio label{color:#8a6d3b}.has-warning .form-control{border-color:#8a6d3b;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-warning .form-control:focus{border-color:#66512c;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c0a16b}.has-warning .input-group-addon{color:#8a6d3b;border-color:#8a6d3b;background-color:#fcf8e3}.has-warning .form-control-feedback{color:#8a6d3b}.has-error .checkbox,.has-error .checkbox-inline,.has-error.checkbox-inline label,.has-error.checkbox label,.has-error .control-label,.has-error .help-block,.has-error .radio,.has-error .radio-inline,.has-error.radio-inline label,.has-error.radio label{color:#a94442}.has-error .form-control{border-color:#a94442;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-error .form-control:focus{border-color:#843534;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #ce8483}.has-error .input-group-addon{color:#a94442;border-color:#a94442;background-color:#f2dede}.has-error .form-control-feedback{color:#a94442}.has-feedback label~.form-control-feedback{top:25px}.has-feedback label.sr-only~.form-control-feedback{top:0}.help-block{display:block;margin-top:5px;margin-bottom:10px;color:#737373}@media (min-width:768px){.form-inline .form-group{display:inline-block;margin-bottom:0;vertical-align:middle}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-static{display:inline-block}.form-inline .input-group{display:inline-table;vertical-align:middle}.form-inline .input-group .form-control,.form-inline .input-group .input-group-addon,.form-inline .input-group .input-group-btn{width:auto}.form-inline .input-group>.form-control{width:100%}.form-inline .control-label{margin-bottom:0;vertical-align:middle}.form-inline .checkbox,.form-inline .radio{display:inline-block;margin-top:0;margin-bottom:0;vertical-align:middle}.form-inline .checkbox label,.form-inline .radio label{padding-left:0}.form-inline .checkbox input[type=checkbox],.form-inline .radio input[type=radio]{position:relative;margin-left:0}.form-inline .has-feedback .form-control-feedback{top:0}}.form-horizontal .checkbox,.form-horizontal .checkbox-inline,.form-horizontal .radio,.form-horizontal .radio-inline{margin-top:0;margin-bottom:0;padding-top:7px}.form-horizontal .checkbox,.form-horizontal .radio{min-height:27px}.form-horizontal .form-group{margin-left:-15px;margin-right:-15px}@media (min-width:768px){.form-horizontal .control-label{text-align:right;margin-bottom:0;padding-top:7px}}.form-horizontal .has-feedback .form-control-feedback{right:15px}@media (min-width:768px){.form-horizontal .form-group-lg .control-label{padding-top:11px;font-size:18px}}@media (min-width:768px){.form-horizontal .form-group-sm .control-label{padding-top:6px;font-size:12px}}.btn{display:inline-block;margin-bottom:0;font-weight:400;text-align:center;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;background-image:none;border:1px solid transparent;white-space:nowrap;padding:6px 12px;font-size:14px;line-height:1.42857143;border-radius:4px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.btn.active.focus,.btn.active:focus,.btn.focus,.btn:active.focus,.btn:active:focus,.btn:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn.focus,.btn:focus,.btn:hover{color:#333;text-decoration:none}.btn.active,.btn:active{outline:0;background-image:none;box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn.disabled,.btn[disabled],fieldset[disabled] .btn{cursor:not-allowed;opacity:.65;filter:alpha(opacity=65);box-shadow:none}a.btn.disabled,fieldset[disabled] a.btn{pointer-events:none}.btn-default{color:#333;background-color:#fff;border-color:#ccc}.btn-default.focus,.btn-default:focus{color:#333;background-color:#e6e6e6;border-color:#8c8c8c}.btn-default.active,.btn-default:active,.btn-default:hover,.open>.dropdown-toggle.btn-default{color:#333;background-color:#e6e6e6;border-color:#adadad}.btn-default.active.focus,.btn-default.active:focus,.btn-default.active:hover,.btn-default:active.focus,.btn-default:active:focus,.btn-default:active:hover,.open>.dropdown-toggle.btn-default.focus,.open>.dropdown-toggle.btn-default:focus,.open>.dropdown-toggle.btn-default:hover{color:#333;background-color:#d4d4d4;border-color:#8c8c8c}.btn-default.active,.btn-default:active,.open>.dropdown-toggle.btn-default{background-image:none}.btn-default.disabled.focus,.btn-default.disabled:focus,.btn-default.disabled:hover,.btn-default[disabled].focus,.btn-default[disabled]:focus,.btn-default[disabled]:hover,fieldset[disabled] .btn-default.focus,fieldset[disabled] .btn-default:focus,fieldset[disabled] .btn-default:hover{background-color:#fff;border-color:#ccc}.btn-default .badge{color:#fff;background-color:#333}.btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}.btn-primary.focus,.btn-primary:focus{color:#fff;background-color:#286090;border-color:#122b40}.btn-primary.active,.btn-primary:active,.btn-primary:hover,.open>.dropdown-toggle.btn-primary{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active.focus,.btn-primary.active:focus,.btn-primary.active:hover,.btn-primary:active.focus,.btn-primary:active:focus,.btn-primary:active:hover,.open>.dropdown-toggle.btn-primary.focus,.open>.dropdown-toggle.btn-primary:focus,.open>.dropdown-toggle.btn-primary:hover{color:#fff;background-color:#204d74;border-color:#122b40}.btn-primary.active,.btn-primary:active,.open>.dropdown-toggle.btn-primary{background-image:none}.btn-primary.disabled.focus,.btn-primary.disabled:focus,.btn-primary.disabled:hover,.btn-primary[disabled].focus,.btn-primary[disabled]:focus,.btn-primary[disabled]:hover,fieldset[disabled] .btn-primary.focus,fieldset[disabled] .btn-primary:focus,fieldset[disabled] .btn-primary:hover{background-color:#337ab7;border-color:#2e6da4}.btn-primary .badge{color:#337ab7;background-color:#fff}.btn-success{color:#fff;background-color:#5cb85c;border-color:#4cae4c}.btn-success.focus,.btn-success:focus{color:#fff;background-color:#449d44;border-color:#255625}.btn-success.active,.btn-success:active,.btn-success:hover,.open>.dropdown-toggle.btn-success{color:#fff;background-color:#449d44;border-color:#398439}.btn-success.active.focus,.btn-success.active:focus,.btn-success.active:hover,.btn-success:active.focus,.btn-success:active:focus,.btn-success:active:hover,.open>.dropdown-toggle.btn-success.focus,.open>.dropdown-toggle.btn-success:focus,.open>.dropdown-toggle.btn-success:hover{color:#fff;background-color:#398439;border-color:#255625}.btn-success.active,.btn-success:active,.open>.dropdown-toggle.btn-success{background-image:none}.btn-success.disabled.focus,.btn-success.disabled:focus,.btn-success.disabled:hover,.btn-success[disabled].focus,.btn-success[disabled]:focus,.btn-success[disabled]:hover,fieldset[disabled] .btn-success.focus,fieldset[disabled] .btn-success:focus,fieldset[disabled] .btn-success:hover{background-color:#5cb85c;border-color:#4cae4c}.btn-success .badge{color:#5cb85c;background-color:#fff}.btn-info{color:#fff;background-color:#5bc0de;border-color:#46b8da}.btn-info.focus,.btn-info:focus{color:#fff;background-color:#31b0d5;border-color:#1b6d85}.btn-info.active,.btn-info:active,.btn-info:hover,.open>.dropdown-toggle.btn-info{color:#fff;background-color:#31b0d5;border-color:#269abc}.btn-info.active.focus,.btn-info.active:focus,.btn-info.active:hover,.btn-info:active.focus,.btn-info:active:focus,.btn-info:active:hover,.open>.dropdown-toggle.btn-info.focus,.open>.dropdown-toggle.btn-info:focus,.open>.dropdown-toggle.btn-info:hover{color:#fff;background-color:#269abc;border-color:#1b6d85}.btn-info.active,.btn-info:active,.open>.dropdown-toggle.btn-info{background-image:none}.btn-info.disabled.focus,.btn-info.disabled:focus,.btn-info.disabled:hover,.btn-info[disabled].focus,.btn-info[disabled]:focus,.btn-info[disabled]:hover,fieldset[disabled] .btn-info.focus,fieldset[disabled] .btn-info:focus,fieldset[disabled] .btn-info:hover{background-color:#5bc0de;border-color:#46b8da}.btn-info .badge{color:#5bc0de;background-color:#fff}.btn-warning{color:#fff;background-color:#f0ad4e;border-color:#eea236}.btn-warning.focus,.btn-warning:focus{color:#fff;background-color:#ec971f;border-color:#985f0d}.btn-warning.active,.btn-warning:active,.btn-warning:hover,.open>.dropdown-toggle.btn-warning{color:#fff;background-color:#ec971f;border-color:#d58512}.btn-warning.active.focus,.btn-warning.active:focus,.btn-warning.active:hover,.btn-warning:active.focus,.btn-warning:active:focus,.btn-warning:active:hover,.open>.dropdown-toggle.btn-warning.focus,.open>.dropdown-toggle.btn-warning:focus,.open>.dropdown-toggle.btn-warning:hover{color:#fff;background-color:#d58512;border-color:#985f0d}.btn-warning.active,.btn-warning:active,.open>.dropdown-toggle.btn-warning{background-image:none}.btn-warning.disabled.focus,.btn-warning.disabled:focus,.btn-warning.disabled:hover,.btn-warning[disabled].focus,.btn-warning[disabled]:focus,.btn-warning[disabled]:hover,fieldset[disabled] .btn-warning.focus,fieldset[disabled] .btn-warning:focus,fieldset[disabled] .btn-warning:hover{background-color:#f0ad4e;border-color:#eea236}.btn-warning .badge{color:#f0ad4e;background-color:#fff}.btn-danger{color:#fff;background-color:#d9534f;border-color:#d43f3a}.btn-danger.focus,.btn-danger:focus{color:#fff;background-color:#c9302c;border-color:#761c19}.btn-danger.active,.btn-danger:active,.btn-danger:hover,.open>.dropdown-toggle.btn-danger{color:#fff;background-color:#c9302c;border-color:#ac2925}.btn-danger.active.focus,.btn-danger.active:focus,.btn-danger.active:hover,.btn-danger:active.focus,.btn-danger:active:focus,.btn-danger:active:hover,.open>.dropdown-toggle.btn-danger.focus,.open>.dropdown-toggle.btn-danger:focus,.open>.dropdown-toggle.btn-danger:hover{color:#fff;background-color:#ac2925;border-color:#761c19}.btn-danger.active,.btn-danger:active,.open>.dropdown-toggle.btn-danger{background-image:none}.btn-danger.disabled.focus,.btn-danger.disabled:focus,.btn-danger.disabled:hover,.btn-danger[disabled].focus,.btn-danger[disabled]:focus,.btn-danger[disabled]:hover,fieldset[disabled] .btn-danger.focus,fieldset[disabled] .btn-danger:focus,fieldset[disabled] .btn-danger:hover{background-color:#d9534f;border-color:#d43f3a}.btn-danger .badge{color:#d9534f;background-color:#fff}.btn-link{color:#337ab7;font-weight:400;border-radius:0}.btn-link,.btn-link.active,.btn-link:active,.btn-link[disabled],fieldset[disabled] .btn-link{background-color:transparent;box-shadow:none}.btn-link,.btn-link:active,.btn-link:focus,.btn-link:hover{border-color:transparent}.btn-link:focus,.btn-link:hover{color:#23527c;text-decoration:underline;background-color:transparent}.btn-link[disabled]:focus,.btn-link[disabled]:hover,fieldset[disabled] .btn-link:focus,fieldset[disabled] .btn-link:hover{color:#777;text-decoration:none}.btn-group-lg>.btn,.btn-lg{padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.btn-group-sm>.btn,.btn-sm{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.btn-group-xs>.btn,.btn-xs{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:5px}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.btn-group,.btn-group-vertical{position:relative;display:inline-block;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;float:left}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:hover,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus,.btn-group>.btn:hover{z-index:2}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{margin-left:-5px}.btn-toolbar .btn,.btn-toolbar .btn-group,.btn-toolbar .input-group{float:left}.btn-toolbar>.btn,.btn-toolbar>.btn-group,.btn-toolbar>.input-group{margin-left:5px}.btn-group>.btn:not(:first-child):not(:last-child):not(.dropdown-toggle){border-radius:0}.btn-group>.btn:first-child{margin-left:0}.btn-group>.btn:first-child:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-top-right-radius:0}.btn-group>.btn:last-child:not(:first-child),.btn-group>.dropdown-toggle:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0}.btn-group>.btn-group{float:left}.btn-group>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-top-right-radius:0}.btn-group>.btn-group:last-child:not(:first-child)>.btn:first-child{border-bottom-left-radius:0;border-top-left-radius:0}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0}.btn-group>.btn+.dropdown-toggle{padding-left:8px;padding-right:8px}.btn-group>.btn-lg+.dropdown-toggle{padding-left:12px;padding-right:12px}.btn-group.open .dropdown-toggle{box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-group.open .dropdown-toggle.btn-link{box-shadow:none}.btn .caret{margin-left:0}.btn-lg .caret{border-width:5px 5px 0;border-bottom-width:0}.dropup .btn-lg .caret{border-width:0 5px 5px}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group,.btn-group-vertical>.btn-group>.btn{display:block;float:none;width:100%;max-width:100%}.btn-group-vertical>.btn-group>.btn{float:none}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical>.btn:not(:first-child):not(:last-child){border-radius:0}.btn-group-vertical>.btn:first-child:not(:last-child){border-top-right-radius:4px;border-top-left-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn:last-child:not(:first-child){border-top-right-radius:0;border-top-left-radius:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px}.btn-group-vertical>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group-vertical>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group-vertical>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:last-child:not(:first-child)>.btn:first-child{border-top-right-radius:0;border-top-left-radius:0}.btn-group-justified{display:table;width:100%;table-layout:fixed;border-collapse:separate}.btn-group-justified>.btn,.btn-group-justified>.btn-group{float:none;display:table-cell;width:1%}.btn-group-justified>.btn-group .btn{width:100%}.btn-group-justified>.btn-group .dropdown-menu{left:auto}[data-toggle=buttons]>.btn-group>.btn input[type=checkbox],[data-toggle=buttons]>.btn-group>.btn input[type=radio],[data-toggle=buttons]>.btn input[type=checkbox],[data-toggle=buttons]>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:table;border-collapse:separate}.input-group[class*=col-]{float:none;padding-left:0;padding-right:0}.input-group .form-control{position:relative;z-index:2;float:left;width:100%;margin-bottom:0}.input-group .form-control:focus{z-index:3}.input-group-lg>.form-control,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.btn{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}select.input-group-lg>.form-control,select.input-group-lg>.input-group-addon,select.input-group-lg>.input-group-btn>.btn{height:46px;line-height:46px}select[multiple].input-group-lg>.form-control,select[multiple].input-group-lg>.input-group-addon,select[multiple].input-group-lg>.input-group-btn>.btn,textarea.input-group-lg>.form-control,textarea.input-group-lg>.input-group-addon,textarea.input-group-lg>.input-group-btn>.btn{height:auto}.input-group-sm>.form-control,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.btn{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}select.input-group-sm>.form-control,select.input-group-sm>.input-group-addon,select.input-group-sm>.input-group-btn>.btn{height:30px;line-height:30px}select[multiple].input-group-sm>.form-control,select[multiple].input-group-sm>.input-group-addon,select[multiple].input-group-sm>.input-group-btn>.btn,textarea.input-group-sm>.form-control,textarea.input-group-sm>.input-group-addon,textarea.input-group-sm>.input-group-btn>.btn{height:auto}.input-group-addon,.input-group-btn,.input-group .form-control{display:table-cell}.input-group-addon:not(:first-child):not(:last-child),.input-group-btn:not(:first-child):not(:last-child),.input-group .form-control:not(:first-child):not(:last-child){border-radius:0}.input-group-addon,.input-group-btn{width:1%;white-space:nowrap;vertical-align:middle}.input-group-addon{padding:6px 12px;font-size:14px;font-weight:400;line-height:1;color:#555;text-align:center;background-color:#eee;border:1px solid #ccc;border-radius:4px}.input-group-addon.input-sm{padding:5px 10px;font-size:12px;border-radius:3px}.input-group-addon.input-lg{padding:10px 16px;font-size:18px;border-radius:6px}.input-group-addon input[type=checkbox],.input-group-addon input[type=radio]{margin-top:0}.input-group-addon:first-child,.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group>.btn,.input-group-btn:first-child>.dropdown-toggle,.input-group-btn:last-child>.btn-group:not(:last-child)>.btn,.input-group-btn:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group .form-control:first-child{border-bottom-right-radius:0;border-top-right-radius:0}.input-group-addon:first-child{border-right:0}.input-group-addon:last-child,.input-group-btn:first-child>.btn-group:not(:first-child)>.btn,.input-group-btn:first-child>.btn:not(:first-child),.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group>.btn,.input-group-btn:last-child>.dropdown-toggle,.input-group .form-control:last-child{border-bottom-left-radius:0;border-top-left-radius:0}.input-group-addon:last-child{border-left:0}.input-group-btn{font-size:0;white-space:nowrap}.input-group-btn,.input-group-btn>.btn{position:relative}.input-group-btn>.btn+.btn{margin-left:-1px}.input-group-btn>.btn:active,.input-group-btn>.btn:focus,.input-group-btn>.btn:hover{z-index:2}.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group{margin-right:-1px}.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group{z-index:2;margin-left:-1px}.btn-group-vertical>.btn-group:after,.btn-group-vertical>.btn-group:before,.btn-toolbar:after,.btn-toolbar:before,.clearfix:after,.clearfix:before,.form-horizontal .form-group:after,.form-horizontal .form-group:before,.row:after,.row:before{content:\\\" \\\";display:table}.btn-group-vertical>.btn-group:after,.btn-toolbar:after,.clearfix:after,.form-horizontal .form-group:after,.row:after{clear:both}.center-block{display:block;margin-left:auto;margin-right:auto}.pull-right{float:right!important}.pull-left{float:left!important}.hide{display:none!important}.show{display:block!important}.invisible{visibility:hidden}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.hidden{display:none!important}.affix{position:fixed}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function (main) {\n\t  'use strict';\n\t\n\t  /**\n\t   * Parse or format dates\n\t   * @class fecha\n\t   */\n\t  var fecha = {};\n\t  var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\n\t  var twoDigits = /\\d\\d?/;\n\t  var threeDigits = /\\d{3}/;\n\t  var fourDigits = /\\d{4}/;\n\t  var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\t  var noop = function () {\n\t  };\n\t\n\t  function shorten(arr, sLen) {\n\t    var newArr = [];\n\t    for (var i = 0, len = arr.length; i < len; i++) {\n\t      newArr.push(arr[i].substr(0, sLen));\n\t    }\n\t    return newArr;\n\t  }\n\t\n\t  function monthUpdate(arrName) {\n\t    return function (d, v, i18n) {\n\t      var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\n\t      if (~index) {\n\t        d.month = index;\n\t      }\n\t    };\n\t  }\n\t\n\t  function pad(val, len) {\n\t    val = String(val);\n\t    len = len || 2;\n\t    while (val.length < len) {\n\t      val = '0' + val;\n\t    }\n\t    return val;\n\t  }\n\t\n\t  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\t  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\t  var monthNamesShort = shorten(monthNames, 3);\n\t  var dayNamesShort = shorten(dayNames, 3);\n\t  fecha.i18n = {\n\t    dayNamesShort: dayNamesShort,\n\t    dayNames: dayNames,\n\t    monthNamesShort: monthNamesShort,\n\t    monthNames: monthNames,\n\t    amPm: ['am', 'pm'],\n\t    DoFn: function DoFn(D) {\n\t      return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\n\t    }\n\t  };\n\t\n\t  var formatFlags = {\n\t    D: function(dateObj) {\n\t      return dateObj.getDate();\n\t    },\n\t    DD: function(dateObj) {\n\t      return pad(dateObj.getDate());\n\t    },\n\t    Do: function(dateObj, i18n) {\n\t      return i18n.DoFn(dateObj.getDate());\n\t    },\n\t    d: function(dateObj) {\n\t      return dateObj.getDay();\n\t    },\n\t    dd: function(dateObj) {\n\t      return pad(dateObj.getDay());\n\t    },\n\t    ddd: function(dateObj, i18n) {\n\t      return i18n.dayNamesShort[dateObj.getDay()];\n\t    },\n\t    dddd: function(dateObj, i18n) {\n\t      return i18n.dayNames[dateObj.getDay()];\n\t    },\n\t    M: function(dateObj) {\n\t      return dateObj.getMonth() + 1;\n\t    },\n\t    MM: function(dateObj) {\n\t      return pad(dateObj.getMonth() + 1);\n\t    },\n\t    MMM: function(dateObj, i18n) {\n\t      return i18n.monthNamesShort[dateObj.getMonth()];\n\t    },\n\t    MMMM: function(dateObj, i18n) {\n\t      return i18n.monthNames[dateObj.getMonth()];\n\t    },\n\t    YY: function(dateObj) {\n\t      return String(dateObj.getFullYear()).substr(2);\n\t    },\n\t    YYYY: function(dateObj) {\n\t      return dateObj.getFullYear();\n\t    },\n\t    h: function(dateObj) {\n\t      return dateObj.getHours() % 12 || 12;\n\t    },\n\t    hh: function(dateObj) {\n\t      return pad(dateObj.getHours() % 12 || 12);\n\t    },\n\t    H: function(dateObj) {\n\t      return dateObj.getHours();\n\t    },\n\t    HH: function(dateObj) {\n\t      return pad(dateObj.getHours());\n\t    },\n\t    m: function(dateObj) {\n\t      return dateObj.getMinutes();\n\t    },\n\t    mm: function(dateObj) {\n\t      return pad(dateObj.getMinutes());\n\t    },\n\t    s: function(dateObj) {\n\t      return dateObj.getSeconds();\n\t    },\n\t    ss: function(dateObj) {\n\t      return pad(dateObj.getSeconds());\n\t    },\n\t    S: function(dateObj) {\n\t      return Math.round(dateObj.getMilliseconds() / 100);\n\t    },\n\t    SS: function(dateObj) {\n\t      return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n\t    },\n\t    SSS: function(dateObj) {\n\t      return pad(dateObj.getMilliseconds(), 3);\n\t    },\n\t    a: function(dateObj, i18n) {\n\t      return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n\t    },\n\t    A: function(dateObj, i18n) {\n\t      return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\n\t    },\n\t    ZZ: function(dateObj) {\n\t      var o = dateObj.getTimezoneOffset();\n\t      return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\n\t    }\n\t  };\n\t\n\t  var parseFlags = {\n\t    D: [twoDigits, function (d, v) {\n\t      d.day = v;\n\t    }],\n\t    M: [twoDigits, function (d, v) {\n\t      d.month = v - 1;\n\t    }],\n\t    YY: [twoDigits, function (d, v) {\n\t      var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\n\t      d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n\t    }],\n\t    h: [twoDigits, function (d, v) {\n\t      d.hour = v;\n\t    }],\n\t    m: [twoDigits, function (d, v) {\n\t      d.minute = v;\n\t    }],\n\t    s: [twoDigits, function (d, v) {\n\t      d.second = v;\n\t    }],\n\t    YYYY: [fourDigits, function (d, v) {\n\t      d.year = v;\n\t    }],\n\t    S: [/\\d/, function (d, v) {\n\t      d.millisecond = v * 100;\n\t    }],\n\t    SS: [/\\d{2}/, function (d, v) {\n\t      d.millisecond = v * 10;\n\t    }],\n\t    SSS: [threeDigits, function (d, v) {\n\t      d.millisecond = v;\n\t    }],\n\t    d: [twoDigits, noop],\n\t    ddd: [word, noop],\n\t    MMM: [word, monthUpdate('monthNamesShort')],\n\t    MMMM: [word, monthUpdate('monthNames')],\n\t    a: [word, function (d, v, i18n) {\n\t      var val = v.toLowerCase();\n\t      if (val === i18n.amPm[0]) {\n\t        d.isPm = false;\n\t      } else if (val === i18n.amPm[1]) {\n\t        d.isPm = true;\n\t      }\n\t    }],\n\t    ZZ: [/[\\+\\-]\\d\\d:?\\d\\d/, function (d, v) {\n\t      var parts = (v + '').match(/([\\+\\-]|\\d\\d)/gi), minutes;\n\t\n\t      if (parts) {\n\t        minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n\t        d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n\t      }\n\t    }]\n\t  };\n\t  parseFlags.dd = parseFlags.d;\n\t  parseFlags.dddd = parseFlags.ddd;\n\t  parseFlags.Do = parseFlags.DD = parseFlags.D;\n\t  parseFlags.mm = parseFlags.m;\n\t  parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\n\t  parseFlags.MM = parseFlags.M;\n\t  parseFlags.ss = parseFlags.s;\n\t  parseFlags.A = parseFlags.a;\n\t\n\t\n\t  // Some common format strings\n\t  fecha.masks = {\n\t    'default': 'ddd MMM DD YYYY HH:mm:ss',\n\t    shortDate: 'M/D/YY',\n\t    mediumDate: 'MMM D, YYYY',\n\t    longDate: 'MMMM D, YYYY',\n\t    fullDate: 'dddd, MMMM D, YYYY',\n\t    shortTime: 'HH:mm',\n\t    mediumTime: 'HH:mm:ss',\n\t    longTime: 'HH:mm:ss.SSS'\n\t  };\n\t\n\t  /***\n\t   * Format a date\n\t   * @method format\n\t   * @param {Date|number} dateObj\n\t   * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n\t   */\n\t  fecha.format = function (dateObj, mask, i18nSettings) {\n\t    var i18n = i18nSettings || fecha.i18n;\n\t\n\t    if (typeof dateObj === 'number') {\n\t      dateObj = new Date(dateObj);\n\t    }\n\t\n\t    if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\n\t      throw new Error('Invalid Date in fecha.format');\n\t    }\n\t\n\t    mask = fecha.masks[mask] || mask || fecha.masks['default'];\n\t\n\t    return mask.replace(token, function ($0) {\n\t      return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Parse a date string into an object, changes - into /\n\t   * @method parse\n\t   * @param {string} dateStr Date string\n\t   * @param {string} format Date parse format\n\t   * @returns {Date|boolean}\n\t   */\n\t  fecha.parse = function (dateStr, format, i18nSettings) {\n\t    var i18n = i18nSettings || fecha.i18n;\n\t\n\t    if (typeof format !== 'string') {\n\t      throw new Error('Invalid format in fecha.parse');\n\t    }\n\t\n\t    format = fecha.masks[format] || format;\n\t\n\t    // Avoid regular expression denial of service, fail early for really long strings\n\t    // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n\t    if (dateStr.length > 1000) {\n\t      return false;\n\t    }\n\t\n\t    var isValid = true;\n\t    var dateInfo = {};\n\t    format.replace(token, function ($0) {\n\t      if (parseFlags[$0]) {\n\t        var info = parseFlags[$0];\n\t        var index = dateStr.search(info[0]);\n\t        if (!~index) {\n\t          isValid = false;\n\t        } else {\n\t          dateStr.replace(info[0], function (result) {\n\t            info[1](dateInfo, result, i18n);\n\t            dateStr = dateStr.substr(index + result.length);\n\t            return result;\n\t          });\n\t        }\n\t      }\n\t\n\t      return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\n\t    });\n\t\n\t    if (!isValid) {\n\t      return false;\n\t    }\n\t\n\t    var today = new Date();\n\t    if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n\t      dateInfo.hour = +dateInfo.hour + 12;\n\t    } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n\t      dateInfo.hour = 0;\n\t    }\n\t\n\t    var date;\n\t    if (dateInfo.timezoneOffset != null) {\n\t      dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n\t      date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n\t        dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n\t    } else {\n\t      date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n\t        dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n\t    }\n\t    return date;\n\t  };\n\t\n\t  /* istanbul ignore next */\n\t  if (typeof module !== 'undefined' && module.exports) {\n\t    module.exports = fecha;\n\t  } else if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      return fecha;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else {\n\t    main.fecha = fecha;\n\t  }\n\t})(this);\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=date_month> <header> <div class=input-group> <input name={{name}} type=text class=form-control value={{month_year}} twoway=false data-bind=\\\"focus: function() { this.open(true) }\\\"> <span class=input-group-addon data-bind=\\\"click: function() { this.open(true) }\\\"> <i class=\\\"icon icon-calendar\\\"></i> </span> </div> </header> {{#if: open}} <div class=picker> <div class=row> <div class=\\\"month col-xs-6\\\"> <ul> {{#foreach: visible_months}} <li data-bind=\\\"css: { selected: $parent.month() == $index() }, click: function() { $parent.month($index()) }\\\"> {{$data}} </li> {{/foreach}} </ul> </div> <div class=\\\"year col-xs-6\\\"> <header> <a data-bind=\\\"click: prev\\\" class=\\\"btn btn-default\\\"> <i class=\\\"icon icon-caret-left\\\"></i> </a> <a data-bind=\\\"click: next, attr: { disabled: !can_advance_year }\\\" class=\\\"btn btn-default\\\"> <i class=\\\"icon icon-caret-right\\\"></i> </a> </header> <ul> {{#foreach: visible_years()}} <li data-bind=\\\"css: { selected: $parent.year() == $data }, click: function() { $parent.year($data) }\\\"> {{$data}} </li> {{/foreach}} </ul> </div> </div> <footer class=text-center> <a class=\\\"btn btn-sm btn-default\\\" data-bind=\\\"click: function() { open(false) }\\\">OK</a> <a class=\\\"btn btn-sm btn-default\\\" data-bind=\\\"click: cancel\\\">Cancel</a> </footer> </div> {{/if}} </div>\";\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n\t * @license Knockout.Punches\r\n\t * Enhanced binding syntaxes for Knockout 3+\r\n\t * (c) Michael Best\r\n\t * License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n\t * Version 0.5.1\r\n\t */\r\n\t(function (factory) {\r\n\t    if (true) {\r\n\t        // AMD. Register as an anonymous module.\r\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t    } else if (typeof module === \"object\") {\r\n\t        // CommonJS module\r\n\t        var ko = require(\"knockout\");\r\n\t        factory(ko);\r\n\t    } else {\r\n\t        // Browser globals\r\n\t        factory(window.ko);\r\n\t    }\r\n\t}(function(ko) {\r\n\t\r\n\t// Add a preprocess function to a binding handler.\r\n\tfunction addBindingPreprocessor(bindingKeyOrHandler, preprocessFn) {\r\n\t    return chainPreprocessor(getOrCreateHandler(bindingKeyOrHandler), 'preprocess', preprocessFn);\r\n\t}\r\n\t\r\n\t// These utility functions are separated out because they're also used by\r\n\t// preprocessBindingProperty\r\n\t\r\n\t// Get the binding handler or create a new, empty one\r\n\tfunction getOrCreateHandler(bindingKeyOrHandler) {\r\n\t    return typeof bindingKeyOrHandler === 'object' ? bindingKeyOrHandler :\r\n\t        (ko.getBindingHandler(bindingKeyOrHandler) || (ko.bindingHandlers[bindingKeyOrHandler] = {}));\r\n\t}\r\n\t// Add a preprocess function\r\n\tfunction chainPreprocessor(obj, prop, fn) {\r\n\t    if (obj[prop]) {\r\n\t        // If the handler already has a preprocess function, chain the new\r\n\t        // one after the existing one. If the previous function in the chain\r\n\t        // returns a falsy value (to remove the binding), the chain ends. This\r\n\t        // method allows each function to modify and return the binding value.\r\n\t        var previousFn = obj[prop];\r\n\t        obj[prop] = function(value, binding, addBinding) {\r\n\t            value = previousFn.call(this, value, binding, addBinding);\r\n\t            if (value)\r\n\t                return fn.call(this, value, binding, addBinding);\r\n\t        };\r\n\t    } else {\r\n\t        obj[prop] = fn;\r\n\t    }\r\n\t    return obj;\r\n\t}\r\n\t\r\n\t// Add a preprocessNode function to the binding provider. If a\r\n\t// function already exists, chain the new one after it. This calls\r\n\t// each function in the chain until one modifies the node. This\r\n\t// method allows only one function to modify the node.\r\n\tfunction addNodePreprocessor(preprocessFn) {\r\n\t    var provider = ko.bindingProvider.instance;\r\n\t    if (provider.preprocessNode) {\r\n\t        var previousPreprocessFn = provider.preprocessNode;\r\n\t        provider.preprocessNode = function(node) {\r\n\t            var newNodes = previousPreprocessFn.call(this, node);\r\n\t            if (!newNodes)\r\n\t                newNodes = preprocessFn.call(this, node);\r\n\t            return newNodes;\r\n\t        };\r\n\t    } else {\r\n\t        provider.preprocessNode = preprocessFn;\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction addBindingHandlerCreator(matchRegex, callbackFn) {\r\n\t    var oldGetHandler = ko.getBindingHandler;\r\n\t    ko.getBindingHandler = function(bindingKey) {\r\n\t        var match;\r\n\t        return oldGetHandler(bindingKey) || ((match = bindingKey.match(matchRegex)) && callbackFn(match, bindingKey));\r\n\t    };\r\n\t}\r\n\t\r\n\t// Create shortcuts to commonly used ko functions\r\n\tvar ko_unwrap = ko.unwrap;\r\n\t\r\n\t// Create \"punches\" object and export utility functions\r\n\tvar ko_punches = ko.punches = {\r\n\t    utils: {\r\n\t        addBindingPreprocessor: addBindingPreprocessor,\r\n\t        addNodePreprocessor: addNodePreprocessor,\r\n\t        addBindingHandlerCreator: addBindingHandlerCreator,\r\n\t\r\n\t        // previous names retained for backwards compitibility\r\n\t        setBindingPreprocessor: addBindingPreprocessor,\r\n\t        setNodePreprocessor: addNodePreprocessor\r\n\t    }\r\n\t};\r\n\t\r\n\tko_punches.enableAll = function () {\r\n\t    // Enable interpolation markup\r\n\t    enableInterpolationMarkup();\r\n\t    enableAttributeInterpolationMarkup();\r\n\t\r\n\t    // Enable auto-namspacing of attr, css, event, and style\r\n\t    enableAutoNamespacedSyntax('attr');\r\n\t    enableAutoNamespacedSyntax('css');\r\n\t    enableAutoNamespacedSyntax('event');\r\n\t    enableAutoNamespacedSyntax('style');\r\n\t\r\n\t    // Make sure that Knockout knows to bind checked after attr.value (see #40)\r\n\t    ko.bindingHandlers.checked.after.push('attr.value');\r\n\t\r\n\t    // Enable filter syntax for text, html, and attr\r\n\t    enableTextFilter('text');\r\n\t    enableTextFilter('html');\r\n\t    addDefaultNamespacedBindingPreprocessor('attr', filterPreprocessor);\r\n\t\r\n\t    // Enable wrapped callbacks for click, submit, event, optionsAfterRender, and template options\r\n\t    enableWrappedCallback('click');\r\n\t    enableWrappedCallback('submit');\r\n\t    enableWrappedCallback('optionsAfterRender');\r\n\t    addDefaultNamespacedBindingPreprocessor('event', wrappedCallbackPreprocessor);\r\n\t    addBindingPropertyPreprocessor('template', 'beforeRemove', wrappedCallbackPreprocessor);\r\n\t    addBindingPropertyPreprocessor('template', 'afterAdd', wrappedCallbackPreprocessor);\r\n\t    addBindingPropertyPreprocessor('template', 'afterRender', wrappedCallbackPreprocessor);\r\n\t};\r\n\t// Convert input in the form of `expression | filter1 | filter2:arg1:arg2` to a function call format\r\n\t// with filters accessed as ko.filters.filter1, etc.\r\n\tfunction filterPreprocessor(input) {\r\n\t    // Check if the input contains any | characters; if not, just return\r\n\t    if (input.indexOf('|') === -1)\r\n\t        return input;\r\n\t\r\n\t    // Split the input into tokens, in which | and : are individual tokens, quoted strings are ignored, and all tokens are space-trimmed\r\n\t    var tokens = input.match(/\"([^\"\\\\]|\\\\.)*\"|'([^'\\\\]|\\\\.)*'|\\|\\||[|:]|[^\\s|:\"'][^|:\"']*[^\\s|:\"']|[^\\s|:\"']/g);\r\n\t    if (tokens && tokens.length > 1) {\r\n\t        // Append a line so that we don't need a separate code block to deal with the last item\r\n\t        tokens.push('|');\r\n\t        input = tokens[0];\r\n\t        var lastToken, token, inFilters = false, nextIsFilter = false;\r\n\t        for (var i = 1, token; token = tokens[i]; ++i) {\r\n\t            if (token === '|') {\r\n\t                if (inFilters) {\r\n\t                    if (lastToken === ':')\r\n\t                        input += \"undefined\";\r\n\t                    input += ')';\r\n\t                }\r\n\t                nextIsFilter = true;\r\n\t                inFilters = true;\r\n\t            } else {\r\n\t                if (nextIsFilter) {\r\n\t                    input = \"ko.filters['\" + token + \"'](\" + input;\r\n\t                } else if (inFilters && token === ':') {\r\n\t                    if (lastToken === ':')\r\n\t                        input += \"undefined\";\r\n\t                    input += \",\";\r\n\t                } else {\r\n\t                    input += token;\r\n\t                }\r\n\t                nextIsFilter = false;\r\n\t            }\r\n\t            lastToken = token;\r\n\t        }\r\n\t    }\r\n\t    return input;\r\n\t}\r\n\t\r\n\t// Set the filter preprocessor for a specific binding\r\n\tfunction enableTextFilter(bindingKeyOrHandler) {\r\n\t    addBindingPreprocessor(bindingKeyOrHandler, filterPreprocessor);\r\n\t}\r\n\t\r\n\tvar filters = {};\r\n\t\r\n\t// Convert value to uppercase\r\n\tfilters.uppercase = function(value) {\r\n\t    return String.prototype.toUpperCase.call(ko_unwrap(value));\r\n\t};\r\n\t\r\n\t// Convert value to lowercase\r\n\tfilters.lowercase = function(value) {\r\n\t    return String.prototype.toLowerCase.call(ko_unwrap(value));\r\n\t};\r\n\t\r\n\t// Return default value if the input value is empty or null\r\n\tfilters['default'] = function (value, defaultValue) {\r\n\t    value = ko_unwrap(value);\r\n\t    if (typeof value === \"function\") {\r\n\t        return value;\r\n\t    }\r\n\t    if (typeof value === \"string\") {\r\n\t        return trim(value) === '' ? defaultValue : value;\r\n\t    }\r\n\t    return value == null || value.length == 0 ? defaultValue : value;\r\n\t};\r\n\t\r\n\t// Return the value with the search string replaced with the replacement string\r\n\tfilters.replace = function(value, search, replace) {\r\n\t    return String.prototype.replace.call(ko_unwrap(value), search, replace);\r\n\t};\r\n\t\r\n\tfilters.fit = function(value, length, replacement, trimWhere) {\r\n\t    value = ko_unwrap(value);\r\n\t    if (length && ('' + value).length > length) {\r\n\t        replacement = '' + (replacement || '...');\r\n\t        length = length - replacement.length;\r\n\t        value = '' + value;\r\n\t        switch (trimWhere) {\r\n\t            case 'left':\r\n\t                return replacement + value.slice(-length);\r\n\t            case 'middle':\r\n\t                var leftLen = Math.ceil(length / 2);\r\n\t                return value.substr(0, leftLen) + replacement + value.slice(leftLen-length);\r\n\t            default:\r\n\t                return value.substr(0, length) + replacement;\r\n\t        }\r\n\t    } else {\r\n\t        return value;\r\n\t    }\r\n\t};\r\n\t\r\n\t// Convert a model object to JSON\r\n\tfilters.json = function(rootObject, space, replacer) {     // replacer and space are optional\r\n\t    return ko.toJSON(rootObject, replacer, space);\r\n\t};\r\n\t\r\n\t// Format a number using the browser's toLocaleString\r\n\tfilters.number = function(value) {\r\n\t    return (+ko_unwrap(value)).toLocaleString();\r\n\t};\r\n\t\r\n\t// Export the filters object for general access\r\n\tko.filters = filters;\r\n\t\r\n\t// Export the preprocessor functions\r\n\tko_punches.textFilter = {\r\n\t    preprocessor: filterPreprocessor,\r\n\t    enableForBinding: enableTextFilter\r\n\t};\r\n\t// Support dynamically-created, namespaced bindings. The binding key syntax is\r\n\t// \"namespace.binding\". Within a certain namespace, we can dynamically create the\r\n\t// handler for any binding. This is particularly useful for bindings that work\r\n\t// the same way, but just set a different named value, such as for element\r\n\t// attributes or CSS classes.\r\n\tvar namespacedBindingMatch = /([^\\.]+)\\.(.+)/, namespaceDivider = '.';\r\n\taddBindingHandlerCreator(namespacedBindingMatch, function (match, bindingKey) {\r\n\t    var namespace = match[1],\r\n\t        namespaceHandler = ko.bindingHandlers[namespace];\r\n\t    if (namespaceHandler) {\r\n\t        var bindingName = match[2],\r\n\t            handlerFn = namespaceHandler.getNamespacedHandler || defaultGetNamespacedHandler,\r\n\t            handler = handlerFn.call(namespaceHandler, bindingName, namespace, bindingKey);\r\n\t        ko.bindingHandlers[bindingKey] = handler;\r\n\t        return handler;\r\n\t    }\r\n\t});\r\n\t\r\n\t// Knockout's built-in bindings \"attr\", \"event\", \"css\" and \"style\" include the idea of\r\n\t// namespaces, representing it using a single binding that takes an object map of names\r\n\t// to values. This default handler translates a binding of \"namespacedName: value\"\r\n\t// to \"namespace: {name: value}\" to automatically support those built-in bindings.\r\n\tfunction defaultGetNamespacedHandler(name, namespace, namespacedName) {\r\n\t    var handler = ko.utils.extend({}, this);\r\n\t    function setHandlerFunction(funcName) {\r\n\t        if (handler[funcName]) {\r\n\t            handler[funcName] = function(element, valueAccessor) {\r\n\t                function subValueAccessor() {\r\n\t                    var result = {};\r\n\t                    result[name] = valueAccessor();\r\n\t                    return result;\r\n\t                }\r\n\t                var args = Array.prototype.slice.call(arguments, 0);\r\n\t                args[1] = subValueAccessor;\r\n\t                return ko.bindingHandlers[namespace][funcName].apply(this, args);\r\n\t            };\r\n\t        }\r\n\t    }\r\n\t    // Set new init and update functions that wrap the originals\r\n\t    setHandlerFunction('init');\r\n\t    setHandlerFunction('update');\r\n\t    // Clear any preprocess function since preprocessing of the new binding would need to be different\r\n\t    if (handler.preprocess)\r\n\t        handler.preprocess = null;\r\n\t    if (ko.virtualElements.allowedBindings[namespace])\r\n\t        ko.virtualElements.allowedBindings[namespacedName] = true;\r\n\t    return handler;\r\n\t}\r\n\t\r\n\t// Adds a preprocess function for every generated namespace.x binding. This can\r\n\t// be called multiple times for the same binding, and the preprocess functions will\r\n\t// be chained. If the binding has a custom getNamespacedHandler method, make sure that\r\n\t// it's set before this function is used.\r\n\tfunction addDefaultNamespacedBindingPreprocessor(namespace, preprocessFn) {\r\n\t    var handler = ko.getBindingHandler(namespace);\r\n\t    if (handler) {\r\n\t        var previousHandlerFn = handler.getNamespacedHandler || defaultGetNamespacedHandler;\r\n\t        handler.getNamespacedHandler = function() {\r\n\t            return addBindingPreprocessor(previousHandlerFn.apply(this, arguments), preprocessFn);\r\n\t        };\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction autoNamespacedPreprocessor(value, binding, addBinding) {\r\n\t    if (value.charAt(0) !== \"{\")\r\n\t        return value;\r\n\t\r\n\t    // Handle two-level binding specified as \"binding: {key: value}\" by parsing inner\r\n\t    // object and converting to \"binding.key: value\"\r\n\t    var subBindings = ko.expressionRewriting.parseObjectLiteral(value);\r\n\t    ko.utils.arrayForEach(subBindings, function(keyValue) {\r\n\t        addBinding(binding + namespaceDivider + keyValue.key, keyValue.value);\r\n\t    });\r\n\t}\r\n\t\r\n\t// Set the namespaced preprocessor for a specific binding\r\n\tfunction enableAutoNamespacedSyntax(bindingKeyOrHandler) {\r\n\t    addBindingPreprocessor(bindingKeyOrHandler, autoNamespacedPreprocessor);\r\n\t}\r\n\t\r\n\t// Export the preprocessor functions\r\n\tko_punches.namespacedBinding = {\r\n\t    defaultGetHandler: defaultGetNamespacedHandler,\r\n\t    setDefaultBindingPreprocessor: addDefaultNamespacedBindingPreprocessor,    // for backwards compat.\r\n\t    addDefaultBindingPreprocessor: addDefaultNamespacedBindingPreprocessor,\r\n\t    preprocessor: autoNamespacedPreprocessor,\r\n\t    enableForBinding: enableAutoNamespacedSyntax\r\n\t};\r\n\t// Wrap a callback function in an anonymous function so that it is called with the appropriate\r\n\t// \"this\" value.\r\n\tfunction wrappedCallbackPreprocessor(val) {\r\n\t    // Matches either an isolated identifier or something ending with a property accessor\r\n\t    if (/^([$_a-z][$\\w]*|.+(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i.test(val)) {\r\n\t        return 'function(_x,_y,_z){return(' + val + ')(_x,_y,_z);}';\r\n\t    } else {\r\n\t        return val;\r\n\t    }\r\n\t}\r\n\t\r\n\t// Set the wrappedCallback preprocessor for a specific binding\r\n\tfunction enableWrappedCallback(bindingKeyOrHandler) {\r\n\t    addBindingPreprocessor(bindingKeyOrHandler, wrappedCallbackPreprocessor);\r\n\t}\r\n\t\r\n\t// Export the preprocessor functions\r\n\tko_punches.wrappedCallback = {\r\n\t    preprocessor: wrappedCallbackPreprocessor,\r\n\t    enableForBinding: enableWrappedCallback\r\n\t};\r\n\t// Attach a preprocess function to a specific property of a binding. This allows you to\r\n\t// preprocess binding \"options\" using the same preprocess functions that work for bindings.\r\n\tfunction addBindingPropertyPreprocessor(bindingKeyOrHandler, property, preprocessFn) {\r\n\t    var handler = getOrCreateHandler(bindingKeyOrHandler);\r\n\t    if (!handler._propertyPreprocessors) {\r\n\t        // Initialize the binding preprocessor\r\n\t        chainPreprocessor(handler, 'preprocess', propertyPreprocessor);\r\n\t        handler._propertyPreprocessors = {};\r\n\t    }\r\n\t    // Add the property preprocess function\r\n\t    chainPreprocessor(handler._propertyPreprocessors, property, preprocessFn);\r\n\t}\r\n\t\r\n\t// In order to preprocess a binding property, we have to preprocess the binding itself.\r\n\t// This preprocess function splits up the binding value and runs each property's preprocess\r\n\t// function if it's set.\r\n\tfunction propertyPreprocessor(value, binding, addBinding) {\r\n\t    if (value.charAt(0) !== \"{\")\r\n\t        return value;\r\n\t\r\n\t    var subBindings = ko.expressionRewriting.parseObjectLiteral(value),\r\n\t        resultStrings = [],\r\n\t        propertyPreprocessors = this._propertyPreprocessors || {};\r\n\t    ko.utils.arrayForEach(subBindings, function(keyValue) {\r\n\t        var prop = keyValue.key, propVal = keyValue.value;\r\n\t        if (propertyPreprocessors[prop]) {\r\n\t            propVal = propertyPreprocessors[prop](propVal, prop, addBinding);\r\n\t        }\r\n\t        if (propVal) {\r\n\t            resultStrings.push(\"'\" + prop + \"':\" + propVal);\r\n\t        }\r\n\t    });\r\n\t    return \"{\" + resultStrings.join(\",\") + \"}\";\r\n\t}\r\n\t\r\n\t// Export the preprocessor functions\r\n\tko_punches.preprocessBindingProperty = {\r\n\t    setPreprocessor: addBindingPropertyPreprocessor,     // for backwards compat.\r\n\t    addPreprocessor: addBindingPropertyPreprocessor\r\n\t};\r\n\t// Wrap an expression in an anonymous function so that it is called when the event happens\r\n\tfunction makeExpressionCallbackPreprocessor(args) {\r\n\t    return function expressionCallbackPreprocessor(val) {\r\n\t        return 'function('+args+'){return(' + val + ');}';\r\n\t    };\r\n\t}\r\n\t\r\n\tvar eventExpressionPreprocessor = makeExpressionCallbackPreprocessor(\"$data,$event\");\r\n\t\r\n\t// Set the expressionCallback preprocessor for a specific binding\r\n\tfunction enableExpressionCallback(bindingKeyOrHandler, args) {\r\n\t    var args = Array.prototype.slice.call(arguments, 1).join();\r\n\t    addBindingPreprocessor(bindingKeyOrHandler, makeExpressionCallbackPreprocessor(args));\r\n\t}\r\n\t\r\n\t// Export the preprocessor functions\r\n\tko_punches.expressionCallback = {\r\n\t    makePreprocessor: makeExpressionCallbackPreprocessor,\r\n\t    eventPreprocessor: eventExpressionPreprocessor,\r\n\t    enableForBinding: enableExpressionCallback\r\n\t};\r\n\t\r\n\t// Create an \"on\" namespace for events to use the expression method\r\n\tko.bindingHandlers.on = {\r\n\t    getNamespacedHandler: function(eventName) {\r\n\t        var handler = ko.getBindingHandler('event' + namespaceDivider + eventName);\r\n\t        return addBindingPreprocessor(handler, eventExpressionPreprocessor);\r\n\t    }\r\n\t};\r\n\t// Performance comparison at http://jsperf.com/markup-interpolation-comparison\r\n\tfunction parseInterpolationMarkup(textToParse, outerTextCallback, expressionCallback) {\r\n\t    function innerParse(text) {\r\n\t        var innerMatch = text.match(/^([\\s\\S]*)}}([\\s\\S]*?)\\{\\{([\\s\\S]*)$/);\r\n\t        if (innerMatch) {\r\n\t            innerParse(innerMatch[1]);\r\n\t            outerTextCallback(innerMatch[2]);\r\n\t            expressionCallback(innerMatch[3]);\r\n\t        } else {\r\n\t            expressionCallback(text);\r\n\t        }\r\n\t    }\r\n\t    var outerMatch = textToParse.match(/^([\\s\\S]*?)\\{\\{([\\s\\S]*)}}([\\s\\S]*)$/);\r\n\t    if (outerMatch) {\r\n\t        outerTextCallback(outerMatch[1]);\r\n\t        innerParse(outerMatch[2]);\r\n\t        outerTextCallback(outerMatch[3]);\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction trim(string) {\r\n\t    return string == null ? '' :\r\n\t        string.trim ?\r\n\t            string.trim() :\r\n\t            string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\r\n\t}\r\n\t\r\n\tfunction interpolationMarkupPreprocessor(node) {\r\n\t    // only needs to work with text nodes\r\n\t    if (node.nodeType === 3 && node.nodeValue && node.nodeValue.indexOf('{{') !== -1 && (node.parentNode || {}).nodeName != \"TEXTAREA\") {\r\n\t        var nodes = [];\r\n\t        function addTextNode(text) {\r\n\t            if (text)\r\n\t                nodes.push(document.createTextNode(text));\r\n\t        }\r\n\t        function wrapExpr(expressionText) {\r\n\t            if (expressionText)\r\n\t                nodes.push.apply(nodes, ko_punches_interpolationMarkup.wrapExpression(expressionText, node));\r\n\t        }\r\n\t        parseInterpolationMarkup(node.nodeValue, addTextNode, wrapExpr)\r\n\t\r\n\t        if (nodes.length) {\r\n\t            if (node.parentNode) {\r\n\t                for (var i = 0, n = nodes.length, parent = node.parentNode; i < n; ++i) {\r\n\t                    parent.insertBefore(nodes[i], node);\r\n\t                }\r\n\t                parent.removeChild(node);\r\n\t            }\r\n\t            return nodes;\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tif (!ko.virtualElements.allowedBindings.html) {\r\n\t    // Virtual html binding\r\n\t    // SO Question: http://stackoverflow.com/a/15348139\r\n\t    var overridden = ko.bindingHandlers.html.update;\r\n\t    ko.bindingHandlers.html.update = function (element, valueAccessor) {\r\n\t        if (element.nodeType === 8) {\r\n\t            var html = ko_unwrap(valueAccessor());\r\n\t            if (html != null) {\r\n\t                var parsedNodes = ko.utils.parseHtmlFragment('' + html);\r\n\t                ko.virtualElements.setDomNodeChildren(element, parsedNodes);\r\n\t            } else {\r\n\t                ko.virtualElements.emptyNode(element);\r\n\t            }\r\n\t        } else {\r\n\t            overridden(element, valueAccessor);\r\n\t        }\r\n\t    };\r\n\t    ko.virtualElements.allowedBindings.html = true;\r\n\t}\r\n\t\r\n\tfunction wrapExpression(expressionText, node) {\r\n\t    var ownerDocument = node ? node.ownerDocument : document,\r\n\t        closeComment = true,\r\n\t        binding,\r\n\t        expressionText = trim(expressionText),\r\n\t        firstChar = expressionText[0],\r\n\t        lastChar = expressionText[expressionText.length - 1],\r\n\t        result = [],\r\n\t        matches;\r\n\t\r\n\t    if (firstChar === '#') {\r\n\t        if (lastChar === '/') {\r\n\t            binding = expressionText.slice(1, -1);\r\n\t        } else {\r\n\t            binding = expressionText.slice(1);\r\n\t            closeComment = false;\r\n\t        }\r\n\t        if (matches = binding.match(/^([^,\"'{}()\\/:[\\]\\s]+)\\s+([^\\s:].*)/)) {\r\n\t            binding = matches[1] + ':' + matches[2];\r\n\t        }\r\n\t    } else if (firstChar === '/') {\r\n\t        // replace only with a closing comment\r\n\t    } else if (firstChar === '{' && lastChar === '}') {\r\n\t        binding = \"html:\" + trim(expressionText.slice(1, -1));\r\n\t    } else {\r\n\t        binding = \"text:\" + trim(expressionText);\r\n\t    }\r\n\t\r\n\t    if (binding)\r\n\t        result.push(ownerDocument.createComment(\"ko \" + binding));\r\n\t    if (closeComment)\r\n\t        result.push(ownerDocument.createComment(\"/ko\"));\r\n\t    return result;\r\n\t};\r\n\t\r\n\tfunction enableInterpolationMarkup() {\r\n\t    addNodePreprocessor(interpolationMarkupPreprocessor);\r\n\t}\r\n\t\r\n\t// Export the preprocessor functions\r\n\tvar ko_punches_interpolationMarkup = ko_punches.interpolationMarkup = {\r\n\t    preprocessor: interpolationMarkupPreprocessor,\r\n\t    enable: enableInterpolationMarkup,\r\n\t    wrapExpression: wrapExpression\r\n\t};\r\n\t\r\n\t\r\n\tvar dataBind = 'data-bind';\r\n\tfunction attributeInterpolationMarkerPreprocessor(node) {\r\n\t    if (node.nodeType === 1 && node.attributes.length) {\r\n\t        var dataBindAttribute = node.getAttribute(dataBind);\r\n\t        for (var attrs = ko.utils.arrayPushAll([], node.attributes), n = attrs.length, i = 0; i < n; ++i) {\r\n\t            var attr = attrs[i];\r\n\t            if (attr.specified && attr.name != dataBind && attr.value.indexOf('{{') !== -1) {\r\n\t                var parts = [], attrValue = '';\r\n\t                function addText(text) {\r\n\t                    if (text)\r\n\t                        parts.push('\"' + text.replace(/\"/g, '\\\\\"') + '\"');\r\n\t                }\r\n\t                function addExpr(expressionText) {\r\n\t                    if (expressionText) {\r\n\t                        attrValue = expressionText;\r\n\t                        parts.push('ko.unwrap(' + expressionText + ')');\r\n\t                    }\r\n\t                }\r\n\t                parseInterpolationMarkup(attr.value, addText, addExpr);\r\n\t\r\n\t                if (parts.length > 1) {\r\n\t                    attrValue = '\"\"+' + parts.join('+');\r\n\t                }\r\n\t\r\n\t                if (attrValue) {\r\n\t                    var attrName = attr.name.toLowerCase();\r\n\t                    var attrBinding = ko_punches_attributeInterpolationMarkup.attributeBinding(attrName, attrValue, node) || attributeBinding(attrName, attrValue, node);\r\n\t                    if (!dataBindAttribute) {\r\n\t                        dataBindAttribute = attrBinding\r\n\t                    } else {\r\n\t                        dataBindAttribute += ',' + attrBinding;\r\n\t                    }\r\n\t                    node.setAttribute(dataBind, dataBindAttribute);\r\n\t                    // Using removeAttribute instead of removeAttributeNode because IE clears the\r\n\t                    // class if you use removeAttributeNode to remove the id.\r\n\t                    node.removeAttribute(attr.name);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction attributeBinding(name, value, node) {\r\n\t    if (ko.getBindingHandler(name)) {\r\n\t        return name + ':' + value;\r\n\t    } else {\r\n\t        return 'attr.' + name + ':' + value;\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction enableAttributeInterpolationMarkup() {\r\n\t    addNodePreprocessor(attributeInterpolationMarkerPreprocessor);\r\n\t}\r\n\t\r\n\tvar ko_punches_attributeInterpolationMarkup = ko_punches.attributeInterpolationMarkup = {\r\n\t    preprocessor: attributeInterpolationMarkerPreprocessor,\r\n\t    enable: enableAttributeInterpolationMarkup,\r\n\t    attributeBinding: attributeBinding\r\n\t};\r\n\t\r\n\t    return ko_punches;\r\n\t}));\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/**\n\t * lodash (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modularize exports=\"npm\" -o ./`\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar MAX_SAFE_INTEGER = 9007199254740991,\n\t    NAN = 0 / 0;\n\t\n\t/** `Object#toString` result references. */\n\tvar funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]',\n\t    symbolTag = '[object Symbol]';\n\t\n\t/** Used to match leading and trailing whitespace. */\n\tvar reTrim = /^\\s+|\\s+$/g;\n\t\n\t/** Used to detect bad signed hexadecimal string values. */\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t/** Used to detect binary string values. */\n\tvar reIsBinary = /^0b[01]+$/i;\n\t\n\t/** Used to detect octal string values. */\n\tvar reIsOctal = /^0o[0-7]+$/i;\n\t\n\t/** Used to detect unsigned integer values. */\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t/** Built-in method references without a dependency on `root`. */\n\tvar freeParseInt = parseInt;\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objectToString = objectProto.toString;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeCeil = Math.ceil,\n\t    nativeMax = Math.max;\n\t\n\t/**\n\t * The base implementation of `_.property` without support for deep paths.\n\t *\n\t * @private\n\t * @param {string} key The key of the property to get.\n\t * @returns {Function} Returns the new accessor function.\n\t */\n\tfunction baseProperty(key) {\n\t  return function(object) {\n\t    return object == null ? undefined : object[key];\n\t  };\n\t}\n\t\n\t/**\n\t * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t * coerce arguments to numbers.\n\t *\n\t * @private\n\t * @param {number} start The start of the range.\n\t * @param {number} end The end of the range.\n\t * @param {number} step The value to increment or decrement by.\n\t * @param {boolean} [fromRight] Specify iterating from right to left.\n\t * @returns {Array} Returns the range of numbers.\n\t */\n\tfunction baseRange(start, end, step, fromRight) {\n\t  var index = -1,\n\t      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t      result = Array(length);\n\t\n\t  while (length--) {\n\t    result[fromRight ? length : ++index] = start;\n\t    start += step;\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * Creates a `_.range` or `_.rangeRight` function.\n\t *\n\t * @private\n\t * @param {boolean} [fromRight] Specify iterating from right to left.\n\t * @returns {Function} Returns the new range function.\n\t */\n\tfunction createRange(fromRight) {\n\t  return function(start, end, step) {\n\t    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t      end = step = undefined;\n\t    }\n\t    // Ensure the sign of `-0` is preserved.\n\t    start = toNumber(start);\n\t    start = start === start ? start : 0;\n\t    if (end === undefined) {\n\t      end = start;\n\t      start = 0;\n\t    } else {\n\t      end = toNumber(end) || 0;\n\t    }\n\t    step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n\t    return baseRange(start, end, step, fromRight);\n\t  };\n\t}\n\t\n\t/**\n\t * Gets the \"length\" property value of `object`.\n\t *\n\t * **Note:** This function is used to avoid a\n\t * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n\t * Safari on at least iOS 8.1-8.3 ARM64.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {*} Returns the \"length\" value.\n\t */\n\tvar getLength = baseProperty('length');\n\t\n\t/**\n\t * Checks if `value` is a valid array-like index.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t */\n\tfunction isIndex(value, length) {\n\t  length = length == null ? MAX_SAFE_INTEGER : length;\n\t  return !!length &&\n\t    (typeof value == 'number' || reIsUint.test(value)) &&\n\t    (value > -1 && value % 1 == 0 && value < length);\n\t}\n\t\n\t/**\n\t * Checks if the given arguments are from an iteratee call.\n\t *\n\t * @private\n\t * @param {*} value The potential iteratee value argument.\n\t * @param {*} index The potential iteratee index or key argument.\n\t * @param {*} object The potential iteratee object argument.\n\t * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t *  else `false`.\n\t */\n\tfunction isIterateeCall(value, index, object) {\n\t  if (!isObject(object)) {\n\t    return false;\n\t  }\n\t  var type = typeof index;\n\t  if (type == 'number'\n\t        ? (isArrayLike(object) && isIndex(index, object.length))\n\t        : (type == 'string' && index in object)\n\t      ) {\n\t    return eq(object[index], value);\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Performs a\n\t * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t * comparison between two values to determine if they are equivalent.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to compare.\n\t * @param {*} other The other value to compare.\n\t * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t * @example\n\t *\n\t * var object = { 'user': 'fred' };\n\t * var other = { 'user': 'fred' };\n\t *\n\t * _.eq(object, object);\n\t * // => true\n\t *\n\t * _.eq(object, other);\n\t * // => false\n\t *\n\t * _.eq('a', 'a');\n\t * // => true\n\t *\n\t * _.eq('a', Object('a'));\n\t * // => false\n\t *\n\t * _.eq(NaN, NaN);\n\t * // => true\n\t */\n\tfunction eq(value, other) {\n\t  return value === other || (value !== value && other !== other);\n\t}\n\t\n\t/**\n\t * Checks if `value` is array-like. A value is considered array-like if it's\n\t * not a function and has a `value.length` that's an integer greater than or\n\t * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t * @example\n\t *\n\t * _.isArrayLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLike(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLike('abc');\n\t * // => true\n\t *\n\t * _.isArrayLike(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLike(value) {\n\t  return value != null && isLength(getLength(value)) && !isFunction(value);\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t  var tag = isObject(value) ? objectToString.call(value) : '';\n\t  return tag == funcTag || tag == genTag;\n\t}\n\t\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This function is loosely based on\n\t * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isLength(3);\n\t * // => true\n\t *\n\t * _.isLength(Number.MIN_VALUE);\n\t * // => false\n\t *\n\t * _.isLength(Infinity);\n\t * // => false\n\t *\n\t * _.isLength('3');\n\t * // => false\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' &&\n\t    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\t\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Symbol` primitive or object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isSymbol(Symbol.iterator);\n\t * // => true\n\t *\n\t * _.isSymbol('abc');\n\t * // => false\n\t */\n\tfunction isSymbol(value) {\n\t  return typeof value == 'symbol' ||\n\t    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t}\n\t\n\t/**\n\t * Converts `value` to a number.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to process.\n\t * @returns {number} Returns the number.\n\t * @example\n\t *\n\t * _.toNumber(3.2);\n\t * // => 3.2\n\t *\n\t * _.toNumber(Number.MIN_VALUE);\n\t * // => 5e-324\n\t *\n\t * _.toNumber(Infinity);\n\t * // => Infinity\n\t *\n\t * _.toNumber('3.2');\n\t * // => 3.2\n\t */\n\tfunction toNumber(value) {\n\t  if (typeof value == 'number') {\n\t    return value;\n\t  }\n\t  if (isSymbol(value)) {\n\t    return NAN;\n\t  }\n\t  if (isObject(value)) {\n\t    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t    value = isObject(other) ? (other + '') : other;\n\t  }\n\t  if (typeof value != 'string') {\n\t    return value === 0 ? value : +value;\n\t  }\n\t  value = value.replace(reTrim, '');\n\t  var isBinary = reIsBinary.test(value);\n\t  return (isBinary || reIsOctal.test(value))\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t    : (reIsBadHex.test(value) ? NAN : +value);\n\t}\n\t\n\t/**\n\t * Creates an array of numbers (positive and/or negative) progressing from\n\t * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t * it's set to `start` with `start` then set to `0`.\n\t *\n\t * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t * floating-point values which can produce unexpected results.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Util\n\t * @param {number} [start=0] The start of the range.\n\t * @param {number} end The end of the range.\n\t * @param {number} [step=1] The value to increment or decrement by.\n\t * @returns {Array} Returns the range of numbers.\n\t * @see _.inRange, _.rangeRight\n\t * @example\n\t *\n\t * _.range(4);\n\t * // => [0, 1, 2, 3]\n\t *\n\t * _.range(-4);\n\t * // => [0, -1, -2, -3]\n\t *\n\t * _.range(1, 5);\n\t * // => [1, 2, 3, 4]\n\t *\n\t * _.range(0, 20, 5);\n\t * // => [0, 5, 10, 15]\n\t *\n\t * _.range(0, -4, -1);\n\t * // => [0, -1, -2, -3]\n\t *\n\t * _.range(1, 4, 0);\n\t * // => [1, 1, 1]\n\t *\n\t * _.range(0);\n\t * // => []\n\t */\n\tvar range = createRange();\n\t\n\tmodule.exports = range;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(5);\n\tif(typeof content === 'string') content = [[module.i, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./DateMonth.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./DateMonth.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(6);\n\tif(typeof content === 'string') content = [[module.i, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./bootstrap.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./bootstrap.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tget: function() { return module.l; }\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tget: function() { return module.i; }\r\n\t\t\t});\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(3);\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** DateMonth.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 281f44e4e08f7411ae8a\n **/","/*!\n * Knockout JavaScript library v3.4.0\n * (c) Steven Sanderson - http://knockoutjs.com/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function(){\nvar DEBUG=true;\n(function(undefined){\n    // (0, eval)('this') is a robust way of getting a reference to the global object\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n    var window = this || (0, eval)('this'),\n        document = window['document'],\n        navigator = window['navigator'],\n        jQueryInstance = window[\"jQuery\"],\n        JSON = window[\"JSON\"];\n(function(factory) {\n    // Support three module loading scenarios\n    if (typeof define === 'function' && define['amd']) {\n        // [1] AMD anonymous module\n        define(['exports', 'require'], factory);\n    } else if (typeof exports === 'object' && typeof module === 'object') {\n        // [2] CommonJS/Node.js\n        factory(module['exports'] || exports);  // module.exports is for Node.js\n    } else {\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\n        factory(window['ko'] = {});\n    }\n}(function(koExports, amdRequire){\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\n// Google Closure Compiler helpers (used only to make the minified file smaller)\nko.exportSymbol = function(koPath, object) {\n    var tokens = koPath.split(\".\");\n\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n    var target = ko;\n\n    for (var i = 0; i < tokens.length - 1; i++)\n        target = target[tokens[i]];\n    target[tokens[tokens.length - 1]] = object;\n};\nko.exportProperty = function(owner, publicName, object) {\n    owner[publicName] = object;\n};\nko.version = \"3.4.0\";\n\nko.exportSymbol('version', ko.version);\n// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\nko.options = {\n    'deferUpdates': false,\n    'useOnlyNativeEvents': false\n};\n\n//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\nko.utils = (function () {\n    function objectForEach(obj, action) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                action(prop, obj[prop]);\n            }\n        }\n    }\n\n    function extend(target, source) {\n        if (source) {\n            for(var prop in source) {\n                if(source.hasOwnProperty(prop)) {\n                    target[prop] = source[prop];\n                }\n            }\n        }\n        return target;\n    }\n\n    function setPrototypeOf(obj, proto) {\n        obj.__proto__ = proto;\n        return obj;\n    }\n\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\n\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n    var knownEvents = {}, knownEventTypesByEventName = {};\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n        if (knownEventsForType.length) {\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n        }\n    });\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\n    var ieVersion = document && (function() {\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n        while (\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n            iElems[0]\n        ) {}\n        return version > 4 ? version : undefined;\n    }());\n    var isIe6 = ieVersion === 6,\n        isIe7 = ieVersion === 7;\n\n    function isClickOnCheckableElement(element, eventType) {\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n        if (eventType.toLowerCase() != \"click\") return false;\n        var inputType = element.type;\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\n    }\n\n    // For details on the pattern for changing node classes\n    // see: https://github.com/knockout/knockout/issues/1597\n    var cssClassNameRegex = /\\S+/g;\n\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n        var addOrRemoveFn;\n        if (classNames) {\n            if (typeof node.classList === 'object') {\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n                    addOrRemoveFn.call(node.classList, className);\n                });\n            } else if (typeof node.className['baseVal'] === 'string') {\n                // SVG tag .classNames is an SVGAnimatedString instance\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n            } else {\n                // node.className ought to be a string.\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n            }\n        }\n    }\n\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n        });\n        obj[prop] = currentClassNames.join(\" \");\n    }\n\n    return {\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\n        arrayForEach: function (array, action) {\n            for (var i = 0, j = array.length; i < j; i++)\n                action(array[i], i);\n        },\n\n        arrayIndexOf: function (array, item) {\n            if (typeof Array.prototype.indexOf == \"function\")\n                return Array.prototype.indexOf.call(array, item);\n            for (var i = 0, j = array.length; i < j; i++)\n                if (array[i] === item)\n                    return i;\n            return -1;\n        },\n\n        arrayFirst: function (array, predicate, predicateOwner) {\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate.call(predicateOwner, array[i], i))\n                    return array[i];\n            return null;\n        },\n\n        arrayRemoveItem: function (array, itemToRemove) {\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n            if (index > 0) {\n                array.splice(index, 1);\n            }\n            else if (index === 0) {\n                array.shift();\n            }\n        },\n\n        arrayGetDistinctValues: function (array) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++) {\n                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\n                    result.push(array[i]);\n            }\n            return result;\n        },\n\n        arrayMap: function (array, mapping) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                result.push(mapping(array[i], i));\n            return result;\n        },\n\n        arrayFilter: function (array, predicate) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate(array[i], i))\n                    result.push(array[i]);\n            return result;\n        },\n\n        arrayPushAll: function (array, valuesToPush) {\n            if (valuesToPush instanceof Array)\n                array.push.apply(array, valuesToPush);\n            else\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\n                    array.push(valuesToPush[i]);\n            return array;\n        },\n\n        addOrRemoveItem: function(array, value, included) {\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n            if (existingEntryIndex < 0) {\n                if (included)\n                    array.push(value);\n            } else {\n                if (!included)\n                    array.splice(existingEntryIndex, 1);\n            }\n        },\n\n        canSetPrototype: canSetPrototype,\n\n        extend: extend,\n\n        setPrototypeOf: setPrototypeOf,\n\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\n        objectForEach: objectForEach,\n\n        objectMap: function(source, mapping) {\n            if (!source)\n                return source;\n            var target = {};\n            for (var prop in source) {\n                if (source.hasOwnProperty(prop)) {\n                    target[prop] = mapping(source[prop], prop, source);\n                }\n            }\n            return target;\n        },\n\n        emptyDomNode: function (domNode) {\n            while (domNode.firstChild) {\n                ko.removeNode(domNode.firstChild);\n            }\n        },\n\n        moveCleanedNodesToContainerElement: function(nodes) {\n            // Ensure it's a real array, as we're about to reparent the nodes and\n            // we don't want the underlying collection to change while we're doing that.\n            var nodesArray = ko.utils.makeArray(nodes);\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\n            var container = templateDocument.createElement('div');\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\n                container.appendChild(ko.cleanNode(nodesArray[i]));\n            }\n            return container;\n        },\n\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n                var clonedNode = nodesArray[i].cloneNode(true);\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n            }\n            return newNodesArray;\n        },\n\n        setDomNodeChildren: function (domNode, childNodes) {\n            ko.utils.emptyDomNode(domNode);\n            if (childNodes) {\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    domNode.appendChild(childNodes[i]);\n            }\n        },\n\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n            if (nodesToReplaceArray.length > 0) {\n                var insertionPoint = nodesToReplaceArray[0];\n                var parent = insertionPoint.parentNode;\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n                    ko.removeNode(nodesToReplaceArray[i]);\n                }\n            }\n        },\n\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n            //\n            // Rules:\n            //   [A] Any leading nodes that have been removed should be ignored\n            //       These most likely correspond to memoization nodes that were already removed during binding\n            //       See https://github.com/knockout/knockout/pull/440\n            //   [B] Any trailing nodes that have been remove should be ignored\n            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\n            //       See https://github.com/knockout/knockout/pull/1903\n            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n            //       and include any nodes that have been inserted among the previous collection\n\n            if (continuousNodeArray.length) {\n                // The parent node can be a virtual element; so get the real parent node\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\n                // Rule [A]\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n                    continuousNodeArray.splice(0, 1);\n\n                // Rule [B]\n                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\n                    continuousNodeArray.length--;\n\n                // Rule [C]\n                if (continuousNodeArray.length > 1) {\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n                    // Replace with the actual new continuous node set\n                    continuousNodeArray.length = 0;\n                    while (current !== last) {\n                        continuousNodeArray.push(current);\n                        current = current.nextSibling;\n                    }\n                    continuousNodeArray.push(last);\n                }\n            }\n            return continuousNodeArray;\n        },\n\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n            if (ieVersion < 7)\n                optionNode.setAttribute(\"selected\", isSelected);\n            else\n                optionNode.selected = isSelected;\n        },\n\n        stringTrim: function (string) {\n            return string === null || string === undefined ? '' :\n                string.trim ?\n                    string.trim() :\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n        },\n\n        stringStartsWith: function (string, startsWith) {\n            string = string || \"\";\n            if (startsWith.length > string.length)\n                return false;\n            return string.substring(0, startsWith.length) === startsWith;\n        },\n\n        domNodeIsContainedBy: function (node, containedByNode) {\n            if (node === containedByNode)\n                return true;\n            if (node.nodeType === 11)\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n            if (containedByNode.contains)\n                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\n            if (containedByNode.compareDocumentPosition)\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n            while (node && node != containedByNode) {\n                node = node.parentNode;\n            }\n            return !!node;\n        },\n\n        domNodeIsAttachedToDocument: function (node) {\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n        },\n\n        anyDomNodeIsAttachedToDocument: function(nodes) {\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n        },\n\n        tagNameLower: function(element) {\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n            return element && element.tagName && element.tagName.toLowerCase();\n        },\n\n        catchFunctionErrors: function (delegate) {\n            return ko['onError'] ? function () {\n                try {\n                    return delegate.apply(this, arguments);\n                } catch (e) {\n                    ko['onError'] && ko['onError'](e);\n                    throw e;\n                }\n            } : delegate;\n        },\n\n        setTimeout: function (handler, timeout) {\n            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\n        },\n\n        deferError: function (error) {\n            setTimeout(function () {\n                ko['onError'] && ko['onError'](error);\n                throw error;\n            }, 0);\n        },\n\n        registerEventHandler: function (element, eventType, handler) {\n            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\n\n            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\n                jQueryInstance(element)['bind'](eventType, wrappedHandler);\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n                element.addEventListener(eventType, wrappedHandler, false);\n            else if (typeof element.attachEvent != \"undefined\") {\n                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\n                    attachEventName = \"on\" + eventType;\n                element.attachEvent(attachEventName, attachEventHandler);\n\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n                // so to avoid leaks, we have to remove them manually. See bug #856\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n                    element.detachEvent(attachEventName, attachEventHandler);\n                });\n            } else\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n        },\n\n        triggerEvent: function (element, eventType) {\n            if (!(element && element.nodeType))\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n            // In both cases, we'll use the click method instead.\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\n            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\n                jQueryInstance(element)['trigger'](eventType);\n            } else if (typeof document.createEvent == \"function\") {\n                if (typeof element.dispatchEvent == \"function\") {\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n                    var event = document.createEvent(eventCategory);\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n                    element.dispatchEvent(event);\n                }\n                else\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n            } else if (useClickWorkaround && element.click) {\n                element.click();\n            } else if (typeof element.fireEvent != \"undefined\") {\n                element.fireEvent(\"on\" + eventType);\n            } else {\n                throw new Error(\"Browser doesn't support triggering events\");\n            }\n        },\n\n        unwrapObservable: function (value) {\n            return ko.isObservable(value) ? value() : value;\n        },\n\n        peekObservable: function (value) {\n            return ko.isObservable(value) ? value.peek() : value;\n        },\n\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\n        setTextContent: function(element, textContent) {\n            var value = ko.utils.unwrapObservable(textContent);\n            if ((value === null) || (value === undefined))\n                value = \"\";\n\n            // We need there to be exactly one child: a text node.\n            // If there are no children, more than one, or if it's not a text node,\n            // we'll clear everything and create a single text node.\n            var innerTextNode = ko.virtualElements.firstChild(element);\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n            } else {\n                innerTextNode.data = value;\n            }\n\n            ko.utils.forceRefresh(element);\n        },\n\n        setElementName: function(element, name) {\n            element.name = name;\n\n            // Workaround IE 6/7 issue\n            // - https://github.com/SteveSanderson/knockout/issues/197\n            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n            if (ieVersion <= 7) {\n                try {\n                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\n                }\n                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n            }\n        },\n\n        forceRefresh: function(node) {\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n            if (ieVersion >= 9) {\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n                var elem = node.nodeType == 1 ? node : node.parentNode;\n                if (elem.style)\n                    elem.style.zoom = elem.style.zoom;\n            }\n        },\n\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n            if (ieVersion) {\n                var originalWidth = selectElement.style.width;\n                selectElement.style.width = 0;\n                selectElement.style.width = originalWidth;\n            }\n        },\n\n        range: function (min, max) {\n            min = ko.utils.unwrapObservable(min);\n            max = ko.utils.unwrapObservable(max);\n            var result = [];\n            for (var i = min; i <= max; i++)\n                result.push(i);\n            return result;\n        },\n\n        makeArray: function(arrayLikeObject) {\n            var result = [];\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n                result.push(arrayLikeObject[i]);\n            };\n            return result;\n        },\n\n        createSymbolOrString: function(identifier) {\n            return canUseSymbols ? Symbol(identifier) : identifier;\n        },\n\n        isIe6 : isIe6,\n        isIe7 : isIe7,\n        ieVersion : ieVersion,\n\n        getFormFields: function(form, fieldName) {\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n            var isMatchingField = (typeof fieldName == 'string')\n                ? function(field) { return field.name === fieldName }\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n            var matches = [];\n            for (var i = fields.length - 1; i >= 0; i--) {\n                if (isMatchingField(fields[i]))\n                    matches.push(fields[i]);\n            };\n            return matches;\n        },\n\n        parseJson: function (jsonString) {\n            if (typeof jsonString == \"string\") {\n                jsonString = ko.utils.stringTrim(jsonString);\n                if (jsonString) {\n                    if (JSON && JSON.parse) // Use native parsing where available\n                        return JSON.parse(jsonString);\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n                }\n            }\n            return null;\n        },\n\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n            if (!JSON || !JSON.stringify)\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n        },\n\n        postJson: function (urlOrForm, data, options) {\n            options = options || {};\n            var params = options['params'] || {};\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n            var url = urlOrForm;\n\n            // If we were given a form, use its 'action' URL and pick out any requested field values\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n                var originalForm = urlOrForm;\n                url = originalForm.action;\n                for (var i = includeFields.length - 1; i >= 0; i--) {\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n                    for (var j = fields.length - 1; j >= 0; j--)\n                        params[fields[j].name] = fields[j].value;\n                }\n            }\n\n            data = ko.utils.unwrapObservable(data);\n            var form = document.createElement(\"form\");\n            form.style.display = \"none\";\n            form.action = url;\n            form.method = \"post\";\n            for (var key in data) {\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n                form.appendChild(input);\n            }\n            objectForEach(params, function(key, value) {\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = value;\n                form.appendChild(input);\n            });\n            document.body.appendChild(form);\n            options['submitter'] ? options['submitter'](form) : form.submit();\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n        }\n    }\n}());\n\nko.exportSymbol('utils', ko.utils);\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\nko.exportSymbol('utils.extend', ko.utils.extend);\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\nko.exportSymbol('utils.postJson', ko.utils.postJson);\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\nko.exportSymbol('utils.range', ko.utils.range);\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\nif (!Function.prototype['bind']) {\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n    Function.prototype['bind'] = function (object) {\n        var originalFunction = this;\n        if (arguments.length === 1) {\n            return function () {\n                return originalFunction.apply(object, arguments);\n            };\n        } else {\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\n            return function () {\n                var args = partialArgs.slice(0);\n                args.push.apply(args, arguments);\n                return originalFunction.apply(object, args);\n            };\n        }\n    };\n}\n\nko.utils.domData = new (function () {\n    var uniqueId = 0;\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n    var dataStore = {};\n\n    function getAll(node, createIfNotFound) {\n        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n        if (!hasExistingDataStore) {\n            if (!createIfNotFound)\n                return undefined;\n            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n            dataStore[dataStoreKey] = {};\n        }\n        return dataStore[dataStoreKey];\n    }\n\n    return {\n        get: function (node, key) {\n            var allDataForNode = getAll(node, false);\n            return allDataForNode === undefined ? undefined : allDataForNode[key];\n        },\n        set: function (node, key, value) {\n            if (value === undefined) {\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\n                if (getAll(node, false) === undefined)\n                    return;\n            }\n            var allDataForNode = getAll(node, true);\n            allDataForNode[key] = value;\n        },\n        clear: function (node) {\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n            if (dataStoreKey) {\n                delete dataStore[dataStoreKey];\n                node[dataStoreKeyExpandoPropertyName] = null;\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n            }\n            return false;\n        },\n\n        nextKey: function () {\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n        }\n    };\n})();\n\nko.exportSymbol('utils.domData', ko.utils.domData);\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\nko.utils.domNodeDisposal = new (function () {\n    var domDataKey = ko.utils.domData.nextKey();\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n            allDisposeCallbacks = [];\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n        }\n        return allDisposeCallbacks;\n    }\n    function destroyCallbacksCollection(node) {\n        ko.utils.domData.set(node, domDataKey, undefined);\n    }\n\n    function cleanSingleNode(node) {\n        // Run all the dispose callbacks\n        var callbacks = getDisposeCallbacksCollection(node, false);\n        if (callbacks) {\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n            for (var i = 0; i < callbacks.length; i++)\n                callbacks[i](node);\n        }\n\n        // Erase the DOM data\n        ko.utils.domData.clear(node);\n\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\n            cleanImmediateCommentTypeChildren(node);\n    }\n\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n        var child, nextChild = nodeWithChildren.firstChild;\n        while (child = nextChild) {\n            nextChild = child.nextSibling;\n            if (child.nodeType === 8)\n                cleanSingleNode(child);\n        }\n    }\n\n    return {\n        addDisposeCallback : function(node, callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"Callback must be a function\");\n            getDisposeCallbacksCollection(node, true).push(callback);\n        },\n\n        removeDisposeCallback : function(node, callback) {\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n            if (callbacksCollection) {\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n                if (callbacksCollection.length == 0)\n                    destroyCallbacksCollection(node);\n            }\n        },\n\n        cleanNode : function(node) {\n            // First clean this node, where applicable\n            if (cleanableNodeTypes[node.nodeType]) {\n                cleanSingleNode(node);\n\n                // ... then its descendants, where applicable\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n                    // Clone the descendants list in case it changes during iteration\n                    var descendants = [];\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n                    for (var i = 0, j = descendants.length; i < j; i++)\n                        cleanSingleNode(descendants[i]);\n                }\n            }\n            return node;\n        },\n\n        removeNode : function(node) {\n            ko.cleanNode(node);\n            if (node.parentNode)\n                node.parentNode.removeChild(node);\n        },\n\n        \"cleanExternalData\" : function (node) {\n            // Special support for jQuery here because it's so commonly used.\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n            // so notify it to tear down any resources associated with the node & descendants here.\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n                jQueryInstance['cleanData']([node]);\n        }\n    };\n})();\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\nko.exportSymbol('cleanNode', ko.cleanNode);\nko.exportSymbol('removeNode', ko.removeNode);\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n(function () {\n    var none = [0, \"\", \"\"],\n        table = [1, \"<table>\", \"</table>\"],\n        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\n        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\n        lookup = {\n            'thead': table,\n            'tbody': table,\n            'tfoot': table,\n            'tr': tbody,\n            'td': tr,\n            'th': tr,\n            'option': select,\n            'optgroup': select\n        },\n\n        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\n        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\n\n    function getWrap(tags) {\n        var m = tags.match(/^<([a-z]+)[ >]/);\n        return (m && lookup[m[1]]) || none;\n    }\n\n    function simpleHtmlParse(html, documentContext) {\n        documentContext || (documentContext = document);\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\n        // Trim whitespace, otherwise indexOf won't work as expected\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\n            wrap = getWrap(tags),\n            depth = wrap[0];\n\n        // Go to html and back, then peel off extra wrappers\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n        if (typeof windowContext['innerShiv'] == \"function\") {\n            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n            // somehow shims the native APIs so it just works anyway)\n            div.appendChild(windowContext['innerShiv'](markup));\n        } else {\n            if (mayRequireCreateElementHack) {\n                // The document.createElement('my-element') trick to enable custom elements in IE6-8\n                // only works if we assign innerHTML on an element associated with that document.\n                documentContext.appendChild(div);\n            }\n\n            div.innerHTML = markup;\n\n            if (mayRequireCreateElementHack) {\n                div.parentNode.removeChild(div);\n            }\n        }\n\n        // Move to the right depth\n        while (depth--)\n            div = div.lastChild;\n\n        return ko.utils.makeArray(div.lastChild.childNodes);\n    }\n\n    function jQueryHtmlParse(html, documentContext) {\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n        if (jQueryInstance['parseHTML']) {\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n        } else {\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n            var elems = jQueryInstance['clean']([html], documentContext);\n\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n            if (elems && elems[0]) {\n                // Find the top-most parent element that's a direct child of a document fragment\n                var elem = elems[0];\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n                    elem = elem.parentNode;\n                // ... then detach it\n                if (elem.parentNode)\n                    elem.parentNode.removeChild(elem);\n            }\n\n            return elems;\n        }\n    }\n\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\n        return jQueryInstance ?\n            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\n            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n    };\n\n    ko.utils.setHtml = function(node, html) {\n        ko.utils.emptyDomNode(node);\n\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n        html = ko.utils.unwrapObservable(html);\n\n        if ((html !== null) && (html !== undefined)) {\n            if (typeof html != 'string')\n                html = html.toString();\n\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n            // for example <tr> elements which are not normally allowed to exist on their own.\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\n            if (jQueryInstance) {\n                jQueryInstance(node)['html'](html);\n            } else {\n                // ... otherwise, use KO's own parsing logic.\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n                for (var i = 0; i < parsedNodes.length; i++)\n                    node.appendChild(parsedNodes[i]);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\nko.memoization = (function () {\n    var memos = {};\n\n    function randomMax8HexChars() {\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n    }\n    function generateRandomId() {\n        return randomMax8HexChars() + randomMax8HexChars();\n    }\n    function findMemoNodes(rootNode, appendToArray) {\n        if (!rootNode)\n            return;\n        if (rootNode.nodeType == 8) {\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n            if (memoId != null)\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\n        } else if (rootNode.nodeType == 1) {\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n                findMemoNodes(childNodes[i], appendToArray);\n        }\n    }\n\n    return {\n        memoize: function (callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n            var memoId = generateRandomId();\n            memos[memoId] = callback;\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n        },\n\n        unmemoize: function (memoId, callbackParams) {\n            var callback = memos[memoId];\n            if (callback === undefined)\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n            try {\n                callback.apply(null, callbackParams || []);\n                return true;\n            }\n            finally { delete memos[memoId]; }\n        },\n\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n            var memos = [];\n            findMemoNodes(domNode, memos);\n            for (var i = 0, j = memos.length; i < j; i++) {\n                var node = memos[i].domNode;\n                var combinedParams = [node];\n                if (extraCallbackParamsArray)\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n                if (node.parentNode)\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n            }\n        },\n\n        parseMemoText: function (memoText) {\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n            return match ? match[1] : null;\n        }\n    };\n})();\n\nko.exportSymbol('memoization', ko.memoization);\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\nko.tasks = (function () {\n    var scheduler,\n        taskQueue = [],\n        taskQueueLength = 0,\n        nextHandle = 1,\n        nextIndexToProcess = 0;\n\n    if (window['MutationObserver']) {\n        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n        scheduler = (function (callback) {\n            var div = document.createElement(\"div\");\n            new MutationObserver(callback).observe(div, {attributes: true});\n            return function () { div.classList.toggle(\"foo\"); };\n        })(scheduledProcess);\n    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n        // IE 6-10\n        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n        scheduler = function (callback) {\n            var script = document.createElement(\"script\");\n            script.onreadystatechange = function () {\n                script.onreadystatechange = null;\n                document.documentElement.removeChild(script);\n                script = null;\n                callback();\n            };\n            document.documentElement.appendChild(script);\n        };\n    } else {\n        scheduler = function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n\n    function processTasks() {\n        if (taskQueueLength) {\n            // Each mark represents the end of a logical group of tasks and the number of these groups is\n            // limited to prevent unchecked recursion.\n            var mark = taskQueueLength, countMarks = 0;\n\n            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n            for (var task; nextIndexToProcess < taskQueueLength; ) {\n                if (task = taskQueue[nextIndexToProcess++]) {\n                    if (nextIndexToProcess > mark) {\n                        if (++countMarks >= 5000) {\n                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                            break;\n                        }\n                        mark = taskQueueLength;\n                    }\n                    try {\n                        task();\n                    } catch (ex) {\n                        ko.utils.deferError(ex);\n                    }\n                }\n            }\n        }\n    }\n\n    function scheduledProcess() {\n        processTasks();\n\n        // Reset the queue\n        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    }\n\n    function scheduleTaskProcessing() {\n        ko.tasks['scheduler'](scheduledProcess);\n    }\n\n    var tasks = {\n        'scheduler': scheduler,     // Allow overriding the scheduler\n\n        schedule: function (func) {\n            if (!taskQueueLength) {\n                scheduleTaskProcessing();\n            }\n\n            taskQueue[taskQueueLength++] = func;\n            return nextHandle++;\n        },\n\n        cancel: function (handle) {\n            var index = handle - (nextHandle - taskQueueLength);\n            if (index >= nextIndexToProcess && index < taskQueueLength) {\n                taskQueue[index] = null;\n            }\n        },\n\n        // For testing only: reset the queue and return the previous queue length\n        'resetForTesting': function () {\n            var length = taskQueueLength - nextIndexToProcess;\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n            return length;\n        },\n\n        runEarly: processTasks\n    };\n\n    return tasks;\n})();\n\nko.exportSymbol('tasks', ko.tasks);\nko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\nko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\nko.extenders = {\n    'throttle': function(target, timeout) {\n        // Throttling means two things:\n\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n        target['throttleEvaluation'] = timeout;\n\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n        //     so the target cannot change value synchronously or faster than a certain rate\n        var writeTimeoutInstance = null;\n        return ko.dependentObservable({\n            'read': target,\n            'write': function(value) {\n                clearTimeout(writeTimeoutInstance);\n                writeTimeoutInstance = ko.utils.setTimeout(function() {\n                    target(value);\n                }, timeout);\n            }\n        });\n    },\n\n    'rateLimit': function(target, options) {\n        var timeout, method, limitFunction;\n\n        if (typeof options == 'number') {\n            timeout = options;\n        } else {\n            timeout = options['timeout'];\n            method = options['method'];\n        }\n\n        // rateLimit supersedes deferred updates\n        target._deferUpdates = false;\n\n        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\n        target.limit(function(callback) {\n            return limitFunction(callback, timeout);\n        });\n    },\n\n    'deferred': function(target, options) {\n        if (options !== true) {\n            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\n        }\n\n        if (!target._deferUpdates) {\n            target._deferUpdates = true;\n            target.limit(function (callback) {\n                var handle;\n                return function () {\n                    ko.tasks.cancel(handle);\n                    handle = ko.tasks.schedule(callback);\n                    target['notifySubscribers'](undefined, 'dirty');\n                };\n            });\n        }\n    },\n\n    'notify': function(target, notifyWhen) {\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n            null :  // null equalityComparer means to always notify\n            valuesArePrimitiveAndEqual;\n    }\n};\n\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\nfunction valuesArePrimitiveAndEqual(a, b) {\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n    return oldValueIsPrimitive ? (a === b) : false;\n}\n\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = ko.utils.setTimeout(function () {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = ko.utils.setTimeout(callback, timeout);\n    };\n}\n\nfunction applyExtenders(requestedExtenders) {\n    var target = this;\n    if (requestedExtenders) {\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n            var extenderHandler = ko.extenders[key];\n            if (typeof extenderHandler == 'function') {\n                target = extenderHandler(target, value) || target;\n            }\n        });\n    }\n    return target;\n}\n\nko.exportSymbol('extenders', ko.extenders);\n\nko.subscription = function (target, callback, disposeCallback) {\n    this._target = target;\n    this.callback = callback;\n    this.disposeCallback = disposeCallback;\n    this.isDisposed = false;\n    ko.exportProperty(this, 'dispose', this.dispose);\n};\nko.subscription.prototype.dispose = function () {\n    this.isDisposed = true;\n    this.disposeCallback();\n};\n\nko.subscribable = function () {\n    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n    ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = \"change\";\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n    if (!event || event === defaultEvent) {\n        this._limitChange(value);\n    } else if (event === 'beforeChange') {\n        this._limitBeforeChange(value);\n    } else {\n        this._origNotifySubscribers(value, event);\n    }\n}\n\nvar ko_subscribable_fn = {\n    init: function(instance) {\n        instance._subscriptions = {};\n        instance._versionNumber = 1;\n    },\n\n    subscribe: function (callback, callbackTarget, event) {\n        var self = this;\n\n        event = event || defaultEvent;\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n        var subscription = new ko.subscription(self, boundCallback, function () {\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n            if (self.afterSubscriptionRemove)\n                self.afterSubscriptionRemove(event);\n        });\n\n        if (self.beforeSubscriptionAdd)\n            self.beforeSubscriptionAdd(event);\n\n        if (!self._subscriptions[event])\n            self._subscriptions[event] = [];\n        self._subscriptions[event].push(subscription);\n\n        return subscription;\n    },\n\n    \"notifySubscribers\": function (valueToNotify, event) {\n        event = event || defaultEvent;\n        if (event === defaultEvent) {\n            this.updateVersion();\n        }\n        if (this.hasSubscriptionsForEvent(event)) {\n            try {\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n                for (var a = this._subscriptions[event].slice(0), i = 0, subscription; subscription = a[i]; ++i) {\n                    // In case a subscription was disposed during the arrayForEach cycle, check\n                    // for isDisposed on each subscription before invoking its callback\n                    if (!subscription.isDisposed)\n                        subscription.callback(valueToNotify);\n                }\n            } finally {\n                ko.dependencyDetection.end(); // End suppressing dependency detection\n            }\n        }\n    },\n\n    getVersion: function () {\n        return this._versionNumber;\n    },\n\n    hasChanged: function (versionToCheck) {\n        return this.getVersion() !== versionToCheck;\n    },\n\n    updateVersion: function () {\n        ++this._versionNumber;\n    },\n\n    limit: function(limitFunction) {\n        var self = this, selfIsObservable = ko.isObservable(self),\n            ignoreBeforeChange, previousValue, pendingValue, beforeChange = 'beforeChange';\n\n        if (!self._origNotifySubscribers) {\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\n            self[\"notifySubscribers\"] = limitNotifySubscribers;\n        }\n\n        var finish = limitFunction(function() {\n            self._notificationIsPending = false;\n\n            // If an observable provided a reference to itself, access it to get the latest value.\n            // This allows computed observables to delay calculating their value until needed.\n            if (selfIsObservable && pendingValue === self) {\n                pendingValue = self();\n            }\n            ignoreBeforeChange = false;\n            if (self.isDifferent(previousValue, pendingValue)) {\n                self._origNotifySubscribers(previousValue = pendingValue);\n            }\n        });\n\n        self._limitChange = function(value) {\n            self._notificationIsPending = ignoreBeforeChange = true;\n            pendingValue = value;\n            finish();\n        };\n        self._limitBeforeChange = function(value) {\n            if (!ignoreBeforeChange) {\n                previousValue = value;\n                self._origNotifySubscribers(value, beforeChange);\n            }\n        };\n    },\n\n    hasSubscriptionsForEvent: function(event) {\n        return this._subscriptions[event] && this._subscriptions[event].length;\n    },\n\n    getSubscriptionsCount: function (event) {\n        if (event) {\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n        } else {\n            var total = 0;\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n                if (eventName !== 'dirty')\n                    total += subscriptions.length;\n            });\n            return total;\n        }\n    },\n\n    isDifferent: function(oldValue, newValue) {\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n    },\n\n    extend: applyExtenders\n};\n\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n}\n\nko.subscribable['fn'] = ko_subscribable_fn;\n\n\nko.isSubscribable = function (instance) {\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n};\n\nko.exportSymbol('subscribable', ko.subscribable);\nko.exportSymbol('isSubscribable', ko.isSubscribable);\n\nko.computedContext = ko.dependencyDetection = (function () {\n    var outerFrames = [],\n        currentFrame,\n        lastId = 0;\n\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\n    // Theoretically, you could eventually overflow the number storage size, resulting\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n    // take over 285 years to reach that number.\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n    function getId() {\n        return ++lastId;\n    }\n\n    function begin(options) {\n        outerFrames.push(currentFrame);\n        currentFrame = options;\n    }\n\n    function end() {\n        currentFrame = outerFrames.pop();\n    }\n\n    return {\n        begin: begin,\n\n        end: end,\n\n        registerDependency: function (subscribable) {\n            if (currentFrame) {\n                if (!ko.isSubscribable(subscribable))\n                    throw new Error(\"Only subscribable things can act as dependencies\");\n                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\n            }\n        },\n\n        ignore: function (callback, callbackTarget, callbackArgs) {\n            try {\n                begin();\n                return callback.apply(callbackTarget, callbackArgs || []);\n            } finally {\n                end();\n            }\n        },\n\n        getDependenciesCount: function () {\n            if (currentFrame)\n                return currentFrame.computed.getDependenciesCount();\n        },\n\n        isInitial: function() {\n            if (currentFrame)\n                return currentFrame.isInitial;\n        }\n    };\n})();\n\nko.exportSymbol('computedContext', ko.computedContext);\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\n\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\nvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\n\nko.observable = function (initialValue) {\n    function observable() {\n        if (arguments.length > 0) {\n            // Write\n\n            // Ignore writes if the value hasn't changed\n            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\n                observable.valueWillMutate();\n                observable[observableLatestValue] = arguments[0];\n                observable.valueHasMutated();\n            }\n            return this; // Permits chained assignments\n        }\n        else {\n            // Read\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n            return observable[observableLatestValue];\n        }\n    }\n\n    observable[observableLatestValue] = initialValue;\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(observable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(observable);\n\n    // Inherit from 'observable'\n    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](observable, true);\n    }\n\n    return observable;\n}\n\n// Define prototype for observables\nvar observableFn = {\n    'equalityComparer': valuesArePrimitiveAndEqual,\n    peek: function() { return this[observableLatestValue]; },\n    valueHasMutated: function () { this['notifySubscribers'](this[observableLatestValue]); },\n    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observable constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\n}\n\nvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\nobservableFn[protoProperty] = ko.observable;\n\nko.hasPrototype = function(instance, prototype) {\n    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\n    if (instance[protoProperty] === prototype) return true;\n    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n};\n\nko.isObservable = function (instance) {\n    return ko.hasPrototype(instance, ko.observable);\n}\nko.isWriteableObservable = function (instance) {\n    // Observable\n    if ((typeof instance == 'function') && instance[protoProperty] === ko.observable)\n        return true;\n    // Writeable dependent observable\n    if ((typeof instance == 'function') && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\n        return true;\n    // Anything else\n    return false;\n}\n\nko.exportSymbol('observable', ko.observable);\nko.exportSymbol('isObservable', ko.isObservable);\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\nko.exportSymbol('observable.fn', observableFn);\nko.exportProperty(observableFn, 'peek', observableFn.peek);\nko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\nko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\nko.observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (typeof initialValues != 'object' || !('length' in initialValues))\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\n    var result = ko.observable(initialValues);\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n    return result.extend({'trackArrayChanges':true});\n};\n\nko.observableArray['fn'] = {\n    'remove': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var removedValues = [];\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        for (var i = 0; i < underlyingArray.length; i++) {\n            var value = underlyingArray[i];\n            if (predicate(value)) {\n                if (removedValues.length === 0) {\n                    this.valueWillMutate();\n                }\n                removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (removedValues.length) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    'removeAll': function (arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            var underlyingArray = this.peek();\n            var allValues = underlyingArray.slice(0);\n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        if (!arrayOfValues)\n            return [];\n        return this['remove'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'destroy': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        this.valueWillMutate();\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n            var value = underlyingArray[i];\n            if (predicate(value))\n                underlyingArray[i][\"_destroy\"] = true;\n        }\n        this.valueHasMutated();\n    },\n\n    'destroyAll': function (arrayOfValues) {\n        // If you passed zero args, we destroy everything\n        if (arrayOfValues === undefined)\n            return this['destroy'](function() { return true });\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        if (!arrayOfValues)\n            return [];\n        return this['destroy'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'indexOf': function (item) {\n        var underlyingArray = this();\n        return ko.utils.arrayIndexOf(underlyingArray, item);\n    },\n\n    'replace': function(oldItem, newItem) {\n        var index = this['indexOf'](oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            this.peek()[index] = newItem;\n            this.valueHasMutated();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        var underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n        return methodCallResult === underlyingArray ? this : methodCallResult;\n    };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\nko.utils.arrayForEach([\"slice\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        var underlyingArray = this();\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\n    };\n});\n\nko.exportSymbol('observableArray', ko.observableArray);\nvar arrayChangeEventName = 'arrayChange';\nko.extenders['trackArrayChanges'] = function(target, options) {\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n    target.compareArrayOptions = {};\n    if (options && typeof options == \"object\") {\n        ko.utils.extend(target.compareArrayOptions, options);\n    }\n    target.compareArrayOptions['sparse'] = true;\n\n    // Only modify the target observable once\n    if (target.cacheDiffForKnownOperation) {\n        return;\n    }\n    var trackingChanges = false,\n        cachedDiff = null,\n        arrayChangeSubscription,\n        pendingNotifications = 0,\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n    target.beforeSubscriptionAdd = function (event) {\n        if (underlyingBeforeSubscriptionAddFunction)\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\n        if (event === arrayChangeEventName) {\n            trackChanges();\n        }\n    };\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n    target.afterSubscriptionRemove = function (event) {\n        if (underlyingAfterSubscriptionRemoveFunction)\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n            arrayChangeSubscription.dispose();\n            trackingChanges = false;\n        }\n    };\n\n    function trackChanges() {\n        // Calling 'trackChanges' multiple times is the same as calling it once\n        if (trackingChanges) {\n            return;\n        }\n\n        trackingChanges = true;\n\n        // Intercept \"notifySubscribers\" to track how many times it was called.\n        var underlyingNotifySubscribersFunction = target['notifySubscribers'];\n        target['notifySubscribers'] = function(valueToNotify, event) {\n            if (!event || event === defaultEvent) {\n                ++pendingNotifications;\n            }\n            return underlyingNotifySubscribersFunction.apply(this, arguments);\n        };\n\n        // Each time the array changes value, capture a clone so that on the next\n        // change it's possible to produce a diff\n        var previousContents = [].concat(target.peek() || []);\n        cachedDiff = null;\n        arrayChangeSubscription = target.subscribe(function(currentContents) {\n            // Make a copy of the current contents and ensure it's an array\n            currentContents = [].concat(currentContents || []);\n\n            // Compute the diff and issue notifications, but only if someone is listening\n            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n                var changes = getChanges(previousContents, currentContents);\n            }\n\n            // Eliminate references to the old, removed items, so they can be GCed\n            previousContents = currentContents;\n            cachedDiff = null;\n            pendingNotifications = 0;\n\n            if (changes && changes.length) {\n                target['notifySubscribers'](changes, arrayChangeEventName);\n            }\n        });\n    }\n\n    function getChanges(previousContents, currentContents) {\n        // We try to re-use cached diffs.\n        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\n        if (!cachedDiff || pendingNotifications > 1) {\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n        }\n\n        return cachedDiff;\n    }\n\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n        // Only run if we're currently tracking changes for this observable array\n        // and there aren't any pending deferred notifications.\n        if (!trackingChanges || pendingNotifications) {\n            return;\n        }\n        var diff = [],\n            arrayLength = rawArray.length,\n            argsLength = args.length,\n            offset = 0;\n\n        function pushDiff(status, value, index) {\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n        }\n        switch (operationName) {\n            case 'push':\n                offset = arrayLength;\n            case 'unshift':\n                for (var index = 0; index < argsLength; index++) {\n                    pushDiff('added', args[index], offset + index);\n                }\n                break;\n\n            case 'pop':\n                offset = arrayLength - 1;\n            case 'shift':\n                if (arrayLength) {\n                    pushDiff('deleted', rawArray[offset], offset);\n                }\n                break;\n\n            case 'splice':\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n                    endAddIndex = startIndex + argsLength - 2,\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n                    additions = [], deletions = [];\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n                    if (index < endDeleteIndex)\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\n                    if (index < endAddIndex)\n                        additions.push(pushDiff('added', args[argsIndex], index));\n                }\n                ko.utils.findMovesInArrayComparison(deletions, additions);\n                break;\n\n            default:\n                return;\n        }\n        cachedDiff = diff;\n    };\n};\nvar computedState = ko.utils.createSymbolOrString('_state');\n\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\n        // Single-parameter syntax - everything is on this \"options\" param\n        options = evaluatorFunctionOrOptions;\n    } else {\n        // Multi-parameter syntax - construct the options according to the params passed\n        options = options || {};\n        if (evaluatorFunctionOrOptions) {\n            options[\"read\"] = evaluatorFunctionOrOptions;\n        }\n    }\n    if (typeof options[\"read\"] != \"function\")\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\n\n    var writeFunction = options[\"write\"];\n    var state = {\n        latestValue: undefined,\n        isStale: true,\n        isBeingEvaluated: false,\n        suppressDisposalUntilDisposeWhenReturnsFalse: false,\n        isDisposed: false,\n        pure: false,\n        isSleeping: false,\n        readFunction: options[\"read\"],\n        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\n        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\n        domNodeDisposalCallback: null,\n        dependencyTracking: {},\n        dependenciesCount: 0,\n        evaluationTimeoutInstance: null\n    };\n\n    function computedObservable() {\n        if (arguments.length > 0) {\n            if (typeof writeFunction === \"function\") {\n                // Writing a value\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n            } else {\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n            }\n            return this; // Permits chained assignments\n        } else {\n            // Reading the value\n            ko.dependencyDetection.registerDependency(computedObservable);\n            if (state.isStale || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\n                computedObservable.evaluateImmediate();\n            }\n            return state.latestValue;\n        }\n    }\n\n    computedObservable[computedState] = state;\n    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(computedObservable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(computedObservable);\n\n    // Inherit from 'computed'\n    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\n\n    if (options['pure']) {\n        state.pure = true;\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n        ko.utils.extend(computedObservable, pureComputedOverrides);\n    } else if (options['deferEvaluation']) {\n        ko.utils.extend(computedObservable, deferEvaluationOverrides);\n    }\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](computedObservable, true);\n    }\n\n    if (DEBUG) {\n        // #1731 - Aid debugging by exposing the computed's options\n        computedObservable[\"_options\"] = options;\n    }\n\n    if (state.disposeWhenNodeIsRemoved) {\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n        // be documented or used by application code, as it's likely to change in a future version of KO.\n        if (!state.disposeWhenNodeIsRemoved.nodeType) {\n            state.disposeWhenNodeIsRemoved = null;\n        }\n    }\n\n    // Evaluate, unless sleeping or deferEvaluation is true\n    if (!state.isSleeping && !options['deferEvaluation']) {\n        computedObservable.evaluateImmediate();\n    }\n\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\n        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\n            computedObservable.dispose();\n        });\n    }\n\n    return computedObservable;\n};\n\n// Utility function that disposes a given dependencyTracking entry\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\n    if (entryToDispose !== null && entryToDispose.dispose) {\n        entryToDispose.dispose();\n    }\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n    var computedObservable = this.computedObservable,\n        state = computedObservable[computedState];\n    if (!state.isDisposed) {\n        if (this.disposalCount && this.disposalCandidates[id]) {\n            // Don't want to dispose this subscription, as it's still being used\n            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n            --this.disposalCount;\n        } else if (!state.dependencyTracking[id]) {\n            // Brand new subscription - add it\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\n        }\n    }\n}\n\nvar computedFn = {\n    \"equalityComparer\": valuesArePrimitiveAndEqual,\n    getDependenciesCount: function () {\n        return this[computedState].dependenciesCount;\n    },\n    addDependencyTracking: function (id, target, trackingObj) {\n        if (this[computedState].pure && target === this) {\n            throw Error(\"A 'pure' computed must not be called recursively\");\n        }\n\n        this[computedState].dependencyTracking[id] = trackingObj;\n        trackingObj._order = this[computedState].dependenciesCount++;\n        trackingObj._version = target.getVersion();\n    },\n    haveDependenciesChanged: function () {\n        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\n        for (id in dependencyTracking) {\n            if (dependencyTracking.hasOwnProperty(id)) {\n                dependency = dependencyTracking[id];\n                if (dependency._target.hasChanged(dependency._version)) {\n                    return true;\n                }\n            }\n        }\n    },\n    markDirty: function () {\n        // Process \"dirty\" events if we can handle delayed notifications\n        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n            this._evalDelayed();\n        }\n    },\n    isActive: function () {\n        return this[computedState].isStale || this[computedState].dependenciesCount > 0;\n    },\n    respondToChange: function () {\n        // Ignore \"change\" events if we've already scheduled a delayed notification\n        if (!this._notificationIsPending) {\n            this.evaluatePossiblyAsync();\n        }\n    },\n    subscribeToDependency: function (target) {\n        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\n            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n                changeSub = target.subscribe(this.respondToChange, this);\n            return {\n                _target: target,\n                dispose: function () {\n                    dirtySub.dispose();\n                    changeSub.dispose();\n                }\n            };\n        } else {\n            return target.subscribe(this.evaluatePossiblyAsync, this);\n        }\n    },\n    evaluatePossiblyAsync: function () {\n        var computedObservable = this,\n            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n            clearTimeout(this[computedState].evaluationTimeoutInstance);\n            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\n                computedObservable.evaluateImmediate(true /*notifyChange*/);\n            }, throttleEvaluationTimeout);\n        } else if (computedObservable._evalDelayed) {\n            computedObservable._evalDelayed();\n        } else {\n            computedObservable.evaluateImmediate(true /*notifyChange*/);\n        }\n    },\n    evaluateImmediate: function (notifyChange) {\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            disposeWhen = state.disposeWhen;\n\n        if (state.isBeingEvaluated) {\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n            return;\n        }\n\n        // Do not evaluate (and possibly capture new dependencies) if disposed\n        if (state.isDisposed) {\n            return;\n        }\n\n        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n                computedObservable.dispose();\n                return;\n            }\n        } else {\n            // It just did return false, so we can stop suppressing now\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n        }\n\n        state.isBeingEvaluated = true;\n        try {\n            this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n        } finally {\n            state.isBeingEvaluated = false;\n        }\n\n        if (!state.dependenciesCount) {\n            computedObservable.dispose();\n        }\n    },\n    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n        var computedObservable = this,\n            state = computedObservable[computedState];\n\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n        // Then, during evaluation, we cross off any that are in fact still being used.\n        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n            dependencyDetectionContext = {\n                computedObservable: computedObservable,\n                disposalCandidates: state.dependencyTracking,\n                disposalCount: state.dependenciesCount\n            };\n\n        ko.dependencyDetection.begin({\n            callbackTarget: dependencyDetectionContext,\n            callback: computedBeginDependencyDetectionCallback,\n            computed: computedObservable,\n            isInitial: isInitial\n        });\n\n        state.dependencyTracking = {};\n        state.dependenciesCount = 0;\n\n        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n        if (computedObservable.isDifferent(state.latestValue, newValue)) {\n            if (!state.isSleeping) {\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\n            }\n\n            state.latestValue = newValue;\n\n            if (state.isSleeping) {\n                computedObservable.updateVersion();\n            } else if (notifyChange) {\n                computedObservable[\"notifySubscribers\"](state.latestValue);\n            }\n        }\n\n        if (isInitial) {\n            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n        }\n    },\n    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n        // overhead of computed evaluation (on V8 at least).\n\n        try {\n            var readFunction = state.readFunction;\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n        } finally {\n            ko.dependencyDetection.end();\n\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n            }\n\n            state.isStale = false;\n        }\n    },\n    peek: function () {\n        // Peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n        var state = this[computedState];\n        if ((state.isStale && !state.dependenciesCount) || (state.isSleeping && this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return state.latestValue;\n    },\n    limit: function (limitFunction) {\n        // Override the limit function with one that delays evaluation as well\n        ko.subscribable['fn'].limit.call(this, limitFunction);\n        this._evalDelayed = function () {\n            this._limitBeforeChange(this[computedState].latestValue);\n\n            this[computedState].isStale = true; // Mark as dirty\n\n            // Pass the observable to the \"limit\" code, which will access it when\n            // it's time to do the notification.\n            this._limitChange(this);\n        }\n    },\n    dispose: function () {\n        var state = this[computedState];\n        if (!state.isSleeping && state.dependencyTracking) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose)\n                    dependency.dispose();\n            });\n        }\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n        }\n        state.dependencyTracking = null;\n        state.dependenciesCount = 0;\n        state.isDisposed = true;\n        state.isStale = false;\n        state.isSleeping = false;\n        state.disposeWhenNodeIsRemoved = null;\n    }\n};\n\nvar pureComputedOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // If asleep, wake up the computed by subscribing to any dependencies.\n        var computedObservable = this,\n            state = computedObservable[computedState];\n        if (!state.isDisposed && state.isSleeping && event == 'change') {\n            state.isSleeping = false;\n            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n                state.dependencyTracking = null;\n                state.dependenciesCount = 0;\n                state.isStale = true;\n                computedObservable.evaluateImmediate();\n            } else {\n                // First put the dependencies in order\n                var dependeciesOrder = [];\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                    dependeciesOrder[dependency._order] = id;\n                });\n                // Next, subscribe to each one\n                ko.utils.arrayForEach(dependeciesOrder, function (id, order) {\n                    var dependency = state.dependencyTracking[id],\n                        subscription = computedObservable.subscribeToDependency(dependency._target);\n                    subscription._order = order;\n                    subscription._version = dependency._version;\n                    state.dependencyTracking[id] = subscription;\n                });\n            }\n            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n            }\n        }\n    },\n    afterSubscriptionRemove: function (event) {\n        var state = this[computedState];\n        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose) {\n                    state.dependencyTracking[id] = {\n                        _target: dependency._target,\n                        _order: dependency._order,\n                        _version: dependency._version\n                    };\n                    dependency.dispose();\n                }\n            });\n            state.isSleeping = true;\n            this[\"notifySubscribers\"](undefined, \"asleep\");\n        }\n    },\n    getVersion: function () {\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\n        // simply return the version number. Instead, we check if any of the dependencies have\n        // changed and conditionally re-evaluate the computed observable.\n        var state = this[computedState];\n        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return ko.subscribable['fn'].getVersion.call(this);\n    }\n};\n\nvar deferEvaluationOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n        if (event == 'change' || event == 'beforeChange') {\n            this.peek();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\n}\n\n// Set the proto chain values for ko.hasPrototype\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\nko.computed[protoProp] = ko.observable;\ncomputedFn[protoProp] = ko.computed;\n\nko.isComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed);\n};\n\nko.isPureComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed)\n        && instance[computedState] && instance[computedState].pure;\n};\n\nko.exportSymbol('computed', ko.computed);\nko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\nko.exportSymbol('isComputed', ko.isComputed);\nko.exportSymbol('isPureComputed', ko.isPureComputed);\nko.exportSymbol('computed.fn', computedFn);\nko.exportProperty(computedFn, 'peek', computedFn.peek);\nko.exportProperty(computedFn, 'dispose', computedFn.dispose);\nko.exportProperty(computedFn, 'isActive', computedFn.isActive);\nko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\n\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n    if (typeof evaluatorFunctionOrOptions === 'function') {\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n    } else {\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n        evaluatorFunctionOrOptions['pure'] = true;\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n    }\n}\nko.exportSymbol('pureComputed', ko.pureComputed);\n\n(function() {\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\n    ko.toJS = function(rootObject) {\n        if (arguments.length == 0)\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n        // We just unwrap everything at every level in the object graph\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\n            // Loop because an observable's value might in turn be another observable wrapper\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n                valueToMap = valueToMap();\n            return valueToMap;\n        });\n    };\n\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n        var plainJavaScriptObject = ko.toJS(rootObject);\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n    };\n\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n        visitedObjects = visitedObjects || new objectLookup();\n\n        rootObject = mapInputCallback(rootObject);\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n        if (!canHaveProperties)\n            return rootObject;\n\n        var outputProperties = rootObject instanceof Array ? [] : {};\n        visitedObjects.save(rootObject, outputProperties);\n\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n            var propertyValue = mapInputCallback(rootObject[indexer]);\n\n            switch (typeof propertyValue) {\n                case \"boolean\":\n                case \"number\":\n                case \"string\":\n                case \"function\":\n                    outputProperties[indexer] = propertyValue;\n                    break;\n                case \"object\":\n                case \"undefined\":\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n                        ? previouslyMappedValue\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n                    break;\n            }\n        });\n\n        return outputProperties;\n    }\n\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n        if (rootObject instanceof Array) {\n            for (var i = 0; i < rootObject.length; i++)\n                visitorCallback(i);\n\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n            if (typeof rootObject['toJSON'] == 'function')\n                visitorCallback('toJSON');\n        } else {\n            for (var propertyName in rootObject) {\n                visitorCallback(propertyName);\n            }\n        }\n    };\n\n    function objectLookup() {\n        this.keys = [];\n        this.values = [];\n    };\n\n    objectLookup.prototype = {\n        constructor: objectLookup,\n        save: function(key, value) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            if (existingIndex >= 0)\n                this.values[existingIndex] = value;\n            else {\n                this.keys.push(key);\n                this.values.push(value);\n            }\n        },\n        get: function(key) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n        }\n    };\n})();\n\nko.exportSymbol('toJS', ko.toJS);\nko.exportSymbol('toJSON', ko.toJSON);\n(function () {\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n    ko.selectExtensions = {\n        readValue : function(element) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (element[hasDomDataExpandoProperty] === true)\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n                    return ko.utils.ieVersion <= 7\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n                        : element.value;\n                case 'select':\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n                default:\n                    return element.value;\n            }\n        },\n\n        writeValue: function(element, value, allowUnset) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    switch(typeof value) {\n                        case \"string\":\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n                                delete element[hasDomDataExpandoProperty];\n                            }\n                            element.value = value;\n                            break;\n                        default:\n                            // Store arbitrary object using DomData\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n                            element[hasDomDataExpandoProperty] = true;\n\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n                            element.value = typeof value === \"number\" ? value : \"\";\n                            break;\n                    }\n                    break;\n                case 'select':\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n                        value = undefined;\n                    var selection = -1;\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n                        // Include special check to handle selecting a caption with a blank string value\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n                            selection = i;\n                            break;\n                        }\n                    }\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n                        element.selectedIndex = selection;\n                    }\n                    break;\n                default:\n                    if ((value === null) || (value === undefined))\n                        value = \"\";\n                    element.value = value;\n                    break;\n            }\n        }\n    };\n})();\n\nko.exportSymbol('selectExtensions', ko.selectExtensions);\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\nko.expressionRewriting = (function () {\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\n    function getWriteableValue(expression) {\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n            return false;\n        var match = expression.match(javaScriptAssignmentTarget);\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n    }\n\n    // The following regular expressions will be used to split an object-literal string into tokens\n\n        // These two match strings, either with double quotes or single quotes\n    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\n        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\n        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\n        // as a regular expression (this is handled by the parsing loop below).\n        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\n        // These characters have special meaning to the parser and must not appear in the middle of a\n        // token, except as part of a string.\n        specials = ',\"\\'{}()/:[\\\\]',\n        // Match text (at least two characters) that does not contain any of the above special characters,\n        // although some of the special characters are allowed to start it (all but the colon and comma).\n        // The text can contain spaces, but leading or trailing spaces are skipped.\n        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n        // Match any non-space character not matched already. This will match colons and commas, since they're\n        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n        oneNotSpace = '[^\\\\s]',\n\n        // Create the actual regular expression by or-ing the above strings. The order is important.\n        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\n\n        // Match end of previous token to determine whether a slash is a division or regex.\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\n    function parseObjectLiteral(objectLiteralString) {\n        // Trim leading and trailing spaces from the string\n        var str = ko.utils.stringTrim(objectLiteralString);\n\n        // Trim braces '{' surrounding the whole object literal\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\n        // Split into tokens\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\n        if (toks) {\n            // Append a comma so that we don't need a separate code block to deal with the last item\n            toks.push(',');\n\n            for (var i = 0, tok; tok = toks[i]; ++i) {\n                var c = tok.charCodeAt(0);\n                // A comma signals the end of a key/value pair if depth is zero\n                if (c === 44) { // \",\"\n                    if (depth <= 0) {\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n                        key = depth = 0;\n                        values = [];\n                        continue;\n                    }\n                // Simply skip the colon that separates the name and value\n                } else if (c === 58) { // \":\"\n                    if (!depth && !key && values.length === 1) {\n                        key = values.pop();\n                        continue;\n                    }\n                // A set of slashes is initially matched as a regular expression, but could be division\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n                    // Look at the end of the previous token to determine if the slash is actually division\n                    var match = toks[i-1].match(divisionLookBehind);\n                    if (match && !keywordRegexLookBehind[match[0]]) {\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n                        str = str.substr(str.indexOf(tok) + 1);\n                        toks = str.match(bindingToken);\n                        toks.push(',');\n                        i = -1;\n                        // Continue with just the slash\n                        tok = '/';\n                    }\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n                    ++depth;\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n                    --depth;\n                // The key will be the first token; if it's a string, trim the quotes\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n                    tok = tok.slice(1, -1);\n                }\n                values.push(tok);\n            }\n        }\n        return result;\n    }\n\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n    var twoWayBindings = {};\n\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n        bindingOptions = bindingOptions || {};\n\n        function processKeyValue(key, val) {\n            var writableVal;\n            function callPreprocessHook(obj) {\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n            }\n            if (!bindingParams) {\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n                    return;\n\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n                    // For two-way bindings, provide a write method in case the value\n                    // isn't a writable observable.\n                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\n                }\n            }\n            // Values are wrapped in a function so that each value can be accessed independently\n            if (makeValueAccessors) {\n                val = 'function(){return ' + val + ' }';\n            }\n            resultStrings.push(\"'\" + key + \"':\" + val);\n        }\n\n        var resultStrings = [],\n            propertyAccessorResultStrings = [],\n            makeValueAccessors = bindingOptions['valueAccessors'],\n            bindingParams = bindingOptions['bindingParams'],\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n        });\n\n        if (propertyAccessorResultStrings.length)\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\n        return resultStrings.join(\",\");\n    }\n\n    return {\n        bindingRewriteValidators: [],\n\n        twoWayBindings: twoWayBindings,\n\n        parseObjectLiteral: parseObjectLiteral,\n\n        preProcessBindings: preProcessBindings,\n\n        keyValueArrayContainsKey: function(keyValueArray, key) {\n            for (var i = 0; i < keyValueArray.length; i++)\n                if (keyValueArray[i]['key'] == key)\n                    return true;\n            return false;\n        },\n\n        // Internal, private KO utility for updating model properties from within bindings\n        // property:            If the property being updated is (or might be) an observable, pass it here\n        //                      If it turns out to be a writable observable, it will be written to directly\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n        // value:               The value to be written\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n        //                      it is !== existing value on that writable observable\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n            if (!property || !ko.isObservable(property)) {\n                var propWriters = allBindings.get('_ko_property_writers');\n                if (propWriters && propWriters[key])\n                    propWriters[key](value);\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n                property(value);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n// as an internal implementation detail in the short term.\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n(function() {\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n    // of that virtual hierarchy\n    //\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n    // without having to scatter special cases all over the binding and templating code.\n\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n    // So, use node.text where available, and node.nodeValue elsewhere\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\n    function isStartComment(node) {\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function isEndComment(node) {\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function getVirtualChildren(startComment, allowUnbalanced) {\n        var currentNode = startComment;\n        var depth = 1;\n        var children = [];\n        while (currentNode = currentNode.nextSibling) {\n            if (isEndComment(currentNode)) {\n                depth--;\n                if (depth === 0)\n                    return children;\n            }\n\n            children.push(currentNode);\n\n            if (isStartComment(currentNode))\n                depth++;\n        }\n        if (!allowUnbalanced)\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n        return null;\n    }\n\n    function getMatchingEndComment(startComment, allowUnbalanced) {\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n        if (allVirtualChildren) {\n            if (allVirtualChildren.length > 0)\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n            return startComment.nextSibling;\n        } else\n            return null; // Must have no matching end comment, and allowUnbalanced is true\n    }\n\n    function getUnbalancedChildTags(node) {\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n        var childNode = node.firstChild, captureRemaining = null;\n        if (childNode) {\n            do {\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n                    captureRemaining.push(childNode);\n                else if (isStartComment(childNode)) {\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n                        childNode = matchingEndComment;\n                    else\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n                } else if (isEndComment(childNode)) {\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n                }\n            } while (childNode = childNode.nextSibling);\n        }\n        return captureRemaining;\n    }\n\n    ko.virtualElements = {\n        allowedBindings: {},\n\n        childNodes: function(node) {\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n        },\n\n        emptyNode: function(node) {\n            if (!isStartComment(node))\n                ko.utils.emptyDomNode(node);\n            else {\n                var virtualChildren = ko.virtualElements.childNodes(node);\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\n                    ko.removeNode(virtualChildren[i]);\n            }\n        },\n\n        setDomNodeChildren: function(node, childNodes) {\n            if (!isStartComment(node))\n                ko.utils.setDomNodeChildren(node, childNodes);\n            else {\n                ko.virtualElements.emptyNode(node);\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n            }\n        },\n\n        prepend: function(containerNode, nodeToPrepend) {\n            if (!isStartComment(containerNode)) {\n                if (containerNode.firstChild)\n                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\n                else\n                    containerNode.appendChild(nodeToPrepend);\n            } else {\n                // Start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\n            }\n        },\n\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n            if (!insertAfterNode) {\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\n            } else if (!isStartComment(containerNode)) {\n                // Insert after insertion point\n                if (insertAfterNode.nextSibling)\n                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n                else\n                    containerNode.appendChild(nodeToInsert);\n            } else {\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n            }\n        },\n\n        firstChild: function(node) {\n            if (!isStartComment(node))\n                return node.firstChild;\n            if (!node.nextSibling || isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        nextSibling: function(node) {\n            if (isStartComment(node))\n                node = getMatchingEndComment(node);\n            if (node.nextSibling && isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        hasBindingValue: isStartComment,\n\n        virtualNodeBindingValue: function(node) {\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n            return regexMatch ? regexMatch[1] : null;\n        },\n\n        normaliseVirtualElementDomStructure: function(elementVerified) {\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n            // that are direct descendants of <ul> into the preceding <li>)\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n                return;\n\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n            // must be intended to appear *after* that child, so move them there.\n            var childNode = elementVerified.firstChild;\n            if (childNode) {\n                do {\n                    if (childNode.nodeType === 1) {\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\n                        if (unbalancedTags) {\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n                            var nodeToInsertBefore = childNode.nextSibling;\n                            for (var i = 0; i < unbalancedTags.length; i++) {\n                                if (nodeToInsertBefore)\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n                                else\n                                    elementVerified.appendChild(unbalancedTags[i]);\n                            }\n                        }\n                    }\n                } while (childNode = childNode.nextSibling);\n            }\n        }\n    };\n})();\nko.exportSymbol('virtualElements', ko.virtualElements);\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n(function() {\n    var defaultBindingAttributeName = \"data-bind\";\n\n    ko.bindingProvider = function() {\n        this.bindingCache = {};\n    };\n\n    ko.utils.extend(ko.bindingProvider.prototype, {\n        'nodeHasBindings': function(node) {\n            switch (node.nodeType) {\n                case 1: // Element\n                    return node.getAttribute(defaultBindingAttributeName) != null\n                        || ko.components['getComponentNameForNode'](node);\n                case 8: // Comment node\n                    return ko.virtualElements.hasBindingValue(node);\n                default: return false;\n            }\n        },\n\n        'getBindings': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n        },\n\n        'getBindingAccessors': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'getBindingsString': function(node, bindingContext) {\n            switch (node.nodeType) {\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n                default: return null;\n            }\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n            try {\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n                return bindingFunction(bindingContext, node);\n            } catch (ex) {\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n                throw ex;\n            }\n        }\n    });\n\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n        return cache[cacheKey]\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n    }\n\n    function createBindingsStringEvaluator(bindingsString, options) {\n        // Build the source for a function that evaluates \"expression\"\n        // For each scope variable, add an extra level of \"with\" nesting\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n        return new Function(\"$context\", \"$element\", functionBody);\n    }\n})();\n\nko.exportSymbol('bindingProvider', ko.bindingProvider);\n(function () {\n    ko.bindingHandlers = {};\n\n    // The following element types will not be recursed into during binding.\n    var bindingDoesNotRecurseIntoElementTypes = {\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n        // because it's unexpected and a potential XSS issue.\n        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\n        // and because such elements' contents are always intended to be bound in a different context\n        // from where they appear in the document.\n        'script': true,\n        'textarea': true,\n        'template': true\n    };\n\n    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\n    ko['getBindingHandler'] = function(bindingKey) {\n        return ko.bindingHandlers[bindingKey];\n    };\n\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback) {\n\n        // The binding context object includes static properties for the current, parent, and root view models.\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\n        // any child contexts, must be updated when the view model is changed.\n        function updateContext() {\n            // Most of the time, the context will directly get a view model object, but if a function is given,\n            // we call the function to retrieve the view model. If the function accesses any observables or returns\n            // an observable, the dependency is tracked, and those observables can later cause the binding\n            // context to be updated.\n            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\n            if (parentContext) {\n                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\n                // parent context is updated, this context will also be updated.\n                if (parentContext._subscribable)\n                    parentContext._subscribable();\n\n                // Copy $root and any custom properties from the parent context\n                ko.utils.extend(self, parentContext);\n\n                // Because the above copy overwrites our own properties, we need to reset them.\n                // During the first execution, \"subscribable\" isn't set, so don't bother doing the update then.\n                if (subscribable) {\n                    self._subscribable = subscribable;\n                }\n            } else {\n                self['$parents'] = [];\n                self['$root'] = dataItem;\n\n                // Export 'ko' in the binding context so it will be available in bindings and templates\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n                // See https://github.com/SteveSanderson/knockout/issues/490\n                self['ko'] = ko;\n            }\n            self['$rawData'] = dataItemOrObservable;\n            self['$data'] = dataItem;\n            if (dataItemAlias)\n                self[dataItemAlias] = dataItem;\n\n            // The extendCallback function is provided when creating a child context or extending a context.\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n            // function could also add dependencies to this binding context.\n            if (extendCallback)\n                extendCallback(self, parentContext, dataItem);\n\n            return self['$data'];\n        }\n        function disposeWhen() {\n            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\n        }\n\n        var self = this,\n            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\n            nodes,\n            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\n\n        // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n        // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n        // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n        // the context object.\n        if (subscribable.isActive()) {\n            self._subscribable = subscribable;\n\n            // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n            subscribable['equalityComparer'] = null;\n\n            // We need to be able to dispose of this computed observable when it's no longer needed. This would be\n            // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\n            // we cannot assume that those nodes have any relation to each other. So instead we track any node that\n            // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\n\n            // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\n            nodes = [];\n            subscribable._addNode = function(node) {\n                nodes.push(node);\n                ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\n                    ko.utils.arrayRemoveItem(nodes, node);\n                    if (!nodes.length) {\n                        subscribable.dispose();\n                        self._subscribable = subscribable = undefined;\n                    }\n                });\n            };\n        }\n    }\n\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n    // any observables, the new child context will automatically get a dependency on the parent context.\n    // But this does not mean that the $data value of the child context will also get updated. If the child\n    // view model also depends on the parent view model, you must provide a function that returns the correct\n    // view model on each update.\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback) {\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\n            // Extend the context hierarchy by setting the appropriate pointers\n            self['$parentContext'] = parentContext;\n            self['$parent'] = parentContext['$data'];\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n            self['$parents'].unshift(self['$parent']);\n            if (extendCallback)\n                extendCallback(self);\n        });\n    };\n\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n    // when an observable view model is updated.\n    ko.bindingContext.prototype['extend'] = function(properties) {\n        // If the parent context references an observable view model, \"_subscribable\" will always be the\n        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\n        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\n            // This \"child\" context doesn't directly track a parent observable view model,\n            // so we need to manually set the $rawData value to match the parent.\n            self['$rawData'] = parentContext['$rawData'];\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\n        });\n    };\n\n    // Returns the valueAccesor function for a binding value\n    function makeValueAccessor(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    // Returns the value of a valueAccessor function\n    function evaluateValueAccessor(valueAccessor) {\n        return valueAccessor();\n    }\n\n    // Given a function that returns bindings, create and return a new object that contains\n    // binding value-accessors functions. Each accessor function calls the original function\n    // so that it always gets the latest value and all dependencies are captured. This is used\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n    function makeAccessorsFromFunction(callback) {\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n            return function() {\n                return callback()[key];\n            };\n        });\n    }\n\n    // Given a bindings function or object, create and return a new object that contains\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n    function makeBindingAccessors(bindings, context, node) {\n        if (typeof bindings === 'function') {\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n        } else {\n            return ko.utils.objectMap(bindings, makeValueAccessor);\n        }\n    }\n\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n    // It must be called with 'this' set to the provider instance.\n    function getBindingsAndMakeAccessors(node, context) {\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n    }\n\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n        var validator = ko.virtualElements.allowedBindings[bindingName];\n        if (!validator)\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n    }\n\n    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\n        var currentChild,\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\n            provider = ko.bindingProvider['instance'],\n            preprocessNode = provider['preprocessNode'];\n\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n        // trigger insertion of <template> contents at that point in the document.\n        if (preprocessNode) {\n            while (currentChild = nextInQueue) {\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n                preprocessNode.call(provider, currentChild);\n            }\n            // Reset nextInQueue for the next loop\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n        }\n\n        while (currentChild = nextInQueue) {\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n            nextInQueue = ko.virtualElements.nextSibling(currentChild);\n            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\n        }\n    }\n\n    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\n        var shouldBindDescendants = true;\n\n        // Perf optimisation: Apply bindings only if...\n        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\n        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n        var isElement = (nodeVerified.nodeType === 1);\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\n        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\n                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\n        if (shouldApplyBindings)\n            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\n\n        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\n            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\n            //    hence bindingContextsMayDifferFromDomParentElement is false\n            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\n            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\n            //    hence bindingContextsMayDifferFromDomParentElement is true\n            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\n        }\n    }\n\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\n\n    function topologicalSortBindings(bindings) {\n        // Depth-first sort\n        var result = [],                // The list of key/handler pairs that we will return\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n            if (!bindingsConsidered[bindingKey]) {\n                var binding = ko['getBindingHandler'](bindingKey);\n                if (binding) {\n                    // First add dependencies (if any) of the current binding\n                    if (binding['after']) {\n                        cyclicDependencyStack.push(bindingKey);\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n                            if (bindings[bindingDependencyKey]) {\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n                                } else {\n                                    pushBinding(bindingDependencyKey);\n                                }\n                            }\n                        });\n                        cyclicDependencyStack.length--;\n                    }\n                    // Next add the current binding\n                    result.push({ key: bindingKey, handler: binding });\n                }\n                bindingsConsidered[bindingKey] = true;\n            }\n        });\n\n        return result;\n    }\n\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\n        if (!sourceBindings) {\n            if (alreadyBound) {\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n            }\n            ko.utils.domData.set(node, boundElementDomDataKey, true);\n        }\n\n        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\n        // we can easily recover it just by scanning up the node's ancestors in the DOM\n        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\n        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\n            ko.storedBindingContextForNode(node, bindingContext);\n\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n        var bindings;\n        if (sourceBindings && typeof sourceBindings !== 'function') {\n            bindings = sourceBindings;\n        } else {\n            var provider = ko.bindingProvider['instance'],\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n            // the binding context is updated or if the binding provider accesses observables.\n            var bindingsUpdater = ko.dependentObservable(\n                function() {\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n                    // Register a dependency on the binding context to support observable view models.\n                    if (bindings && bindingContext._subscribable)\n                        bindingContext._subscribable();\n                    return bindings;\n                },\n                null, { disposeWhenNodeIsRemoved: node }\n            );\n\n            if (!bindings || !bindingsUpdater.isActive())\n                bindingsUpdater = null;\n        }\n\n        var bindingHandlerThatControlsDescendantBindings;\n        if (bindings) {\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n            // the latest binding value and registers a dependency on the binding updater.\n            var getValueAccessor = bindingsUpdater\n                ? function(bindingKey) {\n                    return function() {\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n                    };\n                } : function(bindingKey) {\n                    return bindings[bindingKey];\n                };\n\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n            function allBindings() {\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n            }\n            // The following is the 3.x allBindings API\n            allBindings['get'] = function(key) {\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n            };\n            allBindings['has'] = function(key) {\n                return key in bindings;\n            };\n\n            // First put the bindings into the right order\n            var orderedBindings = topologicalSortBindings(bindings);\n\n            // Go through the sorted bindings, calling init and update for each\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n                // so bindingKeyAndHandler.handler will always be nonnull.\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n                    bindingKey = bindingKeyAndHandler.key;\n\n                if (node.nodeType === 8) {\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n                }\n\n                try {\n                    // Run init, ignoring any dependencies\n                    if (typeof handlerInitFn == \"function\") {\n                        ko.dependencyDetection.ignore(function() {\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\n                            // If this binding handler claims to control descendant bindings, make a note of this\n                            if (initResult && initResult['controlsDescendantBindings']) {\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n                            }\n                        });\n                    }\n\n                    // Run update in its own computed wrapper\n                    if (typeof handlerUpdateFn == \"function\") {\n                        ko.dependentObservable(\n                            function() {\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n                            },\n                            null,\n                            { disposeWhenNodeIsRemoved: node }\n                        );\n                    }\n                } catch (ex) {\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n                    throw ex;\n                }\n            });\n        }\n\n        return {\n            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\n        };\n    };\n\n    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\n    ko.storedBindingContextForNode = function (node, bindingContext) {\n        if (arguments.length == 2) {\n            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\n            if (bindingContext._subscribable)\n                bindingContext._subscribable._addNode(node);\n        } else {\n            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\n        }\n    }\n\n    function getBindingContext(viewModelOrBindingContext) {\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n            ? viewModelOrBindingContext\n            : new ko.bindingContext(viewModelOrBindingContext);\n    }\n\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\n    };\n\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n        var context = getBindingContext(viewModelOrBindingContext);\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n    };\n\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n        if (!jQueryInstance && window['jQuery']) {\n            jQueryInstance = window['jQuery'];\n        }\n\n        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\n            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\n\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    // Retrieving binding context from arbitrary nodes\n    ko.contextFor = function(node) {\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n        switch (node.nodeType) {\n            case 1:\n            case 8:\n                var context = ko.storedBindingContextForNode(node);\n                if (context) return context;\n                if (node.parentNode) return ko.contextFor(node.parentNode);\n                break;\n        }\n        return undefined;\n    };\n    ko.dataFor = function(node) {\n        var context = ko.contextFor(node);\n        return context ? context['$data'] : undefined;\n    };\n\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n    ko.exportSymbol('applyBindings', ko.applyBindings);\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n    ko.exportSymbol('contextFor', ko.contextFor);\n    ko.exportSymbol('dataFor', ko.dataFor);\n})();\n(function(undefined) {\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\n    ko.components = {\n        get: function(componentName, callback) {\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n            if (cachedDefinition) {\n                // It's already loaded and cached. Reuse the same definition object.\n                // Note that for API consistency, even cache hits complete asynchronously by default.\n                // You can bypass this by putting synchronous:true on your component config.\n                if (cachedDefinition.isSynchronousComponent) {\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n                        callback(cachedDefinition.definition);\n                    });\n                } else {\n                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\n                }\n            } else {\n                // Join the loading process that is already underway, or start a new one.\n                loadComponentAndNotify(componentName, callback);\n            }\n        },\n\n        clearCachedDefinition: function(componentName) {\n            delete loadedDefinitionsCache[componentName];\n        },\n\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\n    };\n\n    function getObjectOwnProperty(obj, propName) {\n        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n    }\n\n    function loadComponentAndNotify(componentName, callback) {\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n            completedAsync;\n        if (!subscribable) {\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n            subscribable.subscribe(callback);\n\n            beginLoadingComponent(componentName, function(definition, config) {\n                var isSynchronousComponent = !!(config && config['synchronous']);\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n                delete loadingSubscribablesCache[componentName];\n\n                // For API consistency, all loads complete asynchronously. However we want to avoid\n                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n                // async).\n                //\n                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n                // flag on your component configuration when you register it.\n                if (completedAsync || isSynchronousComponent) {\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\n                    // See comment in loaderRegistryBehaviors.js for reasoning\n                    subscribable['notifySubscribers'](definition);\n                } else {\n                    ko.tasks.schedule(function() {\n                        subscribable['notifySubscribers'](definition);\n                    });\n                }\n            });\n            completedAsync = true;\n        } else {\n            subscribable.subscribe(callback);\n        }\n    }\n\n    function beginLoadingComponent(componentName, callback) {\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n            if (config) {\n                // We have a config, so now load its definition\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n                    callback(definition, config);\n                });\n            } else {\n                // The component has no config - it's unknown to all the loaders.\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\n                // process and this callback would not run. For this callback to run, all loaders must\n                // have confirmed they don't know about this component.\n                callback(null, null);\n            }\n        });\n    }\n\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n        // On the first call in the stack, start with the full set of loaders\n        if (!candidateLoaders) {\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n        }\n\n        // Try the next candidate\n        var currentCandidateLoader = candidateLoaders.shift();\n        if (currentCandidateLoader) {\n            var methodInstance = currentCandidateLoader[methodName];\n            if (methodInstance) {\n                var wasAborted = false,\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n                        if (wasAborted) {\n                            callback(null);\n                        } else if (result !== null) {\n                            // This candidate returned a value. Use it.\n                            callback(result);\n                        } else {\n                            // Try the next candidate\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n                        }\n                    }));\n\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n                // that we'll extend the API to support synchronous return values in the future. It won't be\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\n                if (synchronousReturnValue !== undefined) {\n                    wasAborted = true;\n\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\n                    // KO's specs running tidily, since we can observe the loading got aborted without\n                    // having exceptions cluttering up the console too.\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n                    }\n                }\n            } else {\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n            }\n        } else {\n            // No candidates returned a value\n            callback(null);\n        }\n    }\n\n    // Reference the loaders via string name so it's possible for developers\n    // to replace the whole array by assigning to ko.components.loaders\n    ko.components['loaders'] = [];\n\n    ko.exportSymbol('components', ko.components);\n    ko.exportSymbol('components.get', ko.components.get);\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n})();\n(function(undefined) {\n\n    // The default loader is responsible for two things:\n    // 1. Maintaining the default in-memory registry of component configuration objects\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n    // 2. Answering requests for components by fetching configuration objects\n    //    from that default in-memory registry and resolving them into standard\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\n    // Custom loaders may override either of these facilities, i.e.,\n    // 1. To supply configuration objects from some other source (e.g., conventions)\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\n    var defaultConfigRegistry = {};\n\n    ko.components.register = function(componentName, config) {\n        if (!config) {\n            throw new Error('Invalid configuration for ' + componentName);\n        }\n\n        if (ko.components.isRegistered(componentName)) {\n            throw new Error('Component ' + componentName + ' is already registered');\n        }\n\n        defaultConfigRegistry[componentName] = config;\n    };\n\n    ko.components.isRegistered = function(componentName) {\n        return defaultConfigRegistry.hasOwnProperty(componentName);\n    };\n\n    ko.components.unregister = function(componentName) {\n        delete defaultConfigRegistry[componentName];\n        ko.components.clearCachedDefinition(componentName);\n    };\n\n    ko.components.defaultLoader = {\n        'getConfig': function(componentName, callback) {\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n                ? defaultConfigRegistry[componentName]\n                : null;\n            callback(result);\n        },\n\n        'loadComponent': function(componentName, config, callback) {\n            var errorCallback = makeErrorCallback(componentName);\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n            });\n        },\n\n        'loadTemplate': function(componentName, templateConfig, callback) {\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n        },\n\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n        }\n    };\n\n    var createViewModelKey = 'createViewModel';\n\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n    // into the standard component definition format:\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n    // so this is implemented manually below.\n    function resolveConfig(componentName, errorCallback, config, callback) {\n        var result = {},\n            makeCallBackWhenZero = 2,\n            tryIssueCallback = function() {\n                if (--makeCallBackWhenZero === 0) {\n                    callback(result);\n                }\n            },\n            templateConfig = config['template'],\n            viewModelConfig = config['viewModel'];\n\n        if (templateConfig) {\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n                    result['template'] = resolvedTemplate;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n\n        if (viewModelConfig) {\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n                    result[createViewModelKey] = resolvedViewModel;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n    }\n\n    function resolveTemplate(errorCallback, templateConfig, callback) {\n        if (typeof templateConfig === 'string') {\n            // Markup - parse it\n            callback(ko.utils.parseHtmlFragment(templateConfig));\n        } else if (templateConfig instanceof Array) {\n            // Assume already an array of DOM nodes - pass through unchanged\n            callback(templateConfig);\n        } else if (isDocumentFragment(templateConfig)) {\n            // Document fragment - use its child nodes\n            callback(ko.utils.makeArray(templateConfig.childNodes));\n        } else if (templateConfig['element']) {\n            var element = templateConfig['element'];\n            if (isDomElement(element)) {\n                // Element instance - copy its child nodes\n                callback(cloneNodesFromTemplateSourceElement(element));\n            } else if (typeof element === 'string') {\n                // Element ID - find it, then copy its child nodes\n                var elemInstance = document.getElementById(element);\n                if (elemInstance) {\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n                } else {\n                    errorCallback('Cannot find element with ID ' + element);\n                }\n            } else {\n                errorCallback('Unknown element type: ' + element);\n            }\n        } else {\n            errorCallback('Unknown template value: ' + templateConfig);\n        }\n    }\n\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n        if (typeof viewModelConfig === 'function') {\n            // Constructor - convert to standard factory function format\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n            // be used in factory functions, not viewmodel constructors.\n            callback(function (params /*, componentInfo */) {\n                return new viewModelConfig(params);\n            });\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n            // Already a factory function - use it as-is\n            callback(viewModelConfig[createViewModelKey]);\n        } else if ('instance' in viewModelConfig) {\n            // Fixed object instance - promote to createViewModel format for API consistency\n            var fixedInstance = viewModelConfig['instance'];\n            callback(function (params, componentInfo) {\n                return fixedInstance;\n            });\n        } else if ('viewModel' in viewModelConfig) {\n            // Resolved AMD module whose value is of the form { viewModel: ... }\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n        } else {\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n        }\n    }\n\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\n        switch (ko.utils.tagNameLower(elemInstance)) {\n            case 'script':\n                return ko.utils.parseHtmlFragment(elemInstance.text);\n            case 'textarea':\n                return ko.utils.parseHtmlFragment(elemInstance.value);\n            case 'template':\n                // For browsers with proper <template> element support (i.e., where the .content property\n                // gives a document fragment), use that document fragment.\n                if (isDocumentFragment(elemInstance.content)) {\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n                }\n        }\n\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n        // understand <template> and just treat it as a regular container\n        return ko.utils.cloneNodes(elemInstance.childNodes);\n    }\n\n    function isDomElement(obj) {\n        if (window['HTMLElement']) {\n            return obj instanceof HTMLElement;\n        } else {\n            return obj && obj.tagName && obj.nodeType === 1;\n        }\n    }\n\n    function isDocumentFragment(obj) {\n        if (window['DocumentFragment']) {\n            return obj instanceof DocumentFragment;\n        } else {\n            return obj && obj.nodeType === 11;\n        }\n    }\n\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n        if (typeof config['require'] === 'string') {\n            // The config is the value of an AMD module\n            if (amdRequire || window['require']) {\n                (amdRequire || window['require'])([config['require']], callback);\n            } else {\n                errorCallback('Uses require, but no AMD loader is present');\n            }\n        } else {\n            callback(config);\n        }\n    }\n\n    function makeErrorCallback(componentName) {\n        return function (message) {\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\n        };\n    }\n\n    ko.exportSymbol('components.register', ko.components.register);\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n    ko.exportSymbol('components.unregister', ko.components.unregister);\n\n    // Expose the default loader so that developers can directly ask it for configuration\n    // or to resolve configuration\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\n    // By default, the default loader is the only registered component loader\n    ko.components['loaders'].push(ko.components.defaultLoader);\n\n    // Privately expose the underlying config registry for use in old-IE shim\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\n})();\n(function (undefined) {\n    // Overridable API for determining which component name applies to a given node. By overriding this,\n    // you can for example map specific tagNames to components that are not preregistered.\n    ko.components['getComponentNameForNode'] = function(node) {\n        var tagNameLower = ko.utils.tagNameLower(node);\n        if (ko.components.isRegistered(tagNameLower)) {\n            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\n                return tagNameLower;\n            }\n        }\n    };\n\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n        // Determine if it's really a custom element matching a component\n        if (node.nodeType === 1) {\n            var componentName = ko.components['getComponentNameForNode'](node);\n            if (componentName) {\n                // It does represent a component, so add a component binding for it\n                allBindings = allBindings || {};\n\n                if (allBindings['component']) {\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n                }\n\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\n                allBindings['component'] = valueAccessors\n                    ? function() { return componentBindingValue; }\n                    : componentBindingValue;\n            }\n        }\n\n        return allBindings;\n    }\n\n    var nativeBindingProviderInstance = new ko.bindingProvider();\n\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\n        var paramsAttribute = elem.getAttribute('params');\n\n        if (paramsAttribute) {\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n                }),\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n                    var paramValue = paramValueComputed.peek();\n                    // Does the evaluation of the parameter value unwrap any observables?\n                    if (!paramValueComputed.isActive()) {\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n                        return paramValue;\n                    } else {\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n                        // level of observability, and any inner (resulting model value) level of observability.\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\n                        return ko.computed({\n                            'read': function() {\n                                return ko.utils.unwrapObservable(paramValueComputed());\n                            },\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n                                paramValueComputed()(value);\n                            },\n                            disposeWhenNodeIsRemoved: elem\n                        });\n                    }\n                });\n\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\n            // (model value) observability, or in case the model value observable has subobservables.\n            if (!result.hasOwnProperty('$raw')) {\n                result['$raw'] = rawParamComputedValues;\n            }\n\n            return result;\n        } else {\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n            return { '$raw': {} };\n        }\n    }\n\n    // --------------------------------------------------------------------------------\n    // Compatibility code for older (pre-HTML5) IE browsers\n\n    if (ko.utils.ieVersion < 9) {\n        // Whenever you preregister a component, enable it as a custom element in the current document\n        ko.components['register'] = (function(originalFunction) {\n            return function(componentName) {\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n                return originalFunction.apply(this, arguments);\n            }\n        })(ko.components['register']);\n\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n        document.createDocumentFragment = (function(originalFunction) {\n            return function() {\n                var newDocFrag = originalFunction(),\n                    allComponents = ko.components._allRegisteredComponents;\n                for (var componentName in allComponents) {\n                    if (allComponents.hasOwnProperty(componentName)) {\n                        newDocFrag.createElement(componentName);\n                    }\n                }\n                return newDocFrag;\n            };\n        })(document.createDocumentFragment);\n    }\n})();(function(undefined) {\n\n    var componentLoadingOperationUniqueId = 0;\n\n    ko.bindingHandlers['component'] = {\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n            var currentViewModel,\n                currentLoadingOperationId,\n                disposeAssociatedComponentViewModel = function () {\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                    if (typeof currentViewModelDispose === 'function') {\n                        currentViewModelDispose.call(currentViewModel);\n                    }\n                    currentViewModel = null;\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                    currentLoadingOperationId = null;\n                },\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n            ko.computed(function () {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    componentName, componentParams;\n\n                if (typeof value === 'string') {\n                    componentName = value;\n                } else {\n                    componentName = ko.utils.unwrapObservable(value['name']);\n                    componentParams = ko.utils.unwrapObservable(value['params']);\n                }\n\n                if (!componentName) {\n                    throw new Error('No component name specified');\n                }\n\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n                ko.components.get(componentName, function(componentDefinition) {\n                    // If this is not the current load operation for this element, ignore it.\n                    if (currentLoadingOperationId !== loadingOperationId) {\n                        return;\n                    }\n\n                    // Clean up previous state\n                    disposeAssociatedComponentViewModel();\n\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                    if (!componentDefinition) {\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\n                    }\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n                            ctx['$component'] = componentViewModel;\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\n                        });\n                    currentViewModel = componentViewModel;\n                    ko.applyBindingsToDescendants(childBindingContext, element);\n                });\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n\n    ko.virtualElements.allowedBindings['component'] = true;\n\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n        var template = componentDefinition['template'];\n        if (!template) {\n            throw new Error('Component \\'' + componentName + '\\' has no template');\n        }\n\n        var clonedNodesArray = ko.utils.cloneNodes(template);\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n    }\n\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n        var componentViewModelFactory = componentDefinition['createViewModel'];\n        return componentViewModelFactory\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n            : componentParams; // Template-only component\n    }\n\n})();\nvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\nko.bindingHandlers['attr'] = {\n    'update': function(element, valueAccessor, allBindings) {\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\n            attrValue = ko.utils.unwrapObservable(attrValue);\n\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n            if (toRemove)\n                element.removeAttribute(attrName);\n\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\n            // property for IE <= 8.\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\n                attrName = attrHtmlToJavascriptMap[attrName];\n                if (toRemove)\n                    element.removeAttribute(attrName);\n                else\n                    element[attrName] = attrValue;\n            } else if (!toRemove) {\n                element.setAttribute(attrName, attrValue.toString());\n            }\n\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n            // entirely, and there's no strong reason to allow for such casing in HTML.\n            if (attrName === \"name\") {\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\n            }\n        });\n    }\n};\n(function() {\n\nko.bindingHandlers['checked'] = {\n    'after': ['value', 'attr'],\n    'init': function (element, valueAccessor, allBindings) {\n        var checkedValue = ko.pureComputed(function() {\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n            if (allBindings['has']('checkedValue')) {\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n            } else if (allBindings['has']('value')) {\n                return ko.utils.unwrapObservable(allBindings.get('value'));\n            }\n\n            return element.value;\n        });\n\n        function updateModel() {\n            // This updates the model value from the view value.\n            // It runs in response to DOM events (click) and changes in checkedValue.\n            var isChecked = element.checked,\n                elemValue = useCheckedValue ? checkedValue() : isChecked;\n\n            // When we're first setting up this computed, don't change any model state.\n            if (ko.computedContext.isInitial()) {\n                return;\n            }\n\n            // We can ignore unchecked radio buttons, because some other radio\n            // button will be getting checked, and that one can take care of updating state.\n            if (isRadio && !isChecked) {\n                return;\n            }\n\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n            if (valueIsArray) {\n                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;\n                if (oldElemValue !== elemValue) {\n                    // When we're responding to the checkedValue changing, and the element is\n                    // currently checked, replace the old elem value with the new elem value\n                    // in the model array.\n                    if (isChecked) {\n                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\n                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, false);\n                    }\n\n                    oldElemValue = elemValue;\n                } else {\n                    // When we're responding to the user having checked/unchecked a checkbox,\n                    // add/remove the element value to the model array.\n                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\n                }\n                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\n                    modelValue(writableValue);\n                }\n            } else {\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n            }\n        };\n\n        function updateView() {\n            // This updates the view value from the model value.\n            // It runs in response to changes in the bound (checked) value.\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (valueIsArray) {\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\n                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n            } else if (isCheckbox) {\n                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\n                element.checked = modelValue;\n            } else {\n                // For radio buttons, being checked means that the radio button's value corresponds to the model value\n                element.checked = (checkedValue() === modelValue);\n            }\n        };\n\n        var isCheckbox = element.type == \"checkbox\",\n            isRadio = element.type == \"radio\";\n\n        // Only bind to check boxes and radio buttons\n        if (!isCheckbox && !isRadio) {\n            return;\n        }\n\n        var rawValue = valueAccessor(),\n            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n            oldElemValue = valueIsArray ? checkedValue() : undefined,\n            useCheckedValue = isRadio || valueIsArray;\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        if (isRadio && !element.name)\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\n        // Set up two computeds to update the binding:\n\n        // The first responds to changes in the checkedValue value and to element clicks\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\n        // The second responds to changes in the model value (the one associated with the checked binding)\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\n        rawValue = undefined;\n    }\n};\nko.expressionRewriting.twoWayBindings['checked'] = true;\n\nko.bindingHandlers['checkedValue'] = {\n    'update': function (element, valueAccessor) {\n        element.value = ko.utils.unwrapObservable(valueAccessor());\n    }\n};\n\n})();var classesWrittenByBindingKey = '__ko__cssValue';\nko.bindingHandlers['css'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value !== null && typeof value == \"object\") {\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n            });\n        } else {\n            value = ko.utils.stringTrim(String(value || '')); // Make sure we don't try to store or set a non-string value\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n            element[classesWrittenByBindingKey] = value;\n            ko.utils.toggleDomNodeCssClass(element, value, true);\n        }\n    }\n};\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n\nko.bindingHandlers['disable'] = {\n    'update': function (element, valueAccessor) {\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n    }\n};\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n// e.g. click:handler instead of the usual full-length event:{click:handler}\nfunction makeEventHandlerShortcut(eventName) {\n    ko.bindingHandlers[eventName] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var newValueAccessor = function () {\n                var result = {};\n                result[eventName] = valueAccessor();\n                return result;\n            };\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n        }\n    }\n}\n\nko.bindingHandlers['event'] = {\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var eventsToHandle = valueAccessor() || {};\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n            if (typeof eventName == \"string\") {\n                ko.utils.registerEventHandler(element, eventName, function (event) {\n                    var handlerReturnValue;\n                    var handlerFunction = valueAccessor()[eventName];\n                    if (!handlerFunction)\n                        return;\n\n                    try {\n                        // Take all the event args, and prefix with the viewmodel\n                        var argsForHandler = ko.utils.makeArray(arguments);\n                        viewModel = bindingContext['$data'];\n                        argsForHandler.unshift(viewModel);\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n                    } finally {\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                            if (event.preventDefault)\n                                event.preventDefault();\n                            else\n                                event.returnValue = false;\n                        }\n                    }\n\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n                    if (!bubble) {\n                        event.cancelBubble = true;\n                        if (event.stopPropagation)\n                            event.stopPropagation();\n                    }\n                });\n            }\n        });\n    }\n};\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\nko.bindingHandlers['foreach'] = {\n    makeTemplateValueAccessor: function(valueAccessor) {\n        return function() {\n            var modelValue = valueAccessor(),\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\n            // If unwrappedValue is the array, pass in the wrapped value on its own\n            // The value will be unwrapped and tracked within the template binding\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n            ko.utils.unwrapObservable(modelValue);\n            return {\n                'foreach': unwrappedValue['data'],\n                'as': unwrappedValue['as'],\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\n                'afterAdd': unwrappedValue['afterAdd'],\n                'beforeRemove': unwrappedValue['beforeRemove'],\n                'afterRender': unwrappedValue['afterRender'],\n                'beforeMove': unwrappedValue['beforeMove'],\n                'afterMove': unwrappedValue['afterMove'],\n                'templateEngine': ko.nativeTemplateEngine.instance\n            };\n        };\n    },\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n    },\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n    }\n};\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\nko.virtualElements.allowedBindings['foreach'] = true;\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\nko.bindingHandlers['hasfocus'] = {\n    'init': function(element, valueAccessor, allBindings) {\n        var handleElementFocusChange = function(isFocused) {\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n            // from calling 'blur()' on the element when it loses focus.\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n            element[hasfocusUpdatingProperty] = true;\n            var ownerDoc = element.ownerDocument;\n            if (\"activeElement\" in ownerDoc) {\n                var active;\n                try {\n                    active = ownerDoc.activeElement;\n                } catch(e) {\n                    // IE9 throws if you access activeElement during page load (see issue #703)\n                    active = ownerDoc.body;\n                }\n                isFocused = (active === element);\n            }\n            var modelValue = valueAccessor();\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n            element[hasfocusLastValue] = isFocused;\n            element[hasfocusUpdatingProperty] = false;\n        };\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n    },\n    'update': function(element, valueAccessor) {\n        var value = !!ko.utils.unwrapObservable(valueAccessor());\n\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n            value ? element.focus() : element.blur();\n\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n            // element was focused already.\n            if (!value && element[hasfocusLastValue]) {\n                element.ownerDocument.body.focus();\n            }\n\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n        }\n    }\n};\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\nko.expressionRewriting.twoWayBindings['hasFocus'] = true;\nko.bindingHandlers['html'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        // setHtml will unwrap the value if needed\n        ko.utils.setHtml(element, valueAccessor());\n    }\n};\n// Makes a binding like with or if\nfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\n    ko.bindingHandlers[bindingKey] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var didDisplayOnLastUpdate,\n                savedNodes;\n            ko.computed(function() {\n                var dataValue = ko.utils.unwrapObservable(valueAccessor()),\n                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\n                    isFirstRender = !savedNodes,\n                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\n\n                if (needsRefresh) {\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n                    }\n\n                    if (shouldDisplay) {\n                        if (!isFirstRender) {\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n                        }\n                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, dataValue) : bindingContext, element);\n                    } else {\n                        ko.virtualElements.emptyNode(element);\n                    }\n\n                    didDisplayOnLastUpdate = shouldDisplay;\n                }\n            }, null, { disposeWhenNodeIsRemoved: element });\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n    ko.virtualElements.allowedBindings[bindingKey] = true;\n}\n\n// Construct the actual binding handlers\nmakeWithIfBinding('if');\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\nmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\n    function(bindingContext, dataValue) {\n        return bindingContext['createChildContext'](dataValue);\n    }\n);\nvar captionPlaceholder = {};\nko.bindingHandlers['options'] = {\n    'init': function(element) {\n        if (ko.utils.tagNameLower(element) !== \"select\")\n            throw new Error(\"options binding applies only to SELECT elements\");\n\n        // Remove all existing <option>s.\n        while (element.length > 0) {\n            element.remove(0);\n        }\n\n        // Ensures that the binding processor doesn't try to bind the options\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor, allBindings) {\n        function selectedOptions() {\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n        }\n\n        var selectWasPreviouslyEmpty = element.length == 0,\n            multiple = element.multiple,\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n            arrayToDomNodeChildrenOptions = {},\n            captionValue,\n            filteredArray,\n            previousSelectedValues = [];\n\n        if (!valueAllowUnset) {\n            if (multiple) {\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n            } else if (element.selectedIndex >= 0) {\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n            }\n        }\n\n        if (unwrappedArray) {\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // If caption is included, add it to the array\n            if (allBindings['has']('optionsCaption')) {\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n                // If caption value is null or undefined, don't show a caption\n                if (captionValue !== null && captionValue !== undefined) {\n                    filteredArray.unshift(captionPlaceholder);\n                }\n            }\n        } else {\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n        }\n\n        function applyToObject(object, predicate, defaultValue) {\n            var predicateType = typeof predicate;\n            if (predicateType == \"function\")    // Given a function; run it against the data value\n                return predicate(object);\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n                return object[predicate];\n            else                                // Given no optionsText arg; use the data value itself\n                return defaultValue;\n        }\n\n        // The following functions can run at two different times:\n        // The first is when the whole array is being updated directly from this binding handler.\n        // The second is when an observable value for a specific array entry is updated.\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n        var itemUpdate = false;\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\n            if (oldOptions.length) {\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n                itemUpdate = true;\n            }\n            var option = element.ownerDocument.createElement(\"option\");\n            if (arrayEntry === captionPlaceholder) {\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n                ko.selectExtensions.writeValue(option, undefined);\n            } else {\n                // Apply a value to the option element\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\n                // Apply some text to the option element\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n                ko.utils.setTextContent(option, optionText);\n            }\n            return [option];\n        }\n\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\n            function (option) {\n                element.removeChild(option);\n            };\n\n        function setSelectionCallback(arrayEntry, newOptions) {\n            if (itemUpdate && valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else if (previousSelectedValues.length) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\n                // If this option was changed from being selected during a single-item update, notify the change\n                if (itemUpdate && !isSelected) {\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                }\n            }\n        }\n\n        var callback = setSelectionCallback;\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n            callback = function(arrayEntry, newOptions) {\n                setSelectionCallback(arrayEntry, newOptions);\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n            }\n        }\n\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\n        ko.dependencyDetection.ignore(function () {\n            if (valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else {\n                // Determine if the selection has changed as a result of updating the options list\n                var selectionChanged;\n                if (multiple) {\n                    // For a multiple-select box, compare the new selection count to the previous one\n                    // But if nothing was selected before, the selection can't have changed\n                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n                } else {\n                    // For a single-select box, compare the current value to the previous value\n                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                        : (previousSelectedValues.length || element.selectedIndex >= 0);\n                }\n\n                // Ensure consistency between model value and selected option.\n                // If the dropdown was changed so that selection is no longer the same,\n                // notify the value or selectedOptions binding.\n                if (selectionChanged) {\n                    ko.utils.triggerEvent(element, \"change\");\n                }\n            }\n        });\n\n        // Workaround for IE bug\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n            element.scrollTop = previousScrollTop;\n    }\n};\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\nko.bindingHandlers['selectedOptions'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        ko.utils.registerEventHandler(element, \"change\", function () {\n            var value = valueAccessor(), valueToWrite = [];\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                if (node.selected)\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\n            });\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n        });\n    },\n    'update': function (element, valueAccessor) {\n        if (ko.utils.tagNameLower(element) != \"select\")\n            throw new Error(\"values binding applies only to SELECT elements\");\n\n        var newValue = ko.utils.unwrapObservable(valueAccessor()),\n            previousScrollTop = element.scrollTop;\n\n        if (newValue && typeof newValue.length == \"number\") {\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\n                    ko.utils.setOptionNodeSelectionState(node, isSelected);\n                }\n            });\n        }\n\n        element.scrollTop = previousScrollTop;\n    }\n};\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\nko.bindingHandlers['style'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\n            styleValue = ko.utils.unwrapObservable(styleValue);\n\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\n                // Empty string removes the value, whereas null/undefined have no effect\n                styleValue = \"\";\n            }\n\n            element.style[styleName] = styleValue;\n        });\n    }\n};\nko.bindingHandlers['submit'] = {\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        if (typeof valueAccessor() != \"function\")\n            throw new Error(\"The value for a submit binding must be a function\");\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n            var handlerReturnValue;\n            var value = valueAccessor();\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n            finally {\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    if (event.preventDefault)\n                        event.preventDefault();\n                    else\n                        event.returnValue = false;\n                }\n            }\n        });\n    }\n};\nko.bindingHandlers['text'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        ko.utils.setTextContent(element, valueAccessor());\n    }\n};\nko.virtualElements.allowedBindings['text'] = true;\n(function () {\n\nif (window && window.navigator) {\n    var parseVersion = function (matches) {\n        if (matches) {\n            return parseFloat(matches[1]);\n        }\n    };\n\n    // Detect various browser versions because some old versions don't fully support the 'input' event\n    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\n        userAgent = window.navigator.userAgent,\n        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\n        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\n}\n\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n// But it does fire the 'selectionchange' event on many of those, presumably because the\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n// fired at the document level only and doesn't directly indicate which element changed. We\n// set up just one event handler for the document and use 'activeElement' to determine which\n// element was changed.\nif (ko.utils.ieVersion < 10) {\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\n    var selectionChangeHandler = function(event) {\n        var target = this.activeElement,\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n        if (handler) {\n            handler(event);\n        }\n    };\n    var registerForSelectionChangeEvent = function (element, handler) {\n        var ownerDoc = element.ownerDocument;\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n        }\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n    };\n}\n\nko.bindingHandlers['textInput'] = {\n    'init': function (element, valueAccessor, allBindings) {\n\n        var previousElementValue = element.value,\n            timeoutHandle,\n            elementValueBeforeEvent;\n\n        var updateModel = function (event) {\n            clearTimeout(timeoutHandle);\n            elementValueBeforeEvent = timeoutHandle = undefined;\n\n            var elementValue = element.value;\n            if (previousElementValue !== elementValue) {\n                // Provide a way for tests to know exactly which event was processed\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n                previousElementValue = elementValue;\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n            }\n        };\n\n        var deferUpdateModel = function (event) {\n            if (!timeoutHandle) {\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n                // event firing and the updateModel function running. This allows us to ignore model\n                // updates that are from the previous state of the element, usually due to techniques\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n                elementValueBeforeEvent = element.value;\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n                timeoutHandle = ko.utils.setTimeout(handler, 4);\n            }\n        };\n\n        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\n        // so we'll make sure all updates are asynchronous\n        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel;\n\n        var updateView = function () {\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (modelValue === null || modelValue === undefined) {\n                modelValue = '';\n            }\n\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateView, 4);\n                return;\n            }\n\n            // Update the element only if the element and model are different. On some browsers, updating the value\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\n            if (element.value !== modelValue) {\n                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\n                element.value = modelValue;\n            }\n        };\n\n        var onEvent = function (event, handler) {\n            ko.utils.registerEventHandler(element, event, handler);\n        };\n\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n            // Provide a way for tests to specify exactly which events are bound\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n                if (eventName.slice(0,5) == 'after') {\n                    onEvent(eventName.slice(5), deferUpdateModel);\n                } else {\n                    onEvent(eventName, updateModel);\n                }\n            });\n        } else {\n            if (ko.utils.ieVersion < 10) {\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\n                // when using autocomplete, we'll use 'propertychange' for it also.\n                onEvent('propertychange', function(event) {\n                    if (event.propertyName === 'value') {\n                        ieUpdateModel(event);\n                    }\n                });\n\n                if (ko.utils.ieVersion == 8) {\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n                    // events too.\n                    onEvent('keyup', updateModel);      // A single keystoke\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\n                }\n                if (ko.utils.ieVersion >= 8) {\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n                    // These are also needed in IE8 because of the bug described above.\n                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n                    onEvent('dragend', deferUpdateModel);\n                }\n            } else {\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n                // through the user interface.\n                onEvent('input', updateModel);\n\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n                    onEvent('keydown', deferUpdateModel);\n                    onEvent('paste', deferUpdateModel);\n                    onEvent('cut', deferUpdateModel);\n                } else if (operaVersion < 11) {\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n                    // We can try to catch some of those using 'keydown'.\n                    onEvent('keydown', deferUpdateModel);\n                } else if (firefoxVersion < 4.0) {\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n                    onEvent('DOMAutoComplete', updateModel);\n\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n                    onEvent('dragdrop', updateModel);       // <3.5\n                    onEvent('drop', updateModel);           // 3.5\n                }\n            }\n        }\n\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n        onEvent('change', updateModel);\n\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n    }\n};\nko.expressionRewriting.twoWayBindings['textInput'] = true;\n\n// textinput is an alias for textInput\nko.bindingHandlers['textinput'] = {\n    // preprocess is the only way to set up a full alias\n    'preprocess': function (value, name, addBinding) {\n        addBinding('textInput', value);\n    }\n};\n\n})();ko.bindingHandlers['uniqueName'] = {\n    'init': function (element, valueAccessor) {\n        if (valueAccessor()) {\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n            ko.utils.setElementName(element, name);\n        }\n    }\n};\nko.bindingHandlers['uniqueName'].currentIndex = 0;\nko.bindingHandlers['value'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n            return;\n        }\n\n        // Always catch \"change\" event; possibly other events too if asked\n        var eventsToCatch = [\"change\"];\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n        var propertyChangedFired = false;\n        var elementValueBeforeEvent = null;\n\n        if (requestedEventsToCatch) {\n            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\n                requestedEventsToCatch = [requestedEventsToCatch];\n            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\n            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\n        }\n\n        var valueUpdateHandler = function() {\n            elementValueBeforeEvent = null;\n            propertyChangedFired = false;\n            var modelValue = valueAccessor();\n            var elementValue = ko.selectExtensions.readValue(element);\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n        }\n\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n            ko.utils.registerEventHandler(element, \"blur\", function() {\n                if (propertyChangedFired) {\n                    valueUpdateHandler();\n                }\n            });\n        }\n\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n            var handler = valueUpdateHandler;\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n                handler = function() {\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n                    // techniques like rateLimit can trigger model changes at critical moments that will\n                    // override the user's inputs, causing keystrokes to be lost.\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n                    ko.utils.setTimeout(valueUpdateHandler, 0);\n                };\n                eventName = eventName.substring(\"after\".length);\n            }\n            ko.utils.registerEventHandler(element, eventName, handler);\n        });\n\n        var updateFromModel = function () {\n            var newValue = ko.utils.unwrapObservable(valueAccessor());\n            var elementValue = ko.selectExtensions.readValue(element);\n\n            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateFromModel, 0);\n                return;\n            }\n\n            var valueHasChanged = (newValue !== elementValue);\n\n            if (valueHasChanged) {\n                if (ko.utils.tagNameLower(element) === \"select\") {\n                    var allowUnset = allBindings.get('valueAllowUnset');\n                    var applyValueAction = function () {\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n                    };\n                    applyValueAction();\n\n                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                    } else {\n                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n                        // to apply the value as well.\n                        ko.utils.setTimeout(applyValueAction, 0);\n                    }\n                } else {\n                    ko.selectExtensions.writeValue(element, newValue);\n                }\n            }\n        };\n\n        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n    },\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n};\nko.expressionRewriting.twoWayBindings['value'] = true;\nko.bindingHandlers['visible'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        var isCurrentlyVisible = !(element.style.display == \"none\");\n        if (value && !isCurrentlyVisible)\n            element.style.display = \"\";\n        else if ((!value) && isCurrentlyVisible)\n            element.style.display = \"none\";\n    }\n};\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\nmakeEventHandlerShortcut('click');\n// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nko.templateEngine = function () { };\n\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    throw new Error(\"Override renderTemplateSource\");\n};\n\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n};\n\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n    // Named template\n    if (typeof template == \"string\") {\n        templateDocument = templateDocument || document;\n        var elem = templateDocument.getElementById(template);\n        if (!elem)\n            throw new Error(\"Cannot find template with ID \" + template);\n        return new ko.templateSources.domElement(elem);\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n        // Anonymous template\n        return new ko.templateSources.anonymousTemplate(template);\n    } else\n        throw new Error(\"Unknown template type: \" + template);\n};\n\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n};\n\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n    // Skip rewriting if requested\n    if (this['allowTemplateRewriting'] === false)\n        return true;\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n};\n\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    var rewritten = rewriterCallback(templateSource['text']());\n    templateSource['text'](rewritten);\n    templateSource['data'](\"isRewritten\", true);\n};\n\nko.exportSymbol('templateEngine', ko.templateEngine);\n\nko.templateRewriting = (function () {\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\n    function validateDataBindValuesForRewriting(keyValueArray) {\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n        for (var i = 0; i < keyValueArray.length; i++) {\n            var key = keyValueArray[i]['key'];\n            if (allValidators.hasOwnProperty(key)) {\n                var validator = allValidators[key];\n\n                if (typeof validator === \"function\") {\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n                    if (possibleErrorMessage)\n                        throw new Error(possibleErrorMessage);\n                } else if (!validator) {\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n                }\n            }\n        }\n    }\n\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n        // extra indirection.\n        var applyBindingsToNextSiblingScript =\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n    }\n\n    return {\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n                }, templateDocument);\n        },\n\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n            });\n        },\n\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n            return ko.memoization.memoize(function (domNode, bindingContext) {\n                var nodeToBind = domNode.nextSibling;\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n                }\n            });\n        }\n    }\n})();\n\n\n// Exported only because it has to be referenced by string lookup from within rewritten template\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n(function() {\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n    //\n    // Two are provided by default:\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n    //                                           without reading/writing the actual element text content, since it will be overwritten\n    //                                           with the rendered template output.\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n    // Template sources need to have the following functions:\n    //   text() \t\t\t- returns the template text from your storage location\n    //   text(value)\t\t- writes the supplied template text to your storage location\n    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\n    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n    //\n    // Optionally, template sources can also have the following functions:\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n    //   nodes(value)       - writes the given DOM element to your storage location\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n    //\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\n    ko.templateSources = {};\n\n    // ---- ko.templateSources.domElement -----\n\n    // template types\n    var templateScript = 1,\n        templateTextArea = 2,\n        templateTemplate = 3,\n        templateElement = 4;\n\n    ko.templateSources.domElement = function(element) {\n        this.domElement = element;\n\n        if (element) {\n            var tagNameLower = ko.utils.tagNameLower(element);\n            this.templateType =\n                tagNameLower === \"script\" ? templateScript :\n                tagNameLower === \"textarea\" ? templateTextArea :\n                    // For browsers with proper <template> element support, where the .content property gives a document fragment\n                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\n                templateElement;\n        }\n    }\n\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n        var elemContentsProperty = this.templateType === templateScript ? \"text\"\n                                 : this.templateType === templateTextArea ? \"value\"\n                                 : \"innerHTML\";\n\n        if (arguments.length == 0) {\n            return this.domElement[elemContentsProperty];\n        } else {\n            var valueToWrite = arguments[0];\n            if (elemContentsProperty === \"innerHTML\")\n                ko.utils.setHtml(this.domElement, valueToWrite);\n            else\n                this.domElement[elemContentsProperty] = valueToWrite;\n        }\n    };\n\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n        if (arguments.length === 1) {\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n        } else {\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n        }\n    };\n\n    var templatesDomDataKey = ko.utils.domData.nextKey();\n    function getTemplateDomData(element) {\n        return ko.utils.domData.get(element, templatesDomDataKey) || {};\n    }\n    function setTemplateDomData(element, data) {\n        ko.utils.domData.set(element, templatesDomDataKey, data);\n    }\n\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n        var element = this.domElement;\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(element),\n                containerData = templateData.containerData;\n            return containerData || (\n                this.templateType === templateTemplate ? element.content :\n                this.templateType === templateElement ? element :\n                undefined);\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(element, {containerData: valueToWrite});\n        }\n    };\n\n    // ---- ko.templateSources.anonymousTemplate -----\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\n    ko.templateSources.anonymousTemplate = function(element) {\n        this.domElement = element;\n    }\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(this.domElement);\n            if (templateData.textData === undefined && templateData.containerData)\n                templateData.textData = templateData.containerData.innerHTML;\n            return templateData.textData;\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(this.domElement, {textData: valueToWrite});\n        }\n    };\n\n    ko.exportSymbol('templateSources', ko.templateSources);\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n})();\n(function () {\n    var _templateEngine;\n    ko.setTemplateEngine = function (templateEngine) {\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n        _templateEngine = templateEngine;\n    }\n\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n            nextInQueue = ko.virtualElements.nextSibling(node);\n            action(node, nextInQueue);\n        }\n    }\n\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\n        if (continuousNodeArray.length) {\n            var firstNode = continuousNodeArray[0],\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n                parentNode = firstNode.parentNode,\n                provider = ko.bindingProvider['instance'],\n                preprocessNode = provider['preprocessNode'];\n\n            if (preprocessNode) {\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n                    var nodePreviousSibling = node.previousSibling;\n                    var newNodes = preprocessNode.call(provider, node);\n                    if (newNodes) {\n                        if (node === firstNode)\n                            firstNode = newNodes[0] || nextNodeInRange;\n                        if (node === lastNode)\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n                    }\n                });\n\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n                // first node needs to be in the array).\n                continuousNodeArray.length = 0;\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n                    return;\n                }\n                if (firstNode === lastNode) {\n                    continuousNodeArray.push(firstNode);\n                } else {\n                    continuousNodeArray.push(firstNode, lastNode);\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n                }\n            }\n\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n            // whereas a regular applyBindings won't introduce new memoized nodes\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.applyBindings(bindingContext, node);\n            });\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n            });\n\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n        }\n    }\n\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n                                        : null;\n    }\n\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n        options = options || {};\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\n        // Loosely check result is an array of DOM nodes\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n            throw new Error(\"Template engine must return an array of DOM nodes\");\n\n        var haveAddedNodesToParent = false;\n        switch (renderMode) {\n            case \"replaceChildren\":\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"replaceNode\":\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"ignoreTargetNode\": break;\n            default:\n                throw new Error(\"Unknown renderMode: \" + renderMode);\n        }\n\n        if (haveAddedNodesToParent) {\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n            if (options['afterRender'])\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\n        }\n\n        return renderedNodesArray;\n    }\n\n    function resolveTemplateName(template, data, context) {\n        // The template can be specified as:\n        if (ko.isObservable(template)) {\n            // 1. An observable, with string value\n            return template();\n        } else if (typeof template === 'function') {\n            // 2. A function of (data, context) returning a string\n            return template(data, context);\n        } else {\n            // 3. A string\n            return template;\n        }\n    }\n\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n        options = options || {};\n        if ((options['templateEngine'] || _templateEngine) == undefined)\n            throw new Error(\"Set a template engine before calling renderTemplate\");\n        renderMode = renderMode || \"replaceChildren\";\n\n        if (targetNodeOrNodeArray) {\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n                function () {\n                    // Ensure we've got a proper binding context to work with\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n                        ? dataOrBindingContext\n                        : new ko.bindingContext(ko.utils.unwrapObservable(dataOrBindingContext));\n\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\n                    if (renderMode == \"replaceNode\") {\n                        targetNodeOrNodeArray = renderedNodesArray;\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n                    }\n                },\n                null,\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n            );\n        } else {\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n            return ko.memoization.memoize(function (domNode) {\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n            });\n        }\n    };\n\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n        var arrayItemContext;\n\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n        var executeTemplateForArrayItem = function (arrayValue, index) {\n            // Support selecting template as a function of the data being rendered\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\n                context['$index'] = index;\n            });\n\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n        }\n\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n            if (options['afterRender'])\n                options['afterRender'](addedNodesArray, arrayValue);\n\n            // release the \"cache\" variable, so that it can be collected by\n            // the GC when its value isn't used from within the bindings anymore.\n            arrayItemContext = null;\n        };\n\n        return ko.dependentObservable(function () {\n            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\n\n        }, null, { disposeWhenNodeIsRemoved: targetNode });\n    };\n\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n            oldComputed.dispose();\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\n    }\n\n    ko.bindingHandlers['template'] = {\n        'init': function(element, valueAccessor) {\n            // Support anonymous templates\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n            if (typeof bindingValue == \"string\" || bindingValue['name']) {\n                // It's a named template - clear the element\n                ko.virtualElements.emptyNode(element);\n            } else if ('nodes' in bindingValue) {\n                // We've been given an array of DOM nodes. Save them as the template source.\n                // There is no known use case for the node array being an observable array (if the output\n                // varies, put that behavior *into* your template - that's what templates are for), and\n                // the implementation would be a mess, so assert that it's not observable.\n                var nodes = bindingValue['nodes'] || [];\n                if (ko.isObservable(nodes)) {\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n                }\n                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            } else {\n                // It's an anonymous template - store the element contents, then clear the element\n                var templateNodes = ko.virtualElements.childNodes(element),\n                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            }\n            return { 'controlsDescendantBindings': true };\n        },\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var value = valueAccessor(),\n                dataValue,\n                options = ko.utils.unwrapObservable(value),\n                shouldDisplay = true,\n                templateComputed = null,\n                templateName;\n\n            if (typeof options == \"string\") {\n                templateName = value;\n                options = {};\n            } else {\n                templateName = options['name'];\n\n                // Support \"if\"/\"ifnot\" conditions\n                if ('if' in options)\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n                if (shouldDisplay && 'ifnot' in options)\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n\n                dataValue = ko.utils.unwrapObservable(options['data']);\n            }\n\n            if ('foreach' in options) {\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n                var dataArray = (shouldDisplay && options['foreach']) || [];\n                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\n            } else if (!shouldDisplay) {\n                ko.virtualElements.emptyNode(element);\n            } else {\n                // Render once for this single data point (or use the viewModel if no data was provided)\n                var innerBindingContext = ('data' in options) ?\n                    bindingContext['createChildContext'](dataValue, options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\n                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\n                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\n            }\n\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\n        }\n    };\n\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n            return null; // Named templates can be rewritten, so return \"no error\"\n        return \"This template engine does not support anonymous templates nested within its templates\";\n    };\n\n    ko.virtualElements.allowedBindings['template'] = true;\n})();\n\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\nko.exportSymbol('renderTemplate', ko.renderTemplate);\n// Go through the items that have been added and deleted and try to find matches between them.\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n};\n\nko.utils.compareArrays = (function () {\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\n    // Simple calculation based on Levenshtein distance.\n    function compareArrays(oldArray, newArray, options) {\n        // For backward compatibility, if the third arg is actually a bool, interpret\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n        oldArray = oldArray || [];\n        newArray = newArray || [];\n\n        if (oldArray.length < newArray.length)\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n        else\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n    }\n\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n        var myMin = Math.min,\n            myMax = Math.max,\n            editDistanceMatrix = [],\n            smlIndex, smlIndexMax = smlArray.length,\n            bigIndex, bigIndexMax = bigArray.length,\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\n            maxDistance = smlIndexMax + bigIndexMax + 1,\n            thisRow, lastRow,\n            bigIndexMaxForRow, bigIndexMinForRow;\n\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n            lastRow = thisRow;\n            editDistanceMatrix.push(thisRow = []);\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n                if (!bigIndex)\n                    thisRow[bigIndex] = smlIndex + 1;\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n                    thisRow[bigIndex] = bigIndex + 1;\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n                else {\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n            }\n        }\n\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n                notInSml.push(editScript[editScript.length] = {     // added\n                    'status': statusNotInSml,\n                    'value': bigArray[--bigIndex],\n                    'index': bigIndex });\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n                notInBig.push(editScript[editScript.length] = {     // deleted\n                    'status': statusNotInBig,\n                    'value': smlArray[--smlIndex],\n                    'index': smlIndex });\n            } else {\n                --bigIndex;\n                --smlIndex;\n                if (!options['sparse']) {\n                    editScript.push({\n                        'status': \"retained\",\n                        'value': bigArray[bigIndex] });\n                }\n            }\n        }\n\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n        // smlIndexMax keeps the time complexity of this algorithm linear.\n        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n        return editScript.reverse();\n    }\n\n    return compareArrays;\n})();\n\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n(function () {\n    // Objective:\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n    //   previously mapped - retain those nodes, and just insert/delete other ones\n\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n    // You can use this, for example, to activate bindings on those nodes.\n\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n        var mappedNodes = [];\n        var dependentObservable = ko.dependentObservable(function() {\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n            if (mappedNodes.length > 0) {\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n                if (callbackAfterAddingNodes)\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n            }\n\n            // Replace the contents of the mappedNodes array, thereby updating the record\n            // of which nodes would be deleted if valueToMap was itself later removed\n            mappedNodes.length = 0;\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n    }\n\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\n        deletedItemDummyValue = ko.utils.domData.nextKey();\n\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\n        // Compare the provided array against the previous one\n        array = array || [];\n        options = options || {};\n        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\n        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\n        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\n\n        // Build the new mapping result\n        var newMappingResult = [];\n        var lastMappingResultIndex = 0;\n        var newMappingResultIndex = 0;\n\n        var nodesToDelete = [];\n        var itemsToProcess = [];\n        var itemsForBeforeRemoveCallbacks = [];\n        var itemsForMoveCallbacks = [];\n        var itemsForAfterAddCallbacks = [];\n        var mapData;\n\n        function itemMovedOrRetained(editScriptIndex, oldPosition) {\n            mapData = lastMappingResult[oldPosition];\n            if (newMappingResultIndex !== oldPosition)\n                itemsForMoveCallbacks[editScriptIndex] = mapData;\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n            mapData.indexObservable(newMappingResultIndex++);\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n            newMappingResult.push(mapData);\n            itemsToProcess.push(mapData);\n        }\n\n        function callCallback(callback, items) {\n            if (callback) {\n                for (var i = 0, n = items.length; i < n; i++) {\n                    if (items[i]) {\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n                            callback(node, i, items[i].arrayEntry);\n                        });\n                    }\n                }\n            }\n        }\n\n        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\n            movedIndex = editScriptItem['moved'];\n            switch (editScriptItem['status']) {\n                case \"deleted\":\n                    if (movedIndex === undefined) {\n                        mapData = lastMappingResult[lastMappingResultIndex];\n\n                        // Stop tracking changes to the mapping for these nodes\n                        if (mapData.dependentObservable) {\n                            mapData.dependentObservable.dispose();\n                            mapData.dependentObservable = undefined;\n                        }\n\n                        // Queue these nodes for later removal\n                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n                            if (options['beforeRemove']) {\n                                newMappingResult.push(mapData);\n                                itemsToProcess.push(mapData);\n                                if (mapData.arrayEntry === deletedItemDummyValue) {\n                                    mapData = null;\n                                } else {\n                                    itemsForBeforeRemoveCallbacks[i] = mapData;\n                                }\n                            }\n                            if (mapData) {\n                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n                            }\n                        }\n                    }\n                    lastMappingResultIndex++;\n                    break;\n\n                case \"retained\":\n                    itemMovedOrRetained(i, lastMappingResultIndex++);\n                    break;\n\n                case \"added\":\n                    if (movedIndex !== undefined) {\n                        itemMovedOrRetained(i, movedIndex);\n                    } else {\n                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\n                        newMappingResult.push(mapData);\n                        itemsToProcess.push(mapData);\n                        if (!isFirstExecution)\n                            itemsForAfterAddCallbacks[i] = mapData;\n                    }\n                    break;\n            }\n        }\n\n        // Store a copy of the array items we just considered so we can difference it next time\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n\n        // Call beforeMove first before any changes have been made to the DOM\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\n            // Get nodes for newly added items\n            if (!mapData.mappedNodes)\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\n            // Put nodes in the right place if they aren't there already\n            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\n                if (node !== nextNode)\n                    ko.virtualElements.insertAfter(domNode, node, lastNode);\n            }\n\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n            if (!mapData.initialized && callbackAfterAddingNodes) {\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n                mapData.initialized = true;\n            }\n        }\n\n        // If there's a beforeRemove callback, call it after reordering.\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\n        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n        // with an actual item in the array and appear as \"retained\" or \"moved\".\n        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\n            if (itemsForBeforeRemoveCallbacks[i]) {\n                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\n            }\n        }\n\n        // Finally call afterMove and afterAdd callbacks\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n    }\n})();\n\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\nko.nativeTemplateEngine = function () {\n    this['allowTemplateRewriting'] = false;\n}\n\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\n    if (templateNodes) {\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n    } else {\n        var templateText = templateSource['text']();\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n    }\n};\n\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n(function() {\n    ko.jqueryTmplTemplateEngine = function () {\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n        // doesn't expose a version number, so we have to infer it.\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n                return 0;\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n            try {\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n                    return 2; // Final version of jquery.tmpl\n                }\n            } catch(ex) { /* Apparently not the version we were looking for */ }\n\n            return 1; // Any older version that we don't support\n        })();\n\n        function ensureHasReferencedJQueryTemplates() {\n            if (jQueryTmplVersion < 2)\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n        }\n\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n        }\n\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n            templateDocument = templateDocument || document;\n            options = options || {};\n            ensureHasReferencedJQueryTemplates();\n\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n            var precompiled = templateSource['data']('precompiled');\n            if (!precompiled) {\n                var templateText = templateSource['text']() || \"\";\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\n                precompiled = jQueryInstance['template'](null, templateText);\n                templateSource['data']('precompiled', precompiled);\n            }\n\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n            return resultNodes;\n        };\n\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n        };\n\n        this['addTemplate'] = function(templateName, templateMarkup) {\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n        };\n\n        if (jQueryTmplVersion > 0) {\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\n                open: \"__.push($1 || '');\"\n            };\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\n                open: \"with($1) {\",\n                close: \"} \"\n            };\n        }\n    };\n\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\n    // Use this one by default *only if jquery.tmpl is referenced*\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n})();\n}));\n}());\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/knockout/build/output/knockout-latest.debug.js\n ** module id = 0\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 1\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 2\n ** module chunks = 0\n **/","import ko from 'knockout';\nimport 'knockout-punches';\nko.punches.enableAll();\n\nimport fecha from 'fecha';\n\nimport DateMonth from './DateMonth.js';\nimport template from './DateMonth.html';\nimport './DateMonth.css';\nimport './bootstrap.css';\n\nmodule.exports = (element, name = '', date) => {\n\n  ko.components.register('date-month', {\n    viewModel: DateMonth,\n    template: template\n  });\n\n  // Initialize store if date passed\n  var initial_date = new Date();\n  if (date) {\n    initial_date = fecha.parse(date, 'MMM YYYY');\n  }\n\n  let model = {\n    date: initial_date\n  }\n\n  ko.applyBindings(model);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import { computed, observable } from 'knockout';\nimport range from 'lodash.range';\n\nexport default class DateModel {\n  constructor(params) {\n    let now = params ? params.date : new Date();\n    this.name = params ? params.name : '';\n    this.open = observable(params ? params.open : false);\n    this.day = 1;\n    this.month = observable(now.getMonth());\n    this.year = observable(now.getFullYear());\n    this.undo = observable(now);\n\n    this.date = computed(() => new Date(this.year(), this.month(), this.day));\n    this.visible_months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']; // TODO consider limiting for this year.  Also I18N\n\n    this.visible_years = computed(() => {\n      let now = new Date();\n      let end = this.date().getFullYear() + (now.getFullYear() - this.date().getFullYear()) % 10 + 1;\n      let start = end - 10;\n      return range(start, end);\n    });\n\n    this.month_year = computed(() => `${this.visible_months[this.month()]} ${this.year()}`);\n    this.can_advance_year = computed(() => {\n      let now = new Date();\n      return now.getFullYear() - this.date().getFullYear() > 9\n    });\n\n    this.open.subscribe(value => {\n      this.undo(this.date());\n    });\n  }\n\n  cancel() {\n    let month = this.undo().getMonth();\n    let year = this.undo().getFullYear();\n    this.month(month);\n    this.year(year);\n    this.open(false)\n  }\n  prev() {\n    this.year(this.year() - 10);\n  }\n  next() {\n    this.year(this.year() + 10);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/DateMonth.js\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".date_month{display:inline-block;font-family:sans-serif;max-width:300px;position:relative}.date_month footer{border-top:1px solid #d3d3d3;padding:8px;text-align:center}.date_month .btn{background-image:-webkit-linear-gradient(top,#fff,#e0e0e0 50%);background-image:linear-gradient(180deg,#fff,#e0e0e0 50%);box-shadow:inset 0 1px 0 #fff}.date_month .picker{background-color:#fff;border:1px solid silver;box-shadow:0 4px 8px rgba(0,0,0,.25);font-size:80%;position:absolute;width:24em;z-index:1000}.date_month .picker header{text-align:center}.date_month .month{padding-top:8px}.date_month .year{border-left:1px solid #d3d3d3}.date_month .picker header{margin:0;padding:4px}.date_month .picker ul{-webkit-column-count:2;-moz-column-count:2;column-count:2;margin:0;padding:4px}.date_month .picker li{cursor:pointer;list-style:none;padding:4px;text-align:center}.date_month .selected{background-color:#00afdb;color:#fff}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/autoprefixer-loader!./src/DateMonth.css\n ** module id = 5\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*!\\n * Bootstrap v3.3.5 (http://getbootstrap.com)\\n * Copyright 2011-2016 Twitter, Inc.\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n */\\n\\n/*!\\n * Generated using the Bootstrap Customizer (http://getbootstrap.com/customize/?id=2a4fb89f69de81847d8282fc056691ec)\\n * Config saved to config.json and https://gist.github.com/2a4fb89f69de81847d8282fc056691ec\\n */\\n/*!\\n * Bootstrap v3.3.6 (http://getbootstrap.com)\\n * Copyright 2011-2015 Twitter, Inc.\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n */\\n/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}*,:after,:before{box-sizing:border-box}button,input,select,textarea{font-family:inherit;font-size:inherit;line-height:inherit}a{color:#337ab7;text-decoration:none}a:focus,a:hover{color:#23527c;text-decoration:underline}a:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}figure{margin:0}img{vertical-align:middle}.img-responsive{display:block;max-width:100%;height:auto}.img-rounded{border-radius:6px}.img-thumbnail{padding:4px;line-height:1.42857143;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out;display:inline-block;max-width:100%;height:auto}.img-circle{border-radius:50%}hr{margin-top:20px;margin-bottom:20px;border:0;border-top:1px solid #eee}.sr-only{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}[role=button]{cursor:pointer}.row{margin-left:-15px;margin-right:-15px}.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{position:relative;min-height:1px;padding-left:15px;padding-right:15px}.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{float:left}.col-xs-12{width:100%}.col-xs-11{width:91.66666667%}.col-xs-10{width:83.33333333%}.col-xs-9{width:75%}.col-xs-8{width:66.66666667%}.col-xs-7{width:58.33333333%}.col-xs-6{width:50%}.col-xs-5{width:41.66666667%}.col-xs-4{width:33.33333333%}.col-xs-3{width:25%}.col-xs-2{width:16.66666667%}.col-xs-1{width:8.33333333%}.col-xs-pull-12{right:100%}.col-xs-pull-11{right:91.66666667%}.col-xs-pull-10{right:83.33333333%}.col-xs-pull-9{right:75%}.col-xs-pull-8{right:66.66666667%}.col-xs-pull-7{right:58.33333333%}.col-xs-pull-6{right:50%}.col-xs-pull-5{right:41.66666667%}.col-xs-pull-4{right:33.33333333%}.col-xs-pull-3{right:25%}.col-xs-pull-2{right:16.66666667%}.col-xs-pull-1{right:8.33333333%}.col-xs-pull-0{right:auto}.col-xs-push-12{left:100%}.col-xs-push-11{left:91.66666667%}.col-xs-push-10{left:83.33333333%}.col-xs-push-9{left:75%}.col-xs-push-8{left:66.66666667%}.col-xs-push-7{left:58.33333333%}.col-xs-push-6{left:50%}.col-xs-push-5{left:41.66666667%}.col-xs-push-4{left:33.33333333%}.col-xs-push-3{left:25%}.col-xs-push-2{left:16.66666667%}.col-xs-push-1{left:8.33333333%}.col-xs-push-0{left:auto}.col-xs-offset-12{margin-left:100%}.col-xs-offset-11{margin-left:91.66666667%}.col-xs-offset-10{margin-left:83.33333333%}.col-xs-offset-9{margin-left:75%}.col-xs-offset-8{margin-left:66.66666667%}.col-xs-offset-7{margin-left:58.33333333%}.col-xs-offset-6{margin-left:50%}.col-xs-offset-5{margin-left:41.66666667%}.col-xs-offset-4{margin-left:33.33333333%}.col-xs-offset-3{margin-left:25%}.col-xs-offset-2{margin-left:16.66666667%}.col-xs-offset-1{margin-left:8.33333333%}.col-xs-offset-0{margin-left:0}@media (min-width:768px){.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12{float:left}.col-sm-12{width:100%}.col-sm-11{width:91.66666667%}.col-sm-10{width:83.33333333%}.col-sm-9{width:75%}.col-sm-8{width:66.66666667%}.col-sm-7{width:58.33333333%}.col-sm-6{width:50%}.col-sm-5{width:41.66666667%}.col-sm-4{width:33.33333333%}.col-sm-3{width:25%}.col-sm-2{width:16.66666667%}.col-sm-1{width:8.33333333%}.col-sm-pull-12{right:100%}.col-sm-pull-11{right:91.66666667%}.col-sm-pull-10{right:83.33333333%}.col-sm-pull-9{right:75%}.col-sm-pull-8{right:66.66666667%}.col-sm-pull-7{right:58.33333333%}.col-sm-pull-6{right:50%}.col-sm-pull-5{right:41.66666667%}.col-sm-pull-4{right:33.33333333%}.col-sm-pull-3{right:25%}.col-sm-pull-2{right:16.66666667%}.col-sm-pull-1{right:8.33333333%}.col-sm-pull-0{right:auto}.col-sm-push-12{left:100%}.col-sm-push-11{left:91.66666667%}.col-sm-push-10{left:83.33333333%}.col-sm-push-9{left:75%}.col-sm-push-8{left:66.66666667%}.col-sm-push-7{left:58.33333333%}.col-sm-push-6{left:50%}.col-sm-push-5{left:41.66666667%}.col-sm-push-4{left:33.33333333%}.col-sm-push-3{left:25%}.col-sm-push-2{left:16.66666667%}.col-sm-push-1{left:8.33333333%}.col-sm-push-0{left:auto}.col-sm-offset-12{margin-left:100%}.col-sm-offset-11{margin-left:91.66666667%}.col-sm-offset-10{margin-left:83.33333333%}.col-sm-offset-9{margin-left:75%}.col-sm-offset-8{margin-left:66.66666667%}.col-sm-offset-7{margin-left:58.33333333%}.col-sm-offset-6{margin-left:50%}.col-sm-offset-5{margin-left:41.66666667%}.col-sm-offset-4{margin-left:33.33333333%}.col-sm-offset-3{margin-left:25%}.col-sm-offset-2{margin-left:16.66666667%}.col-sm-offset-1{margin-left:8.33333333%}.col-sm-offset-0{margin-left:0}}@media (min-width:992px){.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12{float:left}.col-md-12{width:100%}.col-md-11{width:91.66666667%}.col-md-10{width:83.33333333%}.col-md-9{width:75%}.col-md-8{width:66.66666667%}.col-md-7{width:58.33333333%}.col-md-6{width:50%}.col-md-5{width:41.66666667%}.col-md-4{width:33.33333333%}.col-md-3{width:25%}.col-md-2{width:16.66666667%}.col-md-1{width:8.33333333%}.col-md-pull-12{right:100%}.col-md-pull-11{right:91.66666667%}.col-md-pull-10{right:83.33333333%}.col-md-pull-9{right:75%}.col-md-pull-8{right:66.66666667%}.col-md-pull-7{right:58.33333333%}.col-md-pull-6{right:50%}.col-md-pull-5{right:41.66666667%}.col-md-pull-4{right:33.33333333%}.col-md-pull-3{right:25%}.col-md-pull-2{right:16.66666667%}.col-md-pull-1{right:8.33333333%}.col-md-pull-0{right:auto}.col-md-push-12{left:100%}.col-md-push-11{left:91.66666667%}.col-md-push-10{left:83.33333333%}.col-md-push-9{left:75%}.col-md-push-8{left:66.66666667%}.col-md-push-7{left:58.33333333%}.col-md-push-6{left:50%}.col-md-push-5{left:41.66666667%}.col-md-push-4{left:33.33333333%}.col-md-push-3{left:25%}.col-md-push-2{left:16.66666667%}.col-md-push-1{left:8.33333333%}.col-md-push-0{left:auto}.col-md-offset-12{margin-left:100%}.col-md-offset-11{margin-left:91.66666667%}.col-md-offset-10{margin-left:83.33333333%}.col-md-offset-9{margin-left:75%}.col-md-offset-8{margin-left:66.66666667%}.col-md-offset-7{margin-left:58.33333333%}.col-md-offset-6{margin-left:50%}.col-md-offset-5{margin-left:41.66666667%}.col-md-offset-4{margin-left:33.33333333%}.col-md-offset-3{margin-left:25%}.col-md-offset-2{margin-left:16.66666667%}.col-md-offset-1{margin-left:8.33333333%}.col-md-offset-0{margin-left:0}}@media (min-width:1200px){.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12{float:left}.col-lg-12{width:100%}.col-lg-11{width:91.66666667%}.col-lg-10{width:83.33333333%}.col-lg-9{width:75%}.col-lg-8{width:66.66666667%}.col-lg-7{width:58.33333333%}.col-lg-6{width:50%}.col-lg-5{width:41.66666667%}.col-lg-4{width:33.33333333%}.col-lg-3{width:25%}.col-lg-2{width:16.66666667%}.col-lg-1{width:8.33333333%}.col-lg-pull-12{right:100%}.col-lg-pull-11{right:91.66666667%}.col-lg-pull-10{right:83.33333333%}.col-lg-pull-9{right:75%}.col-lg-pull-8{right:66.66666667%}.col-lg-pull-7{right:58.33333333%}.col-lg-pull-6{right:50%}.col-lg-pull-5{right:41.66666667%}.col-lg-pull-4{right:33.33333333%}.col-lg-pull-3{right:25%}.col-lg-pull-2{right:16.66666667%}.col-lg-pull-1{right:8.33333333%}.col-lg-pull-0{right:auto}.col-lg-push-12{left:100%}.col-lg-push-11{left:91.66666667%}.col-lg-push-10{left:83.33333333%}.col-lg-push-9{left:75%}.col-lg-push-8{left:66.66666667%}.col-lg-push-7{left:58.33333333%}.col-lg-push-6{left:50%}.col-lg-push-5{left:41.66666667%}.col-lg-push-4{left:33.33333333%}.col-lg-push-3{left:25%}.col-lg-push-2{left:16.66666667%}.col-lg-push-1{left:8.33333333%}.col-lg-push-0{left:auto}.col-lg-offset-12{margin-left:100%}.col-lg-offset-11{margin-left:91.66666667%}.col-lg-offset-10{margin-left:83.33333333%}.col-lg-offset-9{margin-left:75%}.col-lg-offset-8{margin-left:66.66666667%}.col-lg-offset-7{margin-left:58.33333333%}.col-lg-offset-6{margin-left:50%}.col-lg-offset-5{margin-left:41.66666667%}.col-lg-offset-4{margin-left:33.33333333%}.col-lg-offset-3{margin-left:25%}.col-lg-offset-2{margin-left:16.66666667%}.col-lg-offset-1{margin-left:8.33333333%}.col-lg-offset-0{margin-left:0}}fieldset{margin:0;min-width:0}fieldset,legend{padding:0;border:0}legend{display:block;width:100%;margin-bottom:20px;font-size:21px;line-height:inherit;color:#333;border-bottom:1px solid #e5e5e5}label{display:inline-block;max-width:100%;margin-bottom:5px}input[type=search]{box-sizing:border-box}input[type=checkbox],input[type=radio]{margin:4px 0 0;margin-top:1px\\\\9;line-height:normal}input[type=file]{display:block}input[type=range]{display:block;width:100%}select[multiple],select[size]{height:auto}input[type=checkbox]:focus,input[type=file]:focus,input[type=radio]:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}output{padding-top:7px}.form-control,output{display:block;font-size:14px;line-height:1.42857143;color:#555}.form-control{width:100%;height:34px;padding:6px 12px;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);-webkit-transition:border-color .15s ease-in-out,-webkit-box-shadow .15s ease-in-out;-webkit-transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}.form-control:focus{border-color:#66afe9;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)}.form-control::-moz-placeholder{color:#999;opacity:1}.form-control:-ms-input-placeholder{color:#999}.form-control::-webkit-input-placeholder{color:#999}.form-control::-ms-expand{border:0;background-color:transparent}.form-control[disabled],.form-control[readonly],fieldset[disabled] .form-control{background-color:#eee;opacity:1}.form-control[disabled],fieldset[disabled] .form-control{cursor:not-allowed}textarea.form-control{height:auto}input[type=search]{-webkit-appearance:none}@media screen and (-webkit-min-device-pixel-ratio:0){input[type=date].form-control,input[type=datetime-local].form-control,input[type=month].form-control,input[type=time].form-control{line-height:34px}.input-group-sm input[type=date],.input-group-sm input[type=datetime-local],.input-group-sm input[type=month],.input-group-sm input[type=time],input[type=date].input-sm,input[type=datetime-local].input-sm,input[type=month].input-sm,input[type=time].input-sm{line-height:30px}.input-group-lg input[type=date],.input-group-lg input[type=datetime-local],.input-group-lg input[type=month],.input-group-lg input[type=time],input[type=date].input-lg,input[type=datetime-local].input-lg,input[type=month].input-lg,input[type=time].input-lg{line-height:46px}}.form-group{margin-bottom:15px}.checkbox,.radio{position:relative;display:block;margin-top:10px;margin-bottom:10px}.checkbox label,.radio label{min-height:20px;padding-left:20px;margin-bottom:0;font-weight:400;cursor:pointer}.checkbox-inline input[type=checkbox],.checkbox input[type=checkbox],.radio-inline input[type=radio],.radio input[type=radio]{position:absolute;margin-left:-20px;margin-top:4px\\\\9}.checkbox+.checkbox,.radio+.radio{margin-top:-5px}.checkbox-inline,.radio-inline{position:relative;display:inline-block;padding-left:20px;margin-bottom:0;vertical-align:middle;font-weight:400;cursor:pointer}.checkbox-inline+.checkbox-inline,.radio-inline+.radio-inline{margin-top:0;margin-left:10px}.checkbox-inline.disabled,.checkbox.disabled label,.radio-inline.disabled,.radio.disabled label,fieldset[disabled] .checkbox-inline,fieldset[disabled] .checkbox label,fieldset[disabled] .radio-inline,fieldset[disabled] .radio label,fieldset[disabled] input[type=checkbox],fieldset[disabled] input[type=radio],input[type=checkbox].disabled,input[type=checkbox][disabled],input[type=radio].disabled,input[type=radio][disabled]{cursor:not-allowed}.form-control-static{padding-top:7px;padding-bottom:7px;margin-bottom:0;min-height:34px}.form-control-static.input-lg,.form-control-static.input-sm{padding-left:0;padding-right:0}.input-sm{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}select.input-sm{height:30px;line-height:30px}select[multiple].input-sm,textarea.input-sm{height:auto}.form-group-sm .form-control{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.form-group-sm select.form-control{height:30px;line-height:30px}.form-group-sm select[multiple].form-control,.form-group-sm textarea.form-control{height:auto}.form-group-sm .form-control-static{height:30px;min-height:32px;padding:6px 10px;font-size:12px;line-height:1.5}.input-lg{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}select.input-lg{height:46px;line-height:46px}select[multiple].input-lg,textarea.input-lg{height:auto}.form-group-lg .form-control{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.form-group-lg select.form-control{height:46px;line-height:46px}.form-group-lg select[multiple].form-control,.form-group-lg textarea.form-control{height:auto}.form-group-lg .form-control-static{height:46px;min-height:38px;padding:11px 16px;font-size:18px;line-height:1.3333333}.has-feedback{position:relative}.has-feedback .form-control{padding-right:42.5px}.form-control-feedback{position:absolute;top:0;right:0;z-index:2;display:block;width:34px;height:34px;line-height:34px;text-align:center;pointer-events:none}.form-group-lg .form-control+.form-control-feedback,.input-group-lg+.form-control-feedback,.input-lg+.form-control-feedback{width:46px;height:46px;line-height:46px}.form-group-sm .form-control+.form-control-feedback,.input-group-sm+.form-control-feedback,.input-sm+.form-control-feedback{width:30px;height:30px;line-height:30px}.has-success .checkbox,.has-success .checkbox-inline,.has-success.checkbox-inline label,.has-success.checkbox label,.has-success .control-label,.has-success .help-block,.has-success .radio,.has-success .radio-inline,.has-success.radio-inline label,.has-success.radio label{color:#3c763d}.has-success .form-control{border-color:#3c763d;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-success .form-control:focus{border-color:#2b542c;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #67b168}.has-success .input-group-addon{color:#3c763d;border-color:#3c763d;background-color:#dff0d8}.has-success .form-control-feedback{color:#3c763d}.has-warning .checkbox,.has-warning .checkbox-inline,.has-warning.checkbox-inline label,.has-warning.checkbox label,.has-warning .control-label,.has-warning .help-block,.has-warning .radio,.has-warning .radio-inline,.has-warning.radio-inline label,.has-warning.radio label{color:#8a6d3b}.has-warning .form-control{border-color:#8a6d3b;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-warning .form-control:focus{border-color:#66512c;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c0a16b}.has-warning .input-group-addon{color:#8a6d3b;border-color:#8a6d3b;background-color:#fcf8e3}.has-warning .form-control-feedback{color:#8a6d3b}.has-error .checkbox,.has-error .checkbox-inline,.has-error.checkbox-inline label,.has-error.checkbox label,.has-error .control-label,.has-error .help-block,.has-error .radio,.has-error .radio-inline,.has-error.radio-inline label,.has-error.radio label{color:#a94442}.has-error .form-control{border-color:#a94442;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-error .form-control:focus{border-color:#843534;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #ce8483}.has-error .input-group-addon{color:#a94442;border-color:#a94442;background-color:#f2dede}.has-error .form-control-feedback{color:#a94442}.has-feedback label~.form-control-feedback{top:25px}.has-feedback label.sr-only~.form-control-feedback{top:0}.help-block{display:block;margin-top:5px;margin-bottom:10px;color:#737373}@media (min-width:768px){.form-inline .form-group{display:inline-block;margin-bottom:0;vertical-align:middle}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-static{display:inline-block}.form-inline .input-group{display:inline-table;vertical-align:middle}.form-inline .input-group .form-control,.form-inline .input-group .input-group-addon,.form-inline .input-group .input-group-btn{width:auto}.form-inline .input-group>.form-control{width:100%}.form-inline .control-label{margin-bottom:0;vertical-align:middle}.form-inline .checkbox,.form-inline .radio{display:inline-block;margin-top:0;margin-bottom:0;vertical-align:middle}.form-inline .checkbox label,.form-inline .radio label{padding-left:0}.form-inline .checkbox input[type=checkbox],.form-inline .radio input[type=radio]{position:relative;margin-left:0}.form-inline .has-feedback .form-control-feedback{top:0}}.form-horizontal .checkbox,.form-horizontal .checkbox-inline,.form-horizontal .radio,.form-horizontal .radio-inline{margin-top:0;margin-bottom:0;padding-top:7px}.form-horizontal .checkbox,.form-horizontal .radio{min-height:27px}.form-horizontal .form-group{margin-left:-15px;margin-right:-15px}@media (min-width:768px){.form-horizontal .control-label{text-align:right;margin-bottom:0;padding-top:7px}}.form-horizontal .has-feedback .form-control-feedback{right:15px}@media (min-width:768px){.form-horizontal .form-group-lg .control-label{padding-top:11px;font-size:18px}}@media (min-width:768px){.form-horizontal .form-group-sm .control-label{padding-top:6px;font-size:12px}}.btn{display:inline-block;margin-bottom:0;font-weight:400;text-align:center;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;background-image:none;border:1px solid transparent;white-space:nowrap;padding:6px 12px;font-size:14px;line-height:1.42857143;border-radius:4px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.btn.active.focus,.btn.active:focus,.btn.focus,.btn:active.focus,.btn:active:focus,.btn:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn.focus,.btn:focus,.btn:hover{color:#333;text-decoration:none}.btn.active,.btn:active{outline:0;background-image:none;box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn.disabled,.btn[disabled],fieldset[disabled] .btn{cursor:not-allowed;opacity:.65;filter:alpha(opacity=65);box-shadow:none}a.btn.disabled,fieldset[disabled] a.btn{pointer-events:none}.btn-default{color:#333;background-color:#fff;border-color:#ccc}.btn-default.focus,.btn-default:focus{color:#333;background-color:#e6e6e6;border-color:#8c8c8c}.btn-default.active,.btn-default:active,.btn-default:hover,.open>.dropdown-toggle.btn-default{color:#333;background-color:#e6e6e6;border-color:#adadad}.btn-default.active.focus,.btn-default.active:focus,.btn-default.active:hover,.btn-default:active.focus,.btn-default:active:focus,.btn-default:active:hover,.open>.dropdown-toggle.btn-default.focus,.open>.dropdown-toggle.btn-default:focus,.open>.dropdown-toggle.btn-default:hover{color:#333;background-color:#d4d4d4;border-color:#8c8c8c}.btn-default.active,.btn-default:active,.open>.dropdown-toggle.btn-default{background-image:none}.btn-default.disabled.focus,.btn-default.disabled:focus,.btn-default.disabled:hover,.btn-default[disabled].focus,.btn-default[disabled]:focus,.btn-default[disabled]:hover,fieldset[disabled] .btn-default.focus,fieldset[disabled] .btn-default:focus,fieldset[disabled] .btn-default:hover{background-color:#fff;border-color:#ccc}.btn-default .badge{color:#fff;background-color:#333}.btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}.btn-primary.focus,.btn-primary:focus{color:#fff;background-color:#286090;border-color:#122b40}.btn-primary.active,.btn-primary:active,.btn-primary:hover,.open>.dropdown-toggle.btn-primary{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active.focus,.btn-primary.active:focus,.btn-primary.active:hover,.btn-primary:active.focus,.btn-primary:active:focus,.btn-primary:active:hover,.open>.dropdown-toggle.btn-primary.focus,.open>.dropdown-toggle.btn-primary:focus,.open>.dropdown-toggle.btn-primary:hover{color:#fff;background-color:#204d74;border-color:#122b40}.btn-primary.active,.btn-primary:active,.open>.dropdown-toggle.btn-primary{background-image:none}.btn-primary.disabled.focus,.btn-primary.disabled:focus,.btn-primary.disabled:hover,.btn-primary[disabled].focus,.btn-primary[disabled]:focus,.btn-primary[disabled]:hover,fieldset[disabled] .btn-primary.focus,fieldset[disabled] .btn-primary:focus,fieldset[disabled] .btn-primary:hover{background-color:#337ab7;border-color:#2e6da4}.btn-primary .badge{color:#337ab7;background-color:#fff}.btn-success{color:#fff;background-color:#5cb85c;border-color:#4cae4c}.btn-success.focus,.btn-success:focus{color:#fff;background-color:#449d44;border-color:#255625}.btn-success.active,.btn-success:active,.btn-success:hover,.open>.dropdown-toggle.btn-success{color:#fff;background-color:#449d44;border-color:#398439}.btn-success.active.focus,.btn-success.active:focus,.btn-success.active:hover,.btn-success:active.focus,.btn-success:active:focus,.btn-success:active:hover,.open>.dropdown-toggle.btn-success.focus,.open>.dropdown-toggle.btn-success:focus,.open>.dropdown-toggle.btn-success:hover{color:#fff;background-color:#398439;border-color:#255625}.btn-success.active,.btn-success:active,.open>.dropdown-toggle.btn-success{background-image:none}.btn-success.disabled.focus,.btn-success.disabled:focus,.btn-success.disabled:hover,.btn-success[disabled].focus,.btn-success[disabled]:focus,.btn-success[disabled]:hover,fieldset[disabled] .btn-success.focus,fieldset[disabled] .btn-success:focus,fieldset[disabled] .btn-success:hover{background-color:#5cb85c;border-color:#4cae4c}.btn-success .badge{color:#5cb85c;background-color:#fff}.btn-info{color:#fff;background-color:#5bc0de;border-color:#46b8da}.btn-info.focus,.btn-info:focus{color:#fff;background-color:#31b0d5;border-color:#1b6d85}.btn-info.active,.btn-info:active,.btn-info:hover,.open>.dropdown-toggle.btn-info{color:#fff;background-color:#31b0d5;border-color:#269abc}.btn-info.active.focus,.btn-info.active:focus,.btn-info.active:hover,.btn-info:active.focus,.btn-info:active:focus,.btn-info:active:hover,.open>.dropdown-toggle.btn-info.focus,.open>.dropdown-toggle.btn-info:focus,.open>.dropdown-toggle.btn-info:hover{color:#fff;background-color:#269abc;border-color:#1b6d85}.btn-info.active,.btn-info:active,.open>.dropdown-toggle.btn-info{background-image:none}.btn-info.disabled.focus,.btn-info.disabled:focus,.btn-info.disabled:hover,.btn-info[disabled].focus,.btn-info[disabled]:focus,.btn-info[disabled]:hover,fieldset[disabled] .btn-info.focus,fieldset[disabled] .btn-info:focus,fieldset[disabled] .btn-info:hover{background-color:#5bc0de;border-color:#46b8da}.btn-info .badge{color:#5bc0de;background-color:#fff}.btn-warning{color:#fff;background-color:#f0ad4e;border-color:#eea236}.btn-warning.focus,.btn-warning:focus{color:#fff;background-color:#ec971f;border-color:#985f0d}.btn-warning.active,.btn-warning:active,.btn-warning:hover,.open>.dropdown-toggle.btn-warning{color:#fff;background-color:#ec971f;border-color:#d58512}.btn-warning.active.focus,.btn-warning.active:focus,.btn-warning.active:hover,.btn-warning:active.focus,.btn-warning:active:focus,.btn-warning:active:hover,.open>.dropdown-toggle.btn-warning.focus,.open>.dropdown-toggle.btn-warning:focus,.open>.dropdown-toggle.btn-warning:hover{color:#fff;background-color:#d58512;border-color:#985f0d}.btn-warning.active,.btn-warning:active,.open>.dropdown-toggle.btn-warning{background-image:none}.btn-warning.disabled.focus,.btn-warning.disabled:focus,.btn-warning.disabled:hover,.btn-warning[disabled].focus,.btn-warning[disabled]:focus,.btn-warning[disabled]:hover,fieldset[disabled] .btn-warning.focus,fieldset[disabled] .btn-warning:focus,fieldset[disabled] .btn-warning:hover{background-color:#f0ad4e;border-color:#eea236}.btn-warning .badge{color:#f0ad4e;background-color:#fff}.btn-danger{color:#fff;background-color:#d9534f;border-color:#d43f3a}.btn-danger.focus,.btn-danger:focus{color:#fff;background-color:#c9302c;border-color:#761c19}.btn-danger.active,.btn-danger:active,.btn-danger:hover,.open>.dropdown-toggle.btn-danger{color:#fff;background-color:#c9302c;border-color:#ac2925}.btn-danger.active.focus,.btn-danger.active:focus,.btn-danger.active:hover,.btn-danger:active.focus,.btn-danger:active:focus,.btn-danger:active:hover,.open>.dropdown-toggle.btn-danger.focus,.open>.dropdown-toggle.btn-danger:focus,.open>.dropdown-toggle.btn-danger:hover{color:#fff;background-color:#ac2925;border-color:#761c19}.btn-danger.active,.btn-danger:active,.open>.dropdown-toggle.btn-danger{background-image:none}.btn-danger.disabled.focus,.btn-danger.disabled:focus,.btn-danger.disabled:hover,.btn-danger[disabled].focus,.btn-danger[disabled]:focus,.btn-danger[disabled]:hover,fieldset[disabled] .btn-danger.focus,fieldset[disabled] .btn-danger:focus,fieldset[disabled] .btn-danger:hover{background-color:#d9534f;border-color:#d43f3a}.btn-danger .badge{color:#d9534f;background-color:#fff}.btn-link{color:#337ab7;font-weight:400;border-radius:0}.btn-link,.btn-link.active,.btn-link:active,.btn-link[disabled],fieldset[disabled] .btn-link{background-color:transparent;box-shadow:none}.btn-link,.btn-link:active,.btn-link:focus,.btn-link:hover{border-color:transparent}.btn-link:focus,.btn-link:hover{color:#23527c;text-decoration:underline;background-color:transparent}.btn-link[disabled]:focus,.btn-link[disabled]:hover,fieldset[disabled] .btn-link:focus,fieldset[disabled] .btn-link:hover{color:#777;text-decoration:none}.btn-group-lg>.btn,.btn-lg{padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.btn-group-sm>.btn,.btn-sm{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.btn-group-xs>.btn,.btn-xs{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:5px}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.btn-group,.btn-group-vertical{position:relative;display:inline-block;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;float:left}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:hover,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus,.btn-group>.btn:hover{z-index:2}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{margin-left:-5px}.btn-toolbar .btn,.btn-toolbar .btn-group,.btn-toolbar .input-group{float:left}.btn-toolbar>.btn,.btn-toolbar>.btn-group,.btn-toolbar>.input-group{margin-left:5px}.btn-group>.btn:not(:first-child):not(:last-child):not(.dropdown-toggle){border-radius:0}.btn-group>.btn:first-child{margin-left:0}.btn-group>.btn:first-child:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-top-right-radius:0}.btn-group>.btn:last-child:not(:first-child),.btn-group>.dropdown-toggle:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0}.btn-group>.btn-group{float:left}.btn-group>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-top-right-radius:0}.btn-group>.btn-group:last-child:not(:first-child)>.btn:first-child{border-bottom-left-radius:0;border-top-left-radius:0}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0}.btn-group>.btn+.dropdown-toggle{padding-left:8px;padding-right:8px}.btn-group>.btn-lg+.dropdown-toggle{padding-left:12px;padding-right:12px}.btn-group.open .dropdown-toggle{box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-group.open .dropdown-toggle.btn-link{box-shadow:none}.btn .caret{margin-left:0}.btn-lg .caret{border-width:5px 5px 0;border-bottom-width:0}.dropup .btn-lg .caret{border-width:0 5px 5px}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group,.btn-group-vertical>.btn-group>.btn{display:block;float:none;width:100%;max-width:100%}.btn-group-vertical>.btn-group>.btn{float:none}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical>.btn:not(:first-child):not(:last-child){border-radius:0}.btn-group-vertical>.btn:first-child:not(:last-child){border-top-right-radius:4px;border-top-left-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn:last-child:not(:first-child){border-top-right-radius:0;border-top-left-radius:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px}.btn-group-vertical>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group-vertical>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group-vertical>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:last-child:not(:first-child)>.btn:first-child{border-top-right-radius:0;border-top-left-radius:0}.btn-group-justified{display:table;width:100%;table-layout:fixed;border-collapse:separate}.btn-group-justified>.btn,.btn-group-justified>.btn-group{float:none;display:table-cell;width:1%}.btn-group-justified>.btn-group .btn{width:100%}.btn-group-justified>.btn-group .dropdown-menu{left:auto}[data-toggle=buttons]>.btn-group>.btn input[type=checkbox],[data-toggle=buttons]>.btn-group>.btn input[type=radio],[data-toggle=buttons]>.btn input[type=checkbox],[data-toggle=buttons]>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:table;border-collapse:separate}.input-group[class*=col-]{float:none;padding-left:0;padding-right:0}.input-group .form-control{position:relative;z-index:2;float:left;width:100%;margin-bottom:0}.input-group .form-control:focus{z-index:3}.input-group-lg>.form-control,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.btn{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}select.input-group-lg>.form-control,select.input-group-lg>.input-group-addon,select.input-group-lg>.input-group-btn>.btn{height:46px;line-height:46px}select[multiple].input-group-lg>.form-control,select[multiple].input-group-lg>.input-group-addon,select[multiple].input-group-lg>.input-group-btn>.btn,textarea.input-group-lg>.form-control,textarea.input-group-lg>.input-group-addon,textarea.input-group-lg>.input-group-btn>.btn{height:auto}.input-group-sm>.form-control,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.btn{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}select.input-group-sm>.form-control,select.input-group-sm>.input-group-addon,select.input-group-sm>.input-group-btn>.btn{height:30px;line-height:30px}select[multiple].input-group-sm>.form-control,select[multiple].input-group-sm>.input-group-addon,select[multiple].input-group-sm>.input-group-btn>.btn,textarea.input-group-sm>.form-control,textarea.input-group-sm>.input-group-addon,textarea.input-group-sm>.input-group-btn>.btn{height:auto}.input-group-addon,.input-group-btn,.input-group .form-control{display:table-cell}.input-group-addon:not(:first-child):not(:last-child),.input-group-btn:not(:first-child):not(:last-child),.input-group .form-control:not(:first-child):not(:last-child){border-radius:0}.input-group-addon,.input-group-btn{width:1%;white-space:nowrap;vertical-align:middle}.input-group-addon{padding:6px 12px;font-size:14px;font-weight:400;line-height:1;color:#555;text-align:center;background-color:#eee;border:1px solid #ccc;border-radius:4px}.input-group-addon.input-sm{padding:5px 10px;font-size:12px;border-radius:3px}.input-group-addon.input-lg{padding:10px 16px;font-size:18px;border-radius:6px}.input-group-addon input[type=checkbox],.input-group-addon input[type=radio]{margin-top:0}.input-group-addon:first-child,.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group>.btn,.input-group-btn:first-child>.dropdown-toggle,.input-group-btn:last-child>.btn-group:not(:last-child)>.btn,.input-group-btn:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group .form-control:first-child{border-bottom-right-radius:0;border-top-right-radius:0}.input-group-addon:first-child{border-right:0}.input-group-addon:last-child,.input-group-btn:first-child>.btn-group:not(:first-child)>.btn,.input-group-btn:first-child>.btn:not(:first-child),.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group>.btn,.input-group-btn:last-child>.dropdown-toggle,.input-group .form-control:last-child{border-bottom-left-radius:0;border-top-left-radius:0}.input-group-addon:last-child{border-left:0}.input-group-btn{font-size:0;white-space:nowrap}.input-group-btn,.input-group-btn>.btn{position:relative}.input-group-btn>.btn+.btn{margin-left:-1px}.input-group-btn>.btn:active,.input-group-btn>.btn:focus,.input-group-btn>.btn:hover{z-index:2}.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group{margin-right:-1px}.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group{z-index:2;margin-left:-1px}.btn-group-vertical>.btn-group:after,.btn-group-vertical>.btn-group:before,.btn-toolbar:after,.btn-toolbar:before,.clearfix:after,.clearfix:before,.form-horizontal .form-group:after,.form-horizontal .form-group:before,.row:after,.row:before{content:\\\" \\\";display:table}.btn-group-vertical>.btn-group:after,.btn-toolbar:after,.clearfix:after,.form-horizontal .form-group:after,.row:after{clear:both}.center-block{display:block;margin-left:auto;margin-right:auto}.pull-right{float:right!important}.pull-left{float:left!important}.hide{display:none!important}.show{display:block!important}.invisible{visibility:hidden}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.hidden{display:none!important}.affix{position:fixed}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/autoprefixer-loader!./src/bootstrap.css\n ** module id = 6\n ** module chunks = 0\n **/","(function (main) {\n  'use strict';\n\n  /**\n   * Parse or format dates\n   * @class fecha\n   */\n  var fecha = {};\n  var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\n  var twoDigits = /\\d\\d?/;\n  var threeDigits = /\\d{3}/;\n  var fourDigits = /\\d{4}/;\n  var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n  var noop = function () {\n  };\n\n  function shorten(arr, sLen) {\n    var newArr = [];\n    for (var i = 0, len = arr.length; i < len; i++) {\n      newArr.push(arr[i].substr(0, sLen));\n    }\n    return newArr;\n  }\n\n  function monthUpdate(arrName) {\n    return function (d, v, i18n) {\n      var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\n      if (~index) {\n        d.month = index;\n      }\n    };\n  }\n\n  function pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n      val = '0' + val;\n    }\n    return val;\n  }\n\n  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var monthNamesShort = shorten(monthNames, 3);\n  var dayNamesShort = shorten(dayNames, 3);\n  fecha.i18n = {\n    dayNamesShort: dayNamesShort,\n    dayNames: dayNames,\n    monthNamesShort: monthNamesShort,\n    monthNames: monthNames,\n    amPm: ['am', 'pm'],\n    DoFn: function DoFn(D) {\n      return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\n    }\n  };\n\n  var formatFlags = {\n    D: function(dateObj) {\n      return dateObj.getDate();\n    },\n    DD: function(dateObj) {\n      return pad(dateObj.getDate());\n    },\n    Do: function(dateObj, i18n) {\n      return i18n.DoFn(dateObj.getDate());\n    },\n    d: function(dateObj) {\n      return dateObj.getDay();\n    },\n    dd: function(dateObj) {\n      return pad(dateObj.getDay());\n    },\n    ddd: function(dateObj, i18n) {\n      return i18n.dayNamesShort[dateObj.getDay()];\n    },\n    dddd: function(dateObj, i18n) {\n      return i18n.dayNames[dateObj.getDay()];\n    },\n    M: function(dateObj) {\n      return dateObj.getMonth() + 1;\n    },\n    MM: function(dateObj) {\n      return pad(dateObj.getMonth() + 1);\n    },\n    MMM: function(dateObj, i18n) {\n      return i18n.monthNamesShort[dateObj.getMonth()];\n    },\n    MMMM: function(dateObj, i18n) {\n      return i18n.monthNames[dateObj.getMonth()];\n    },\n    YY: function(dateObj) {\n      return String(dateObj.getFullYear()).substr(2);\n    },\n    YYYY: function(dateObj) {\n      return dateObj.getFullYear();\n    },\n    h: function(dateObj) {\n      return dateObj.getHours() % 12 || 12;\n    },\n    hh: function(dateObj) {\n      return pad(dateObj.getHours() % 12 || 12);\n    },\n    H: function(dateObj) {\n      return dateObj.getHours();\n    },\n    HH: function(dateObj) {\n      return pad(dateObj.getHours());\n    },\n    m: function(dateObj) {\n      return dateObj.getMinutes();\n    },\n    mm: function(dateObj) {\n      return pad(dateObj.getMinutes());\n    },\n    s: function(dateObj) {\n      return dateObj.getSeconds();\n    },\n    ss: function(dateObj) {\n      return pad(dateObj.getSeconds());\n    },\n    S: function(dateObj) {\n      return Math.round(dateObj.getMilliseconds() / 100);\n    },\n    SS: function(dateObj) {\n      return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n    },\n    SSS: function(dateObj) {\n      return pad(dateObj.getMilliseconds(), 3);\n    },\n    a: function(dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n    },\n    A: function(dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\n    },\n    ZZ: function(dateObj) {\n      var o = dateObj.getTimezoneOffset();\n      return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\n    }\n  };\n\n  var parseFlags = {\n    D: [twoDigits, function (d, v) {\n      d.day = v;\n    }],\n    M: [twoDigits, function (d, v) {\n      d.month = v - 1;\n    }],\n    YY: [twoDigits, function (d, v) {\n      var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\n      d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n    }],\n    h: [twoDigits, function (d, v) {\n      d.hour = v;\n    }],\n    m: [twoDigits, function (d, v) {\n      d.minute = v;\n    }],\n    s: [twoDigits, function (d, v) {\n      d.second = v;\n    }],\n    YYYY: [fourDigits, function (d, v) {\n      d.year = v;\n    }],\n    S: [/\\d/, function (d, v) {\n      d.millisecond = v * 100;\n    }],\n    SS: [/\\d{2}/, function (d, v) {\n      d.millisecond = v * 10;\n    }],\n    SSS: [threeDigits, function (d, v) {\n      d.millisecond = v;\n    }],\n    d: [twoDigits, noop],\n    ddd: [word, noop],\n    MMM: [word, monthUpdate('monthNamesShort')],\n    MMMM: [word, monthUpdate('monthNames')],\n    a: [word, function (d, v, i18n) {\n      var val = v.toLowerCase();\n      if (val === i18n.amPm[0]) {\n        d.isPm = false;\n      } else if (val === i18n.amPm[1]) {\n        d.isPm = true;\n      }\n    }],\n    ZZ: [/[\\+\\-]\\d\\d:?\\d\\d/, function (d, v) {\n      var parts = (v + '').match(/([\\+\\-]|\\d\\d)/gi), minutes;\n\n      if (parts) {\n        minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n        d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n      }\n    }]\n  };\n  parseFlags.dd = parseFlags.d;\n  parseFlags.dddd = parseFlags.ddd;\n  parseFlags.Do = parseFlags.DD = parseFlags.D;\n  parseFlags.mm = parseFlags.m;\n  parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\n  parseFlags.MM = parseFlags.M;\n  parseFlags.ss = parseFlags.s;\n  parseFlags.A = parseFlags.a;\n\n\n  // Some common format strings\n  fecha.masks = {\n    'default': 'ddd MMM DD YYYY HH:mm:ss',\n    shortDate: 'M/D/YY',\n    mediumDate: 'MMM D, YYYY',\n    longDate: 'MMMM D, YYYY',\n    fullDate: 'dddd, MMMM D, YYYY',\n    shortTime: 'HH:mm',\n    mediumTime: 'HH:mm:ss',\n    longTime: 'HH:mm:ss.SSS'\n  };\n\n  /***\n   * Format a date\n   * @method format\n   * @param {Date|number} dateObj\n   * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n   */\n  fecha.format = function (dateObj, mask, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof dateObj === 'number') {\n      dateObj = new Date(dateObj);\n    }\n\n    if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\n      throw new Error('Invalid Date in fecha.format');\n    }\n\n    mask = fecha.masks[mask] || mask || fecha.masks['default'];\n\n    return mask.replace(token, function ($0) {\n      return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\n    });\n  };\n\n  /**\n   * Parse a date string into an object, changes - into /\n   * @method parse\n   * @param {string} dateStr Date string\n   * @param {string} format Date parse format\n   * @returns {Date|boolean}\n   */\n  fecha.parse = function (dateStr, format, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof format !== 'string') {\n      throw new Error('Invalid format in fecha.parse');\n    }\n\n    format = fecha.masks[format] || format;\n\n    // Avoid regular expression denial of service, fail early for really long strings\n    // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n    if (dateStr.length > 1000) {\n      return false;\n    }\n\n    var isValid = true;\n    var dateInfo = {};\n    format.replace(token, function ($0) {\n      if (parseFlags[$0]) {\n        var info = parseFlags[$0];\n        var index = dateStr.search(info[0]);\n        if (!~index) {\n          isValid = false;\n        } else {\n          dateStr.replace(info[0], function (result) {\n            info[1](dateInfo, result, i18n);\n            dateStr = dateStr.substr(index + result.length);\n            return result;\n          });\n        }\n      }\n\n      return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\n    });\n\n    if (!isValid) {\n      return false;\n    }\n\n    var today = new Date();\n    if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n      dateInfo.hour = +dateInfo.hour + 12;\n    } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n      dateInfo.hour = 0;\n    }\n\n    var date;\n    if (dateInfo.timezoneOffset != null) {\n      dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n      date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n        dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n    } else {\n      date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n        dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n    }\n    return date;\n  };\n\n  /* istanbul ignore next */\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = fecha;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fecha;\n    });\n  } else {\n    main.fecha = fecha;\n  }\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fecha/fecha.js\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = \"<div class=date_month> <header> <div class=input-group> <input name={{name}} type=text class=form-control value={{month_year}} twoway=false data-bind=\\\"focus: function() { this.open(true) }\\\"> <span class=input-group-addon data-bind=\\\"click: function() { this.open(true) }\\\"> <i class=\\\"icon icon-calendar\\\"></i> </span> </div> </header> {{#if: open}} <div class=picker> <div class=row> <div class=\\\"month col-xs-6\\\"> <ul> {{#foreach: visible_months}} <li data-bind=\\\"css: { selected: $parent.month() == $index() }, click: function() { $parent.month($index()) }\\\"> {{$data}} </li> {{/foreach}} </ul> </div> <div class=\\\"year col-xs-6\\\"> <header> <a data-bind=\\\"click: prev\\\" class=\\\"btn btn-default\\\"> <i class=\\\"icon icon-caret-left\\\"></i> </a> <a data-bind=\\\"click: next, attr: { disabled: !can_advance_year }\\\" class=\\\"btn btn-default\\\"> <i class=\\\"icon icon-caret-right\\\"></i> </a> </header> <ul> {{#foreach: visible_years()}} <li data-bind=\\\"css: { selected: $parent.year() == $data }, click: function() { $parent.year($data) }\\\"> {{$data}} </li> {{/foreach}} </ul> </div> </div> <footer class=text-center> <a class=\\\"btn btn-sm btn-default\\\" data-bind=\\\"click: function() { open(false) }\\\">OK</a> <a class=\\\"btn btn-sm btn-default\\\" data-bind=\\\"click: cancel\\\">Cancel</a> </footer> </div> {{/if}} </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/DateMonth.html\n ** module id = 8\n ** module chunks = 0\n **/","/**\r\n * @license Knockout.Punches\r\n * Enhanced binding syntaxes for Knockout 3+\r\n * (c) Michael Best\r\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n * Version 0.5.1\r\n */\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(['knockout'], factory);\r\n    } else if (typeof module === \"object\") {\r\n        // CommonJS module\r\n        var ko = require(\"knockout\");\r\n        factory(ko);\r\n    } else {\r\n        // Browser globals\r\n        factory(window.ko);\r\n    }\r\n}(function(ko) {\r\n\r\n// Add a preprocess function to a binding handler.\r\nfunction addBindingPreprocessor(bindingKeyOrHandler, preprocessFn) {\r\n    return chainPreprocessor(getOrCreateHandler(bindingKeyOrHandler), 'preprocess', preprocessFn);\r\n}\r\n\r\n// These utility functions are separated out because they're also used by\r\n// preprocessBindingProperty\r\n\r\n// Get the binding handler or create a new, empty one\r\nfunction getOrCreateHandler(bindingKeyOrHandler) {\r\n    return typeof bindingKeyOrHandler === 'object' ? bindingKeyOrHandler :\r\n        (ko.getBindingHandler(bindingKeyOrHandler) || (ko.bindingHandlers[bindingKeyOrHandler] = {}));\r\n}\r\n// Add a preprocess function\r\nfunction chainPreprocessor(obj, prop, fn) {\r\n    if (obj[prop]) {\r\n        // If the handler already has a preprocess function, chain the new\r\n        // one after the existing one. If the previous function in the chain\r\n        // returns a falsy value (to remove the binding), the chain ends. This\r\n        // method allows each function to modify and return the binding value.\r\n        var previousFn = obj[prop];\r\n        obj[prop] = function(value, binding, addBinding) {\r\n            value = previousFn.call(this, value, binding, addBinding);\r\n            if (value)\r\n                return fn.call(this, value, binding, addBinding);\r\n        };\r\n    } else {\r\n        obj[prop] = fn;\r\n    }\r\n    return obj;\r\n}\r\n\r\n// Add a preprocessNode function to the binding provider. If a\r\n// function already exists, chain the new one after it. This calls\r\n// each function in the chain until one modifies the node. This\r\n// method allows only one function to modify the node.\r\nfunction addNodePreprocessor(preprocessFn) {\r\n    var provider = ko.bindingProvider.instance;\r\n    if (provider.preprocessNode) {\r\n        var previousPreprocessFn = provider.preprocessNode;\r\n        provider.preprocessNode = function(node) {\r\n            var newNodes = previousPreprocessFn.call(this, node);\r\n            if (!newNodes)\r\n                newNodes = preprocessFn.call(this, node);\r\n            return newNodes;\r\n        };\r\n    } else {\r\n        provider.preprocessNode = preprocessFn;\r\n    }\r\n}\r\n\r\nfunction addBindingHandlerCreator(matchRegex, callbackFn) {\r\n    var oldGetHandler = ko.getBindingHandler;\r\n    ko.getBindingHandler = function(bindingKey) {\r\n        var match;\r\n        return oldGetHandler(bindingKey) || ((match = bindingKey.match(matchRegex)) && callbackFn(match, bindingKey));\r\n    };\r\n}\r\n\r\n// Create shortcuts to commonly used ko functions\r\nvar ko_unwrap = ko.unwrap;\r\n\r\n// Create \"punches\" object and export utility functions\r\nvar ko_punches = ko.punches = {\r\n    utils: {\r\n        addBindingPreprocessor: addBindingPreprocessor,\r\n        addNodePreprocessor: addNodePreprocessor,\r\n        addBindingHandlerCreator: addBindingHandlerCreator,\r\n\r\n        // previous names retained for backwards compitibility\r\n        setBindingPreprocessor: addBindingPreprocessor,\r\n        setNodePreprocessor: addNodePreprocessor\r\n    }\r\n};\r\n\r\nko_punches.enableAll = function () {\r\n    // Enable interpolation markup\r\n    enableInterpolationMarkup();\r\n    enableAttributeInterpolationMarkup();\r\n\r\n    // Enable auto-namspacing of attr, css, event, and style\r\n    enableAutoNamespacedSyntax('attr');\r\n    enableAutoNamespacedSyntax('css');\r\n    enableAutoNamespacedSyntax('event');\r\n    enableAutoNamespacedSyntax('style');\r\n\r\n    // Make sure that Knockout knows to bind checked after attr.value (see #40)\r\n    ko.bindingHandlers.checked.after.push('attr.value');\r\n\r\n    // Enable filter syntax for text, html, and attr\r\n    enableTextFilter('text');\r\n    enableTextFilter('html');\r\n    addDefaultNamespacedBindingPreprocessor('attr', filterPreprocessor);\r\n\r\n    // Enable wrapped callbacks for click, submit, event, optionsAfterRender, and template options\r\n    enableWrappedCallback('click');\r\n    enableWrappedCallback('submit');\r\n    enableWrappedCallback('optionsAfterRender');\r\n    addDefaultNamespacedBindingPreprocessor('event', wrappedCallbackPreprocessor);\r\n    addBindingPropertyPreprocessor('template', 'beforeRemove', wrappedCallbackPreprocessor);\r\n    addBindingPropertyPreprocessor('template', 'afterAdd', wrappedCallbackPreprocessor);\r\n    addBindingPropertyPreprocessor('template', 'afterRender', wrappedCallbackPreprocessor);\r\n};\r\n// Convert input in the form of `expression | filter1 | filter2:arg1:arg2` to a function call format\r\n// with filters accessed as ko.filters.filter1, etc.\r\nfunction filterPreprocessor(input) {\r\n    // Check if the input contains any | characters; if not, just return\r\n    if (input.indexOf('|') === -1)\r\n        return input;\r\n\r\n    // Split the input into tokens, in which | and : are individual tokens, quoted strings are ignored, and all tokens are space-trimmed\r\n    var tokens = input.match(/\"([^\"\\\\]|\\\\.)*\"|'([^'\\\\]|\\\\.)*'|\\|\\||[|:]|[^\\s|:\"'][^|:\"']*[^\\s|:\"']|[^\\s|:\"']/g);\r\n    if (tokens && tokens.length > 1) {\r\n        // Append a line so that we don't need a separate code block to deal with the last item\r\n        tokens.push('|');\r\n        input = tokens[0];\r\n        var lastToken, token, inFilters = false, nextIsFilter = false;\r\n        for (var i = 1, token; token = tokens[i]; ++i) {\r\n            if (token === '|') {\r\n                if (inFilters) {\r\n                    if (lastToken === ':')\r\n                        input += \"undefined\";\r\n                    input += ')';\r\n                }\r\n                nextIsFilter = true;\r\n                inFilters = true;\r\n            } else {\r\n                if (nextIsFilter) {\r\n                    input = \"ko.filters['\" + token + \"'](\" + input;\r\n                } else if (inFilters && token === ':') {\r\n                    if (lastToken === ':')\r\n                        input += \"undefined\";\r\n                    input += \",\";\r\n                } else {\r\n                    input += token;\r\n                }\r\n                nextIsFilter = false;\r\n            }\r\n            lastToken = token;\r\n        }\r\n    }\r\n    return input;\r\n}\r\n\r\n// Set the filter preprocessor for a specific binding\r\nfunction enableTextFilter(bindingKeyOrHandler) {\r\n    addBindingPreprocessor(bindingKeyOrHandler, filterPreprocessor);\r\n}\r\n\r\nvar filters = {};\r\n\r\n// Convert value to uppercase\r\nfilters.uppercase = function(value) {\r\n    return String.prototype.toUpperCase.call(ko_unwrap(value));\r\n};\r\n\r\n// Convert value to lowercase\r\nfilters.lowercase = function(value) {\r\n    return String.prototype.toLowerCase.call(ko_unwrap(value));\r\n};\r\n\r\n// Return default value if the input value is empty or null\r\nfilters['default'] = function (value, defaultValue) {\r\n    value = ko_unwrap(value);\r\n    if (typeof value === \"function\") {\r\n        return value;\r\n    }\r\n    if (typeof value === \"string\") {\r\n        return trim(value) === '' ? defaultValue : value;\r\n    }\r\n    return value == null || value.length == 0 ? defaultValue : value;\r\n};\r\n\r\n// Return the value with the search string replaced with the replacement string\r\nfilters.replace = function(value, search, replace) {\r\n    return String.prototype.replace.call(ko_unwrap(value), search, replace);\r\n};\r\n\r\nfilters.fit = function(value, length, replacement, trimWhere) {\r\n    value = ko_unwrap(value);\r\n    if (length && ('' + value).length > length) {\r\n        replacement = '' + (replacement || '...');\r\n        length = length - replacement.length;\r\n        value = '' + value;\r\n        switch (trimWhere) {\r\n            case 'left':\r\n                return replacement + value.slice(-length);\r\n            case 'middle':\r\n                var leftLen = Math.ceil(length / 2);\r\n                return value.substr(0, leftLen) + replacement + value.slice(leftLen-length);\r\n            default:\r\n                return value.substr(0, length) + replacement;\r\n        }\r\n    } else {\r\n        return value;\r\n    }\r\n};\r\n\r\n// Convert a model object to JSON\r\nfilters.json = function(rootObject, space, replacer) {     // replacer and space are optional\r\n    return ko.toJSON(rootObject, replacer, space);\r\n};\r\n\r\n// Format a number using the browser's toLocaleString\r\nfilters.number = function(value) {\r\n    return (+ko_unwrap(value)).toLocaleString();\r\n};\r\n\r\n// Export the filters object for general access\r\nko.filters = filters;\r\n\r\n// Export the preprocessor functions\r\nko_punches.textFilter = {\r\n    preprocessor: filterPreprocessor,\r\n    enableForBinding: enableTextFilter\r\n};\r\n// Support dynamically-created, namespaced bindings. The binding key syntax is\r\n// \"namespace.binding\". Within a certain namespace, we can dynamically create the\r\n// handler for any binding. This is particularly useful for bindings that work\r\n// the same way, but just set a different named value, such as for element\r\n// attributes or CSS classes.\r\nvar namespacedBindingMatch = /([^\\.]+)\\.(.+)/, namespaceDivider = '.';\r\naddBindingHandlerCreator(namespacedBindingMatch, function (match, bindingKey) {\r\n    var namespace = match[1],\r\n        namespaceHandler = ko.bindingHandlers[namespace];\r\n    if (namespaceHandler) {\r\n        var bindingName = match[2],\r\n            handlerFn = namespaceHandler.getNamespacedHandler || defaultGetNamespacedHandler,\r\n            handler = handlerFn.call(namespaceHandler, bindingName, namespace, bindingKey);\r\n        ko.bindingHandlers[bindingKey] = handler;\r\n        return handler;\r\n    }\r\n});\r\n\r\n// Knockout's built-in bindings \"attr\", \"event\", \"css\" and \"style\" include the idea of\r\n// namespaces, representing it using a single binding that takes an object map of names\r\n// to values. This default handler translates a binding of \"namespacedName: value\"\r\n// to \"namespace: {name: value}\" to automatically support those built-in bindings.\r\nfunction defaultGetNamespacedHandler(name, namespace, namespacedName) {\r\n    var handler = ko.utils.extend({}, this);\r\n    function setHandlerFunction(funcName) {\r\n        if (handler[funcName]) {\r\n            handler[funcName] = function(element, valueAccessor) {\r\n                function subValueAccessor() {\r\n                    var result = {};\r\n                    result[name] = valueAccessor();\r\n                    return result;\r\n                }\r\n                var args = Array.prototype.slice.call(arguments, 0);\r\n                args[1] = subValueAccessor;\r\n                return ko.bindingHandlers[namespace][funcName].apply(this, args);\r\n            };\r\n        }\r\n    }\r\n    // Set new init and update functions that wrap the originals\r\n    setHandlerFunction('init');\r\n    setHandlerFunction('update');\r\n    // Clear any preprocess function since preprocessing of the new binding would need to be different\r\n    if (handler.preprocess)\r\n        handler.preprocess = null;\r\n    if (ko.virtualElements.allowedBindings[namespace])\r\n        ko.virtualElements.allowedBindings[namespacedName] = true;\r\n    return handler;\r\n}\r\n\r\n// Adds a preprocess function for every generated namespace.x binding. This can\r\n// be called multiple times for the same binding, and the preprocess functions will\r\n// be chained. If the binding has a custom getNamespacedHandler method, make sure that\r\n// it's set before this function is used.\r\nfunction addDefaultNamespacedBindingPreprocessor(namespace, preprocessFn) {\r\n    var handler = ko.getBindingHandler(namespace);\r\n    if (handler) {\r\n        var previousHandlerFn = handler.getNamespacedHandler || defaultGetNamespacedHandler;\r\n        handler.getNamespacedHandler = function() {\r\n            return addBindingPreprocessor(previousHandlerFn.apply(this, arguments), preprocessFn);\r\n        };\r\n    }\r\n}\r\n\r\nfunction autoNamespacedPreprocessor(value, binding, addBinding) {\r\n    if (value.charAt(0) !== \"{\")\r\n        return value;\r\n\r\n    // Handle two-level binding specified as \"binding: {key: value}\" by parsing inner\r\n    // object and converting to \"binding.key: value\"\r\n    var subBindings = ko.expressionRewriting.parseObjectLiteral(value);\r\n    ko.utils.arrayForEach(subBindings, function(keyValue) {\r\n        addBinding(binding + namespaceDivider + keyValue.key, keyValue.value);\r\n    });\r\n}\r\n\r\n// Set the namespaced preprocessor for a specific binding\r\nfunction enableAutoNamespacedSyntax(bindingKeyOrHandler) {\r\n    addBindingPreprocessor(bindingKeyOrHandler, autoNamespacedPreprocessor);\r\n}\r\n\r\n// Export the preprocessor functions\r\nko_punches.namespacedBinding = {\r\n    defaultGetHandler: defaultGetNamespacedHandler,\r\n    setDefaultBindingPreprocessor: addDefaultNamespacedBindingPreprocessor,    // for backwards compat.\r\n    addDefaultBindingPreprocessor: addDefaultNamespacedBindingPreprocessor,\r\n    preprocessor: autoNamespacedPreprocessor,\r\n    enableForBinding: enableAutoNamespacedSyntax\r\n};\r\n// Wrap a callback function in an anonymous function so that it is called with the appropriate\r\n// \"this\" value.\r\nfunction wrappedCallbackPreprocessor(val) {\r\n    // Matches either an isolated identifier or something ending with a property accessor\r\n    if (/^([$_a-z][$\\w]*|.+(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i.test(val)) {\r\n        return 'function(_x,_y,_z){return(' + val + ')(_x,_y,_z);}';\r\n    } else {\r\n        return val;\r\n    }\r\n}\r\n\r\n// Set the wrappedCallback preprocessor for a specific binding\r\nfunction enableWrappedCallback(bindingKeyOrHandler) {\r\n    addBindingPreprocessor(bindingKeyOrHandler, wrappedCallbackPreprocessor);\r\n}\r\n\r\n// Export the preprocessor functions\r\nko_punches.wrappedCallback = {\r\n    preprocessor: wrappedCallbackPreprocessor,\r\n    enableForBinding: enableWrappedCallback\r\n};\r\n// Attach a preprocess function to a specific property of a binding. This allows you to\r\n// preprocess binding \"options\" using the same preprocess functions that work for bindings.\r\nfunction addBindingPropertyPreprocessor(bindingKeyOrHandler, property, preprocessFn) {\r\n    var handler = getOrCreateHandler(bindingKeyOrHandler);\r\n    if (!handler._propertyPreprocessors) {\r\n        // Initialize the binding preprocessor\r\n        chainPreprocessor(handler, 'preprocess', propertyPreprocessor);\r\n        handler._propertyPreprocessors = {};\r\n    }\r\n    // Add the property preprocess function\r\n    chainPreprocessor(handler._propertyPreprocessors, property, preprocessFn);\r\n}\r\n\r\n// In order to preprocess a binding property, we have to preprocess the binding itself.\r\n// This preprocess function splits up the binding value and runs each property's preprocess\r\n// function if it's set.\r\nfunction propertyPreprocessor(value, binding, addBinding) {\r\n    if (value.charAt(0) !== \"{\")\r\n        return value;\r\n\r\n    var subBindings = ko.expressionRewriting.parseObjectLiteral(value),\r\n        resultStrings = [],\r\n        propertyPreprocessors = this._propertyPreprocessors || {};\r\n    ko.utils.arrayForEach(subBindings, function(keyValue) {\r\n        var prop = keyValue.key, propVal = keyValue.value;\r\n        if (propertyPreprocessors[prop]) {\r\n            propVal = propertyPreprocessors[prop](propVal, prop, addBinding);\r\n        }\r\n        if (propVal) {\r\n            resultStrings.push(\"'\" + prop + \"':\" + propVal);\r\n        }\r\n    });\r\n    return \"{\" + resultStrings.join(\",\") + \"}\";\r\n}\r\n\r\n// Export the preprocessor functions\r\nko_punches.preprocessBindingProperty = {\r\n    setPreprocessor: addBindingPropertyPreprocessor,     // for backwards compat.\r\n    addPreprocessor: addBindingPropertyPreprocessor\r\n};\r\n// Wrap an expression in an anonymous function so that it is called when the event happens\r\nfunction makeExpressionCallbackPreprocessor(args) {\r\n    return function expressionCallbackPreprocessor(val) {\r\n        return 'function('+args+'){return(' + val + ');}';\r\n    };\r\n}\r\n\r\nvar eventExpressionPreprocessor = makeExpressionCallbackPreprocessor(\"$data,$event\");\r\n\r\n// Set the expressionCallback preprocessor for a specific binding\r\nfunction enableExpressionCallback(bindingKeyOrHandler, args) {\r\n    var args = Array.prototype.slice.call(arguments, 1).join();\r\n    addBindingPreprocessor(bindingKeyOrHandler, makeExpressionCallbackPreprocessor(args));\r\n}\r\n\r\n// Export the preprocessor functions\r\nko_punches.expressionCallback = {\r\n    makePreprocessor: makeExpressionCallbackPreprocessor,\r\n    eventPreprocessor: eventExpressionPreprocessor,\r\n    enableForBinding: enableExpressionCallback\r\n};\r\n\r\n// Create an \"on\" namespace for events to use the expression method\r\nko.bindingHandlers.on = {\r\n    getNamespacedHandler: function(eventName) {\r\n        var handler = ko.getBindingHandler('event' + namespaceDivider + eventName);\r\n        return addBindingPreprocessor(handler, eventExpressionPreprocessor);\r\n    }\r\n};\r\n// Performance comparison at http://jsperf.com/markup-interpolation-comparison\r\nfunction parseInterpolationMarkup(textToParse, outerTextCallback, expressionCallback) {\r\n    function innerParse(text) {\r\n        var innerMatch = text.match(/^([\\s\\S]*)}}([\\s\\S]*?)\\{\\{([\\s\\S]*)$/);\r\n        if (innerMatch) {\r\n            innerParse(innerMatch[1]);\r\n            outerTextCallback(innerMatch[2]);\r\n            expressionCallback(innerMatch[3]);\r\n        } else {\r\n            expressionCallback(text);\r\n        }\r\n    }\r\n    var outerMatch = textToParse.match(/^([\\s\\S]*?)\\{\\{([\\s\\S]*)}}([\\s\\S]*)$/);\r\n    if (outerMatch) {\r\n        outerTextCallback(outerMatch[1]);\r\n        innerParse(outerMatch[2]);\r\n        outerTextCallback(outerMatch[3]);\r\n    }\r\n}\r\n\r\nfunction trim(string) {\r\n    return string == null ? '' :\r\n        string.trim ?\r\n            string.trim() :\r\n            string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\r\n}\r\n\r\nfunction interpolationMarkupPreprocessor(node) {\r\n    // only needs to work with text nodes\r\n    if (node.nodeType === 3 && node.nodeValue && node.nodeValue.indexOf('{{') !== -1 && (node.parentNode || {}).nodeName != \"TEXTAREA\") {\r\n        var nodes = [];\r\n        function addTextNode(text) {\r\n            if (text)\r\n                nodes.push(document.createTextNode(text));\r\n        }\r\n        function wrapExpr(expressionText) {\r\n            if (expressionText)\r\n                nodes.push.apply(nodes, ko_punches_interpolationMarkup.wrapExpression(expressionText, node));\r\n        }\r\n        parseInterpolationMarkup(node.nodeValue, addTextNode, wrapExpr)\r\n\r\n        if (nodes.length) {\r\n            if (node.parentNode) {\r\n                for (var i = 0, n = nodes.length, parent = node.parentNode; i < n; ++i) {\r\n                    parent.insertBefore(nodes[i], node);\r\n                }\r\n                parent.removeChild(node);\r\n            }\r\n            return nodes;\r\n        }\r\n    }\r\n}\r\n\r\nif (!ko.virtualElements.allowedBindings.html) {\r\n    // Virtual html binding\r\n    // SO Question: http://stackoverflow.com/a/15348139\r\n    var overridden = ko.bindingHandlers.html.update;\r\n    ko.bindingHandlers.html.update = function (element, valueAccessor) {\r\n        if (element.nodeType === 8) {\r\n            var html = ko_unwrap(valueAccessor());\r\n            if (html != null) {\r\n                var parsedNodes = ko.utils.parseHtmlFragment('' + html);\r\n                ko.virtualElements.setDomNodeChildren(element, parsedNodes);\r\n            } else {\r\n                ko.virtualElements.emptyNode(element);\r\n            }\r\n        } else {\r\n            overridden(element, valueAccessor);\r\n        }\r\n    };\r\n    ko.virtualElements.allowedBindings.html = true;\r\n}\r\n\r\nfunction wrapExpression(expressionText, node) {\r\n    var ownerDocument = node ? node.ownerDocument : document,\r\n        closeComment = true,\r\n        binding,\r\n        expressionText = trim(expressionText),\r\n        firstChar = expressionText[0],\r\n        lastChar = expressionText[expressionText.length - 1],\r\n        result = [],\r\n        matches;\r\n\r\n    if (firstChar === '#') {\r\n        if (lastChar === '/') {\r\n            binding = expressionText.slice(1, -1);\r\n        } else {\r\n            binding = expressionText.slice(1);\r\n            closeComment = false;\r\n        }\r\n        if (matches = binding.match(/^([^,\"'{}()\\/:[\\]\\s]+)\\s+([^\\s:].*)/)) {\r\n            binding = matches[1] + ':' + matches[2];\r\n        }\r\n    } else if (firstChar === '/') {\r\n        // replace only with a closing comment\r\n    } else if (firstChar === '{' && lastChar === '}') {\r\n        binding = \"html:\" + trim(expressionText.slice(1, -1));\r\n    } else {\r\n        binding = \"text:\" + trim(expressionText);\r\n    }\r\n\r\n    if (binding)\r\n        result.push(ownerDocument.createComment(\"ko \" + binding));\r\n    if (closeComment)\r\n        result.push(ownerDocument.createComment(\"/ko\"));\r\n    return result;\r\n};\r\n\r\nfunction enableInterpolationMarkup() {\r\n    addNodePreprocessor(interpolationMarkupPreprocessor);\r\n}\r\n\r\n// Export the preprocessor functions\r\nvar ko_punches_interpolationMarkup = ko_punches.interpolationMarkup = {\r\n    preprocessor: interpolationMarkupPreprocessor,\r\n    enable: enableInterpolationMarkup,\r\n    wrapExpression: wrapExpression\r\n};\r\n\r\n\r\nvar dataBind = 'data-bind';\r\nfunction attributeInterpolationMarkerPreprocessor(node) {\r\n    if (node.nodeType === 1 && node.attributes.length) {\r\n        var dataBindAttribute = node.getAttribute(dataBind);\r\n        for (var attrs = ko.utils.arrayPushAll([], node.attributes), n = attrs.length, i = 0; i < n; ++i) {\r\n            var attr = attrs[i];\r\n            if (attr.specified && attr.name != dataBind && attr.value.indexOf('{{') !== -1) {\r\n                var parts = [], attrValue = '';\r\n                function addText(text) {\r\n                    if (text)\r\n                        parts.push('\"' + text.replace(/\"/g, '\\\\\"') + '\"');\r\n                }\r\n                function addExpr(expressionText) {\r\n                    if (expressionText) {\r\n                        attrValue = expressionText;\r\n                        parts.push('ko.unwrap(' + expressionText + ')');\r\n                    }\r\n                }\r\n                parseInterpolationMarkup(attr.value, addText, addExpr);\r\n\r\n                if (parts.length > 1) {\r\n                    attrValue = '\"\"+' + parts.join('+');\r\n                }\r\n\r\n                if (attrValue) {\r\n                    var attrName = attr.name.toLowerCase();\r\n                    var attrBinding = ko_punches_attributeInterpolationMarkup.attributeBinding(attrName, attrValue, node) || attributeBinding(attrName, attrValue, node);\r\n                    if (!dataBindAttribute) {\r\n                        dataBindAttribute = attrBinding\r\n                    } else {\r\n                        dataBindAttribute += ',' + attrBinding;\r\n                    }\r\n                    node.setAttribute(dataBind, dataBindAttribute);\r\n                    // Using removeAttribute instead of removeAttributeNode because IE clears the\r\n                    // class if you use removeAttributeNode to remove the id.\r\n                    node.removeAttribute(attr.name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction attributeBinding(name, value, node) {\r\n    if (ko.getBindingHandler(name)) {\r\n        return name + ':' + value;\r\n    } else {\r\n        return 'attr.' + name + ':' + value;\r\n    }\r\n}\r\n\r\nfunction enableAttributeInterpolationMarkup() {\r\n    addNodePreprocessor(attributeInterpolationMarkerPreprocessor);\r\n}\r\n\r\nvar ko_punches_attributeInterpolationMarkup = ko_punches.attributeInterpolationMarkup = {\r\n    preprocessor: attributeInterpolationMarkerPreprocessor,\r\n    enable: enableAttributeInterpolationMarkup,\r\n    attributeBinding: attributeBinding\r\n};\r\n\r\n    return ko_punches;\r\n}));\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/knockout-punches/knockout.punches.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments to numbers.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toNumber(start);\n    start = start === start ? start : 0;\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toNumber(end) || 0;\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a\n * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n * Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value)) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length,\n *  else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash.range/index.js\n ** module id = 10\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./DateMonth.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./DateMonth.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./DateMonth.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/DateMonth.css\n ** module id = 11\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./bootstrap.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./bootstrap.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./bootstrap.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/bootstrap.css\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-define.js\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 14\n ** module chunks = 0\n **/"],"sourceRoot":""}